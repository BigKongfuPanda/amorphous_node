{"version":3,"sources":["webpack:///src/pages/statistics/statisticsOfRatio.vue","webpack:///./src/pages/statistics/statisticsOfRatio.vue?90aa","webpack:///./src/pages/statistics/statisticsOfRatio.vue"],"names":["statisticsOfRatio","data","searchForm","ratioType","date","concat","toConsumableArray_default","utils_const","ribbonTypeNames","ribbonWidths","ribbonThicknessLevels","loading","tableDataByCaster","tableDataByTeam","tableDataByCastId","computed","extends_default","Object","vuex_esm","uniqueAppearenceLevelList","this","appearenceList","reduce","acc","cur","includes","appearenceLevel","push","created","_this","asyncToGenerator_default","regenerator_default","a","mark","_callee","wrap","_context","prev","next","getRibbonToughnessLevelList","getRibbonTypeList","getRibbonWidthList","getRibbonThicknessLevelList","getLaminationLevelList","getAppearenceLevelList","getTableData","stop","methods","clickSearch","reset","_this2","params","arguments","length","undefined","_params","startTime","endTime","ribbonTypeNameJson","stringify_default","ribbonWidthJson","assign_default","$http","urlmap","queryStatisticsRatio","then","list","catch","err","console","log","finally","tabsClick","tab","event","name","statistics_statisticsOfRatio","render","_vm","_h","$createElement","_c","_self","staticClass","attrs","separator-class","_v","model","inline","label","type","default-time","clearable","start-placeholder","end-placeholder","value","callback","$$v","$set","expression","placeholder","multiple","collapse-tags","_l","item","key","ribbonTypeId","ribbonTypeName","ribbonWidthId","ribbonWidth","icon","on","click","tab-click","directives","rawName","staticStyle","width","stripe","border","prop","align","staticRenderFns","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"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","file":"static/js/statisticsOfRatio.31acc485179429cd4120.js","sourcesContent":["<template>\r\n  <div>\r\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\" class=\"crumb\">\r\n      <el-breadcrumb-item>数据统计</el-breadcrumb-item>\r\n      <el-breadcrumb-item>带材质量统计</el-breadcrumb-item>\r\n    </el-breadcrumb>\r\n    <el-form class=\"search_bar\" :model=\"searchForm\" :inline=\"true\">\r\n      <el-form-item label=\"喷带日期：\">\r\n        <el-date-picker\r\n          v-model=\"searchForm.date\"\r\n          type=\"daterange\"\r\n          :default-time=\"['00:00:00', '23:59:59']\"\r\n          :clearable=\"false\"\r\n          start-placeholder=\"开始日期\"\r\n          end-placeholder=\"结束日期\"\r\n        >\r\n        </el-date-picker>\r\n      </el-form-item>\r\n      <el-form-item label=\"材质：\">\r\n        <el-select\r\n          v-model=\"searchForm.ribbonTypeNames\"\r\n          placeholder=\"请选择\"\r\n          multiple\r\n          collapse-tags\r\n        >\r\n          <el-option\r\n            v-for=\"item in ribbonTypeList\"\r\n            :key=\"item.ribbonTypeId\"\r\n            :value=\"item.ribbonTypeName\"\r\n            :label=\"item.ribbonTypeName\"\r\n          ></el-option>\r\n        </el-select>\r\n      </el-form-item>\r\n      <el-form-item label=\"规格：\">\r\n        <el-select\r\n          v-model=\"searchForm.ribbonWidths\"\r\n          placeholder=\"请选择\"\r\n          multiple\r\n          collapse-tags\r\n        >\r\n          <el-option\r\n            v-for=\"item in ribbonWidthList\"\r\n            :key=\"item.ribbonWidthId\"\r\n            :label=\"item.ribbonWidth\"\r\n            :value=\"item.ribbonWidth\"\r\n          ></el-option>\r\n        </el-select>\r\n      </el-form-item>\r\n      <!-- <el-form-item label=\"厚度级别：\">\r\n        <el-select\r\n          v-model=\"searchForm.ribbonThicknessLevels\"\r\n          placeholder=\"请选择\"\r\n          multiple\r\n          collapse-tags\r\n        >\r\n          <el-option\r\n            v-for=\"item in ribbonThicknessLevelList\"\r\n            :key=\"item.ribbonThicknessLevelId\"\r\n            :label=\"item.ribbonThicknessLevel\"\r\n            :value=\"item.ribbonThicknessLevel\"\r\n          ></el-option>\r\n        </el-select>\r\n      </el-form-item>\r\n      <el-form-item label=\"叠片级别：\">\r\n        <el-select\r\n          v-model=\"searchForm.laminationLevels\"\r\n          placeholder=\"请选择\"\r\n          multiple\r\n          collapse-tags\r\n        >\r\n          <el-option\r\n            v-for=\"item in laminationLevelList\"\r\n            :key=\"item.laminationLevelId\"\r\n            :label=\"item.laminationLevel\"\r\n            :value=\"item.laminationLevel\"\r\n          ></el-option>\r\n        </el-select>\r\n      </el-form-item>\r\n      <el-form-item label=\"韧性级别：\">\r\n        <el-select\r\n          v-model=\"searchForm.ribbonToughnessLevels\"\r\n          placeholder=\"请选择\"\r\n          multiple\r\n          collapse-tags\r\n        >\r\n          <el-option\r\n            v-for=\"item in ribbonToughnessLevelList\"\r\n            :key=\"item.ribbonToughnessLevelId\"\r\n            :label=\"item.ribbonToughnessLevel\"\r\n            :value=\"item.ribbonToughnessLevel\"\r\n          ></el-option>\r\n        </el-select>\r\n      </el-form-item>\r\n      <el-form-item label=\"外观级别：\">\r\n        <el-select\r\n          v-model=\"searchForm.appearenceLevels\"\r\n          placeholder=\"请选择\"\r\n          multiple\r\n          collapse-tags\r\n        >\r\n          <el-option\r\n            v-for=\"(appearenceLevel, index) in uniqueAppearenceLevelList\"\r\n            :key=\"index\"\r\n            :label=\"appearenceLevel\"\r\n            :value=\"appearenceLevel\"\r\n          ></el-option>\r\n        </el-select>\r\n      </el-form-item> -->\r\n      <el-form-item>\r\n        <el-button type=\"primary\" icon=\"el-icon-search\" @click=\"clickSearch\"\r\n          >搜索</el-button\r\n        >\r\n        <el-button type=\"primary\" icon=\"el-icon-refresh\" @click=\"reset\"\r\n          >重置</el-button\r\n        >\r\n      </el-form-item>\r\n    </el-form>\r\n    <div class=\"main_bd\">\r\n      <el-tabs\r\n        type=\"border-card\"\r\n        v-model=\"searchForm.ratioType\"\r\n        @tab-click=\"tabsClick\"\r\n      >\r\n        <el-tab-pane label=\"喷带手\" name=\"byCaster\">\r\n          <el-table\r\n            :data=\"tableDataByCaster\"\r\n            stripe\r\n            border\r\n            style=\"width:100%\"\r\n            v-loading=\"loading\"\r\n          >\r\n            <el-table-column\r\n              prop=\"caster\"\r\n              label=\"喷带手\"\r\n              align=\"center\"\r\n              width=\"70px\"\r\n            ></el-table-column>\r\n            <el-table-column\r\n              prop=\"totalHeatNum\"\r\n              label=\"炉次\"\r\n              align=\"center\"\r\n              width=\"50px\"\r\n            ></el-table-column>\r\n            <el-table-column\r\n              prop=\"lowHeatNum\"\r\n              label=\"低产炉次\"\r\n              align=\"center\"\r\n              width=\"80px\"\r\n            ></el-table-column>\r\n            <el-table-column\r\n              prop=\"zeroHeatNum\"\r\n              label=\"零产炉次\"\r\n              align=\"center\"\r\n              width=\"80px\"\r\n            >\r\n            </el-table-column>\r\n            <el-table-column\r\n              prop=\"lowAndZeroRatio\"\r\n              label=\"低产零产率\"\r\n              align=\"center\"\r\n              width=\"70px\"\r\n            ></el-table-column>\r\n            <el-table-column\r\n              prop=\"nozzleNum\"\r\n              label=\"喷嘴数\"\r\n              align=\"center\"\r\n              width=\"70px\"\r\n            ></el-table-column>\r\n            <el-table-column\r\n              prop=\"alloyTotalWeight\"\r\n              label=\"投入母合金(kg)\"\r\n              align=\"center\"\r\n              width=\"100px\"\r\n            ></el-table-column>\r\n            <el-table-column\r\n              prop=\"rawWeight\"\r\n              label=\"大盘毛重(kg)\"\r\n              align=\"center\"\r\n              width=\"110px\"\r\n            ></el-table-column>\r\n            <el-table-column\r\n              prop=\"coilNetWeight\"\r\n              label=\"倒卷净重(kg)\"\r\n              align=\"center\"\r\n              width=\"110px\"\r\n            ></el-table-column>\r\n            <el-table-column\r\n              prop=\"inPlanStoredWeight\"\r\n              label=\"计划内入库(kg)\"\r\n              align=\"center\"\r\n              width=\"90px\"\r\n            ></el-table-column>\r\n            <el-table-column\r\n              prop=\"outPlanStoredWeight\"\r\n              label=\"计划外入库(kg)\"\r\n              align=\"center\"\r\n              width=\"90px\"\r\n            ></el-table-column>\r\n            <el-table-column\r\n              prop=\"totalStoredWeight\"\r\n              label=\"入库重量(kg)\"\r\n              align=\"center\"\r\n              width=\"110px\"\r\n            ></el-table-column>\r\n            <el-table-column\r\n              prop=\"unqualifiedWeight\"\r\n              label=\"不合格重量(kg)\"\r\n              align=\"center\"\r\n              width=\"80px\"\r\n            ></el-table-column>\r\n            <el-table-column\r\n              prop=\"uselessRibbonWeight\"\r\n              label=\"废带(kg)\"\r\n              align=\"center\"\r\n              width=\"80px\"\r\n            ></el-table-column>\r\n            <el-table-column\r\n              prop=\"effectiveMeltRatio\"\r\n              label=\"有效过钢率\"\r\n              align=\"center\"\r\n              width=\"80px\"\r\n            ></el-table-column>\r\n            <el-table-column\r\n              prop=\"rollRatio\"\r\n              label=\"卷曲率\"\r\n              align=\"center\"\r\n              width=\"80px\"\r\n            ></el-table-column>\r\n            <el-table-column\r\n              prop=\"qualifiedRatio\"\r\n              label=\"合格率\"\r\n              align=\"center\"\r\n              width=\"80px\"\r\n            ></el-table-column>\r\n            <el-table-column\r\n              prop=\"totalRatio\"\r\n              label=\"直通率\"\r\n              align=\"center\"\r\n              width=\"80px\"\r\n            ></el-table-column>\r\n            <el-table-column\r\n              prop=\"inPlanRatio\"\r\n              label=\"订单合格率\"\r\n              align=\"center\"\r\n              width=\"80px\"\r\n            ></el-table-column>\r\n            <!-- <el-table-column label=\"质量等级分布\" align=\"center\" width=\"110px\">\r\n              <el-table-column label=\"A\" prop=\"qualityOfA\"></el-table-column>\r\n              <el-table-column label=\"B\" prop=\"qualityOfB\"></el-table-column>\r\n              <el-table-column label=\"C\" prop=\"qualityOfC\"></el-table-column>\r\n              <el-table-column label=\"D\" prop=\"qualityOfD\"></el-table-column>\r\n              <el-table-column label=\"E\" prop=\"qualityOfE\"></el-table-column>\r\n            </el-table-column>\r\n            <el-table-column\r\n              prop=\"qualityOfGood\"\r\n              label=\"好(kg)\"\r\n              align=\"center\"\r\n              width=\"70px\"\r\n            ></el-table-column>\r\n            <el-table-column\r\n              prop=\"qualityOfFine\"\r\n              label=\"良(kg)\"\r\n              align=\"center\"\r\n              width=\"70px\"\r\n            ></el-table-column>\r\n            <el-table-column\r\n              prop=\"qualityOfNormal\"\r\n              label=\"中(kg)\"\r\n              align=\"center\"\r\n              width=\"70px\"\r\n            ></el-table-column> -->\r\n          </el-table>\r\n        </el-tab-pane>\r\n        <el-tab-pane label=\"班组\" name=\"byTeam\">\r\n          <el-table\r\n            :data=\"tableDataByTeam\"\r\n            stripe\r\n            border\r\n            style=\"width:100%\"\r\n            v-loading=\"loading\"\r\n          >\r\n            <el-table-column\r\n              prop=\"team\"\r\n              label=\"班组\"\r\n              align=\"center\"\r\n              width=\"70px\"\r\n            ></el-table-column>\r\n            <el-table-column\r\n              prop=\"totalHeatNum\"\r\n              label=\"炉次\"\r\n              align=\"center\"\r\n              width=\"50px\"\r\n            ></el-table-column>\r\n            <el-table-column\r\n              prop=\"lowHeatNum\"\r\n              label=\"低产炉次\"\r\n              align=\"center\"\r\n              width=\"80px\"\r\n            ></el-table-column>\r\n            <el-table-column\r\n              prop=\"zeroHeatNum\"\r\n              label=\"零产炉次\"\r\n              align=\"center\"\r\n              width=\"80px\"\r\n            >\r\n            </el-table-column>\r\n            <el-table-column\r\n              prop=\"lowAndZeroRatio\"\r\n              label=\"低产零产率\"\r\n              align=\"center\"\r\n              width=\"70px\"\r\n            ></el-table-column>\r\n            <el-table-column\r\n              prop=\"nozzleNum\"\r\n              label=\"喷嘴数\"\r\n              align=\"center\"\r\n              width=\"70px\"\r\n            ></el-table-column>\r\n            <el-table-column\r\n              prop=\"alloyTotalWeight\"\r\n              label=\"投入母合金(kg)\"\r\n              align=\"center\"\r\n              width=\"100px\"\r\n            ></el-table-column>\r\n            <el-table-column\r\n              prop=\"rawWeight\"\r\n              label=\"大盘毛重(kg)\"\r\n              align=\"center\"\r\n              width=\"110px\"\r\n            ></el-table-column>\r\n            <el-table-column\r\n              prop=\"coilNetWeight\"\r\n              label=\"倒卷净重(kg)\"\r\n              align=\"center\"\r\n              width=\"110px\"\r\n            ></el-table-column>\r\n            <el-table-column\r\n              prop=\"inPlanStoredWeight\"\r\n              label=\"计划内入库(kg)\"\r\n              align=\"center\"\r\n              width=\"90px\"\r\n            ></el-table-column>\r\n            <el-table-column\r\n              prop=\"outPlanStoredWeight\"\r\n              label=\"计划外入库(kg)\"\r\n              align=\"center\"\r\n              width=\"90px\"\r\n            ></el-table-column>\r\n            <el-table-column\r\n              prop=\"totalStoredWeight\"\r\n              label=\"入库重量(kg)\"\r\n              align=\"center\"\r\n              width=\"110px\"\r\n            ></el-table-column>\r\n            <el-table-column\r\n              prop=\"unqualifiedWeight\"\r\n              label=\"不合格重量(kg)\"\r\n              align=\"center\"\r\n              width=\"80px\"\r\n            ></el-table-column>\r\n            <el-table-column\r\n              prop=\"uselessRibbonWeight\"\r\n              label=\"废带(kg)\"\r\n              align=\"center\"\r\n              width=\"80px\"\r\n            ></el-table-column>\r\n            <el-table-column\r\n              prop=\"effectiveMeltRatio\"\r\n              label=\"有效过钢率\"\r\n              align=\"center\"\r\n              width=\"80px\"\r\n            ></el-table-column>\r\n            <el-table-column\r\n              prop=\"rollRatio\"\r\n              label=\"卷曲率\"\r\n              align=\"center\"\r\n              width=\"80px\"\r\n            ></el-table-column>\r\n            <el-table-column\r\n              prop=\"qualifiedRatio\"\r\n              label=\"合格率\"\r\n              align=\"center\"\r\n              width=\"80px\"\r\n            ></el-table-column>\r\n            <el-table-column\r\n              prop=\"totalRatio\"\r\n              label=\"直通率\"\r\n              align=\"center\"\r\n              width=\"80px\"\r\n            ></el-table-column>\r\n            <el-table-column\r\n              prop=\"inPlanRatio\"\r\n              label=\"订单合格率\"\r\n              align=\"center\"\r\n              width=\"80px\"\r\n            ></el-table-column>\r\n            <!-- <el-table-column label=\"质量等级分布\" align=\"center\" width=\"110px\">\r\n              <el-table-column label=\"A\" prop=\"qualityOfA\"></el-table-column>\r\n              <el-table-column label=\"B\" prop=\"qualityOfB\"></el-table-column>\r\n              <el-table-column label=\"C\" prop=\"qualityOfC\"></el-table-column>\r\n              <el-table-column label=\"D\" prop=\"qualityOfD\"></el-table-column>\r\n              <el-table-column label=\"E\" prop=\"qualityOfE\"></el-table-column>\r\n            </el-table-column>\r\n            <el-table-column prop=\"qualityOfGood\" label=\"好(kg)\" align=\"center\" width=\"70px\"></el-table-column>\r\n            <el-table-column prop=\"qualityOfFine\" label=\"良(kg)\" align=\"center\" width=\"70px\"></el-table-column>\r\n            <el-table-column prop=\"qualityOfNormal\" label=\"中(kg)\" align=\"center\" width=\"70px\"></el-table-column> -->\r\n          </el-table>\r\n        </el-tab-pane>\r\n        <el-tab-pane label=\"机组\" name=\"byCastId\">\r\n          <el-table\r\n            :data=\"tableDataByCastId\"\r\n            stripe\r\n            border\r\n            style=\"width:100%\"\r\n            v-loading=\"loading\"\r\n          >\r\n            <el-table-column\r\n              prop=\"castId\"\r\n              label=\"机组\"\r\n              align=\"center\"\r\n              width=\"70px\"\r\n            ></el-table-column>\r\n            <el-table-column\r\n              prop=\"totalHeatNum\"\r\n              label=\"炉次\"\r\n              align=\"center\"\r\n              width=\"50px\"\r\n            ></el-table-column>\r\n            <el-table-column\r\n              prop=\"lowHeatNum\"\r\n              label=\"低产炉次\"\r\n              align=\"center\"\r\n              width=\"80px\"\r\n            ></el-table-column>\r\n            <el-table-column\r\n              prop=\"zeroHeatNum\"\r\n              label=\"零产炉次\"\r\n              align=\"center\"\r\n              width=\"80px\"\r\n            >\r\n            </el-table-column>\r\n            <el-table-column\r\n              prop=\"lowAndZeroRatio\"\r\n              label=\"低产零产率\"\r\n              align=\"center\"\r\n              width=\"70px\"\r\n            ></el-table-column>\r\n            <el-table-column\r\n              prop=\"nozzleNum\"\r\n              label=\"喷嘴数\"\r\n              align=\"center\"\r\n              width=\"70px\"\r\n            ></el-table-column>\r\n            <el-table-column\r\n              prop=\"alloyTotalWeight\"\r\n              label=\"投入母合金(kg)\"\r\n              align=\"center\"\r\n              width=\"100px\"\r\n            ></el-table-column>\r\n            <el-table-column\r\n              prop=\"rawWeight\"\r\n              label=\"大盘毛重(kg)\"\r\n              align=\"center\"\r\n              width=\"110px\"\r\n            ></el-table-column>\r\n            <el-table-column\r\n              prop=\"coilNetWeight\"\r\n              label=\"倒卷净重(kg)\"\r\n              align=\"center\"\r\n              width=\"110px\"\r\n            ></el-table-column>\r\n            <el-table-column\r\n              prop=\"inPlanStoredWeight\"\r\n              label=\"计划内入库(kg)\"\r\n              align=\"center\"\r\n              width=\"90px\"\r\n            ></el-table-column>\r\n            <el-table-column\r\n              prop=\"outPlanStoredWeight\"\r\n              label=\"计划外入库(kg)\"\r\n              align=\"center\"\r\n              width=\"90px\"\r\n            ></el-table-column>\r\n            <el-table-column\r\n              prop=\"totalStoredWeight\"\r\n              label=\"入库重量(kg)\"\r\n              align=\"center\"\r\n              width=\"110px\"\r\n            ></el-table-column>\r\n            <el-table-column\r\n              prop=\"unqualifiedWeight\"\r\n              label=\"不合格重量(kg)\"\r\n              align=\"center\"\r\n              width=\"80px\"\r\n            ></el-table-column>\r\n            <el-table-column\r\n              prop=\"uselessRibbonWeight\"\r\n              label=\"废带(kg)\"\r\n              align=\"center\"\r\n              width=\"80px\"\r\n            ></el-table-column>\r\n            <el-table-column\r\n              prop=\"effectiveMeltRatio\"\r\n              label=\"有效过钢率\"\r\n              align=\"center\"\r\n              width=\"80px\"\r\n            ></el-table-column>\r\n            <el-table-column\r\n              prop=\"rollRatio\"\r\n              label=\"卷曲率\"\r\n              align=\"center\"\r\n              width=\"80px\"\r\n            ></el-table-column>\r\n            <el-table-column\r\n              prop=\"qualifiedRatio\"\r\n              label=\"合格率\"\r\n              align=\"center\"\r\n              width=\"80px\"\r\n            ></el-table-column>\r\n            <el-table-column\r\n              prop=\"totalRatio\"\r\n              label=\"直通率\"\r\n              align=\"center\"\r\n              width=\"80px\"\r\n            ></el-table-column>\r\n            <el-table-column\r\n              prop=\"inPlanRatio\"\r\n              label=\"订单合格率\"\r\n              align=\"center\"\r\n              width=\"80px\"\r\n            ></el-table-column>\r\n            <!-- <el-table-column label=\"质量等级分布\" align=\"center\" width=\"110px\">\r\n              <el-table-column label=\"A\" prop=\"qualityOfA\"></el-table-column>\r\n              <el-table-column label=\"B\" prop=\"qualityOfB\"></el-table-column>\r\n              <el-table-column label=\"C\" prop=\"qualityOfC\"></el-table-column>\r\n              <el-table-column label=\"D\" prop=\"qualityOfD\"></el-table-column>\r\n              <el-table-column label=\"E\" prop=\"qualityOfE\"></el-table-column>\r\n            </el-table-column>\r\n            <el-table-column\r\n              prop=\"qualityOfGood\"\r\n              label=\"好(kg)\"\r\n              align=\"center\"\r\n              width=\"70px\"\r\n            ></el-table-column>\r\n            <el-table-column\r\n              prop=\"qualityOfFine\"\r\n              label=\"良(kg)\"\r\n              align=\"center\"\r\n              width=\"70px\"\r\n            ></el-table-column>\r\n            <el-table-column\r\n              prop=\"qualityOfNormal\"\r\n              label=\"中(kg)\"\r\n              align=\"center\"\r\n              width=\"70px\"\r\n            ></el-table-column> -->\r\n          </el-table>\r\n        </el-tab-pane>\r\n      </el-tabs>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport urlmap from \"@/utils/urlmap\";\r\nimport { defaultDateRange } from \"@/utils/const\";\r\nimport { mapState, mapActions } from \"vuex\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      searchForm: {\r\n        ratioType: \"byCaster\",\r\n        date: [...defaultDateRange],\r\n        ribbonTypeNames: [],\r\n        ribbonWidths: [],\r\n        ribbonThicknessLevels: []\r\n      },\r\n      loading: false,\r\n      tableDataByCaster: [],\r\n      tableDataByTeam: [],\r\n      tableDataByCastId: []\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapState([\r\n      \"ribbonToughnessLevelList\",\r\n      \"ribbonTypeList\",\r\n      \"ribbonWidthList\",\r\n      \"ribbonThicknessLevelList\",\r\n      \"laminationLevelList\",\r\n      \"appearenceList\"\r\n    ]),\r\n    uniqueAppearenceLevelList() {\r\n      return this.appearenceList.reduce((acc, cur) => {\r\n        if (!acc.includes(cur.appearenceLevel)) {\r\n          acc.push(cur.appearenceLevel);\r\n        }\r\n        return acc;\r\n      }, []);\r\n    }\r\n  },\r\n  async created() {\r\n    await this.getRibbonToughnessLevelList();\r\n    await this.getRibbonTypeList();\r\n    await this.getRibbonWidthList();\r\n    await this.getRibbonThicknessLevelList();\r\n    await this.getLaminationLevelList();\r\n    await this.getAppearenceLevelList();\r\n    this.getTableData();\r\n  },\r\n  methods: {\r\n    ...mapActions([\r\n      \"getRibbonToughnessLevelList\",\r\n      \"getRibbonTypeList\",\r\n      \"getRibbonWidthList\",\r\n      \"getRibbonThicknessLevelList\",\r\n      \"getLaminationLevelList\",\r\n      \"getAppearenceLevelList\"\r\n    ]),\r\n    clickSearch() {\r\n      this.getTableData();\r\n    },\r\n    reset() {\r\n      this.searchForm = {\r\n        ratioType: this.searchForm.ratioType,\r\n        date: [...defaultDateRange],\r\n        ribbonTypeNames: [],\r\n        ribbonWidths: []\r\n        // ribbonThicknessLevels: [],\r\n        // laminationLevels: [],\r\n        // ribbonToughnessLevels: [],\r\n        // appearenceLevels: []\r\n      };\r\n      this.getTableData();\r\n    },\r\n    getTableData(params = {}) {\r\n      const _params = {\r\n        ratioType: this.searchForm.ratioType,\r\n        startTime: this.searchForm.date[0],\r\n        endTime: this.searchForm.date[1],\r\n        ribbonTypeNameJson: JSON.stringify(this.searchForm.ribbonTypeNames),\r\n        ribbonWidthJson: JSON.stringify(this.searchForm.ribbonWidths)\r\n        // ribbonThicknessLevelJson: JSON.stringify(\r\n        //   this.searchForm.ribbonThicknessLevels\r\n        // ),\r\n        // laminationLevelJson: JSON.stringify(this.searchForm.laminationLevels),\r\n        // ribbonToughnessLevelJson: JSON.stringify(\r\n        //   this.searchForm.ribbonToughnessLevels\r\n        // ),\r\n        // appearenceLevelJson: JSON.stringify(this.searchForm.appearenceLevels)\r\n      };\r\n      Object.assign(params, _params);\r\n      if (this.loading) {\r\n        return;\r\n      }\r\n      this.loading = true;\r\n      if (this.searchForm.ratioType === \"byCaster\") {\r\n        this.$http(\"get\", urlmap.queryStatisticsRatio, params)\r\n          .then(data => {\r\n            // const list = data.list;\r\n\r\n            // // 第一次遍历，求出每一炉的各种重量\r\n            // list.forEach(item => {\r\n            //   item.caster = item._id;\r\n            //   item.lowHeatNum = 0;\r\n            //   item.zeroHeatNum = 0;\r\n            //   item.uselessRibbonWeight = 0;\r\n            //   const furnaceList = item.furnaceList;\r\n            //   furnaceList.forEach(furnace => {\r\n            //     // 废带重量\r\n            //     item.uselessRibbonWeight += furnace.uselessRibbonWeight == undefined ? 0 : furnace.uselessRibbonWeight;\r\n            //     // 低产零产率：6,8,9机组 <= 80kg，7机组 <=50，算低产\r\n            //     if (furnace.rawWeight == 0) {\r\n            //       item.zeroHeatNum++;\r\n            //     }\r\n            //     if (furnace.castId === 7) {\r\n            //       if (furnace.rawWeight > 0 && furnace.rawWeight <= 50) {\r\n            //         item.lowHeatNum++;\r\n            //       }\r\n            //     } else {\r\n            //       if (furnace.rawWeight > 0 && furnace.rawWeight <= 80) {\r\n            //         item.lowHeatNum++;\r\n            //       }\r\n            //     }\r\n            //     item.lowAndZeroRatio = ((item.lowHeatNum + item.zeroHeatNum) * 100 / item.totalHeatNum).toFixed(2) + '%';\r\n\r\n            //     furnace.coilNetWeight = 0;\r\n            //     furnace.inPlanStoredWeight = 0;\r\n            //     furnace.outPlanStoredWeight = 0;\r\n            //     furnace.totalStoredWeight = 0;\r\n            //     furnace.qualityOfA = 0;\r\n            //     furnace.qualityOfB = 0;\r\n            //     furnace.qualityOfC = 0;\r\n            //     furnace.qualityOfD = 0;\r\n            //     furnace.qualityOfE = 0;\r\n            //     furnace.qualityOfGood = 0;\r\n            //     furnace.qualityOfFine = 0;\r\n            //     furnace.qualityOfNormal = 0;\r\n            //     furnace.fromMeasure.forEach(measure => {\r\n            //       furnace.coilNetWeight += measure.coilNetWeight == undefined ? 0 : measure.coilNetWeight;\r\n            //       furnace.inPlanStoredWeight += measure.inPlanStoredWeight == undefined ? 0 : measure.inPlanStoredWeight;\r\n            //       furnace.outPlanStoredWeight += measure.outPlanStoredWeight == undefined ? 0 : measure.outPlanStoredWeight;\r\n            //       furnace.totalStoredWeight += measure.totalStoredWeight == undefined ? 0 : measure.totalStoredWeight;\r\n            //       furnace.qualityOfA += measure.qualityOfA == undefined ? 0 : measure.qualityOfA;\r\n            //       furnace.qualityOfB += measure.qualityOfB == undefined ? 0 : measure.qualityOfB;\r\n            //       furnace.qualityOfC += measure.qualityOfC == undefined ? 0 : measure.qualityOfC;\r\n            //       furnace.qualityOfD += measure.qualityOfD == undefined ? 0 : measure.qualityOfD;\r\n            //       furnace.qualityOfE += measure.qualityOfE == undefined ? 0 : measure.qualityOfE;\r\n            //       furnace.qualityOfGood += measure.qualityOfGood == undefined ? 0 : measure.qualityOfGood;\r\n            //       furnace.qualityOfFine += measure.qualityOfFine == undefined ? 0 : measure.qualityOfFine;\r\n            //       furnace.qualityOfNormal += measure.qualityOfNormal == undefined ? 0 : measure.qualityOfNormal;\r\n            //     });\r\n            //   });\r\n            // });\r\n\r\n            // // 第二次遍历，求出部分的结果\r\n            // list.forEach(item => {\r\n            //   item.coilNetWeight = 0;\r\n            //   item.inPlanStoredWeight = 0;\r\n            //   item.outPlanStoredWeight = 0;\r\n            //   item.totalStoredWeight = 0;\r\n            //   item.qualityOfA = 0;\r\n            //   item.qualityOfB = 0;\r\n            //   item.qualityOfC = 0;\r\n            //   item.qualityOfD = 0;\r\n            //   item.qualityOfE = 0;\r\n            //   item.qualityOfGood = 0;\r\n            //   item.qualityOfFine = 0;\r\n            //   item.qualityOfNormal = 0;\r\n            //   const furnaceList = item.furnaceList;\r\n            //   furnaceList.forEach(furnace => {\r\n            //     item.coilNetWeight += furnace.coilNetWeight;\r\n            //     item.inPlanStoredWeight += furnace.inPlanStoredWeight;\r\n            //     item.outPlanStoredWeight += furnace.outPlanStoredWeight;\r\n            //     item.totalStoredWeight += furnace.totalStoredWeight;\r\n            //     item.qualityOfA += furnace.qualityOfA;\r\n            //     item.qualityOfB += furnace.qualityOfB;\r\n            //     item.qualityOfC += furnace.qualityOfC;\r\n            //     item.qualityOfD += furnace.qualityOfD;\r\n            //     item.qualityOfE += furnace.qualityOfE;\r\n            //     item.qualityOfGood += furnace.qualityOfGood;\r\n            //     item.qualityOfFine += furnace.qualityOfFine;\r\n            //     item.qualityOfNormal += furnace.qualityOfNormal;\r\n            //   });\r\n            // });\r\n\r\n            // // 第三次遍历，求出合格率直通率等\r\n            // list.forEach(item => {\r\n            //   item.totalStoredWeight = item.totalStoredWeight.toFixed(2);\r\n            //   // 不合格重量\r\n            //   item.unqualifiedWeight = item.rawWeight - item.totalStoredWeight;\r\n            //   // 有效过钢率，卷曲率，合格率，直通率\r\n            //   item.qualifiedRatio = item.totalStoredWeight / item.rawWeight;\r\n            //   item.effectiveMeltRatio = (item.rawWeight + item.uselessRibbonWeight) / item.alloyTotalWeight;\r\n            //   item.rollRatio = item.rawWeight / (item.rawWeight + item.uselessRibbonWeight);\r\n            //   item.totalRatio = ((item.effectiveMeltRatio * item.rollRatio * item.qualifiedRatio) * 100).toFixed(2) + '%';\r\n            //   item.qualifiedRatio = (item.qualifiedRatio * 100).toFixed(2) + '%';\r\n            //   item.effectiveMeltRatio = (item.effectiveMeltRatio * 100).toFixed(2) + '%';\r\n            //   item.rollRatio = (item.rollRatio * 100).toFixed(2) + '%';\r\n            //   // 订单合格率\r\n            //   item.inPlanRatio = ((item.inPlanStoredWeight / item.rawWeight) * 100).toFixed(2) + '%';\r\n            // });\r\n            this.tableDataByCaster = data.list;\r\n          })\r\n          .catch(err => {\r\n            console.log(err);\r\n          })\r\n          .finally(() => {\r\n            this.loading = false;\r\n          });\r\n      } else if (this.searchForm.ratioType === \"byTeam\") {\r\n        this.$http(\"get\", urlmap.queryStatisticsRatio, params)\r\n          .then(data => {\r\n            // const list = data.list;\r\n\r\n            // // 第一次遍历，求出每一炉的各种重量\r\n            // list.forEach(item => {\r\n            //   item.team = item._id;\r\n            //   item.lowHeatNum = 0;\r\n            //   item.zeroHeatNum = 0;\r\n            //   item.uselessRibbonWeight = 0;\r\n            //   const furnaceList = item.furnaceList;\r\n            //   furnaceList.forEach(furnace => {\r\n            //     // 废带重量\r\n            //     item.uselessRibbonWeight += furnace.uselessRibbonWeight == undefined ? 0 : furnace.uselessRibbonWeight;\r\n            //     // 低产零产率：6,8,9机组 <= 80kg，7机组 <=50，算低产\r\n            //     if (furnace.rawWeight == 0) {\r\n            //       item.zeroHeatNum++;\r\n            //     }\r\n            //     if (furnace.castId === 7) {\r\n            //       if (furnace.rawWeight > 0 && furnace.rawWeight <= 50) {\r\n            //         item.lowHeatNum++;\r\n            //       }\r\n            //     } else {\r\n            //       if (furnace.rawWeight > 0 && furnace.rawWeight <= 80) {\r\n            //         item.lowHeatNum++;\r\n            //       }\r\n            //     }\r\n            //     item.lowAndZeroRatio = ((item.lowHeatNum + item.zeroHeatNum) * 100 / item.totalHeatNum).toFixed(2) + '%';\r\n\r\n            //     furnace.coilNetWeight = 0;\r\n            //     furnace.inPlanStoredWeight = 0;\r\n            //     furnace.outPlanStoredWeight = 0;\r\n            //     furnace.totalStoredWeight = 0;\r\n            //     furnace.qualityOfA = 0;\r\n            //     furnace.qualityOfB = 0;\r\n            //     furnace.qualityOfC = 0;\r\n            //     furnace.qualityOfD = 0;\r\n            //     furnace.qualityOfE = 0;\r\n            //     furnace.qualityOfGood = 0;\r\n            //     furnace.qualityOfFine = 0;\r\n            //     furnace.qualityOfNormal = 0;\r\n            //     furnace.fromMeasure.forEach(measure => {\r\n            //       furnace.coilNetWeight += measure.coilNetWeight == undefined ? 0 : measure.coilNetWeight;\r\n            //       furnace.inPlanStoredWeight += measure.inPlanStoredWeight == undefined ? 0 : measure.inPlanStoredWeight;\r\n            //       furnace.outPlanStoredWeight += measure.outPlanStoredWeight == undefined ? 0 : measure.outPlanStoredWeight;\r\n            //       furnace.totalStoredWeight += measure.totalStoredWeight == undefined ? 0 : measure.totalStoredWeight;\r\n            //       furnace.qualityOfA += measure.qualityOfA == undefined ? 0 : measure.qualityOfA;\r\n            //       furnace.qualityOfB += measure.qualityOfB == undefined ? 0 : measure.qualityOfB;\r\n            //       furnace.qualityOfC += measure.qualityOfC == undefined ? 0 : measure.qualityOfC;\r\n            //       furnace.qualityOfD += measure.qualityOfD == undefined ? 0 : measure.qualityOfD;\r\n            //       furnace.qualityOfE += measure.qualityOfE == undefined ? 0 : measure.qualityOfE;\r\n            //       furnace.qualityOfGood += measure.qualityOfGood == undefined ? 0 : measure.qualityOfGood;\r\n            //       furnace.qualityOfFine += measure.qualityOfFine == undefined ? 0 : measure.qualityOfFine;\r\n            //       furnace.qualityOfNormal += measure.qualityOfNormal == undefined ? 0 : measure.qualityOfNormal;\r\n            //     });\r\n            //   });\r\n            // });\r\n\r\n            // // 第二次遍历，求出部分的结果\r\n            // list.forEach(item => {\r\n            //   item.coilNetWeight = 0;\r\n            //   item.inPlanStoredWeight = 0;\r\n            //   item.outPlanStoredWeight = 0;\r\n            //   item.totalStoredWeight = 0;\r\n            //   item.qualityOfA = 0;\r\n            //   item.qualityOfB = 0;\r\n            //   item.qualityOfC = 0;\r\n            //   item.qualityOfD = 0;\r\n            //   item.qualityOfE = 0;\r\n            //   item.qualityOfGood = 0;\r\n            //   item.qualityOfFine = 0;\r\n            //   item.qualityOfNormal = 0;\r\n            //   const furnaceList = item.furnaceList;\r\n            //   furnaceList.forEach(furnace => {\r\n            //     item.coilNetWeight += furnace.coilNetWeight;\r\n            //     item.inPlanStoredWeight += furnace.inPlanStoredWeight;\r\n            //     item.outPlanStoredWeight += furnace.outPlanStoredWeight;\r\n            //     item.totalStoredWeight += furnace.totalStoredWeight;\r\n            //     item.qualityOfA += furnace.qualityOfA;\r\n            //     item.qualityOfB += furnace.qualityOfB;\r\n            //     item.qualityOfC += furnace.qualityOfC;\r\n            //     item.qualityOfD += furnace.qualityOfD;\r\n            //     item.qualityOfE += furnace.qualityOfE;\r\n            //     item.qualityOfGood += furnace.qualityOfGood;\r\n            //     item.qualityOfFine += furnace.qualityOfFine;\r\n            //     item.qualityOfNormal += furnace.qualityOfNormal;\r\n            //   });\r\n            // });\r\n\r\n            // // 第三次遍历，求出合格率直通率等\r\n            // list.forEach(item => {\r\n            //   item.totalStoredWeight = item.totalStoredWeight.toFixed(2);\r\n            //   // 不合格重量\r\n            //   item.unqualifiedWeight = item.rawWeight - item.totalStoredWeight;\r\n            //   // 有效过钢率，卷曲率，合格率，直通率\r\n            //   item.qualifiedRatio = item.totalStoredWeight / item.rawWeight;\r\n            //   item.effectiveMeltRatio = (item.rawWeight + item.uselessRibbonWeight) / item.alloyTotalWeight;\r\n            //   item.rollRatio = item.rawWeight / (item.rawWeight + item.uselessRibbonWeight);\r\n            //   item.totalRatio = ((item.effectiveMeltRatio * item.rollRatio * item.qualifiedRatio) * 100).toFixed(2) + '%';\r\n            //   item.qualifiedRatio = (item.qualifiedRatio * 100).toFixed(2) + '%';\r\n            //   item.effectiveMeltRatio = (item.effectiveMeltRatio * 100).toFixed(2) + '%';\r\n            //   item.rollRatio = (item.rollRatio * 100).toFixed(2) + '%';\r\n            //   // 订单合格率\r\n            //   item.inPlanRatio = ((item.inPlanStoredWeight / item.rawWeight) * 100).toFixed(2) + '%';\r\n            // });\r\n            this.tableDataByTeam = data.list;\r\n          })\r\n          .catch(err => {\r\n            console.log(err);\r\n          })\r\n          .finally(() => {\r\n            this.loading = false;\r\n          });\r\n      } else if (this.searchForm.ratioType === \"byCastId\") {\r\n        this.$http(\"get\", urlmap.queryStatisticsRatio, params)\r\n          .then(data => {\r\n            // const list = data.list;\r\n\r\n            // // 第一次遍历，求出每一炉的各种重量\r\n            // list.forEach(item => {\r\n            //   item.castId = item._id;\r\n            //   item.lowHeatNum = 0;\r\n            //   item.zeroHeatNum = 0;\r\n            //   item.uselessRibbonWeight = 0;\r\n            //   const furnaceList = item.furnaceList;\r\n            //   furnaceList.forEach(furnace => {\r\n            //     // 废带重量\r\n            //     item.uselessRibbonWeight += furnace.uselessRibbonWeight == undefined ? 0 : furnace.uselessRibbonWeight;\r\n            //     // 低产零产率：6,8,9机组 <= 80kg，7机组 <=50，算低产\r\n            //     if (furnace.rawWeight == 0) {\r\n            //       item.zeroHeatNum++;\r\n            //     }\r\n            //     if (furnace.castId === 7) {\r\n            //       if (furnace.rawWeight > 0 && furnace.rawWeight <= 50) {\r\n            //         item.lowHeatNum++;\r\n            //       }\r\n            //     } else {\r\n            //       if (furnace.rawWeight > 0 && furnace.rawWeight <= 80) {\r\n            //         item.lowHeatNum++;\r\n            //       }\r\n            //     }\r\n            //     item.lowAndZeroRatio = ((item.lowHeatNum + item.zeroHeatNum) * 100 / item.totalHeatNum).toFixed(2) + '%';\r\n\r\n            //     furnace.coilNetWeight = 0;\r\n            //     furnace.inPlanStoredWeight = 0;\r\n            //     furnace.outPlanStoredWeight = 0;\r\n            //     furnace.totalStoredWeight = 0;\r\n            //     furnace.qualityOfA = 0;\r\n            //     furnace.qualityOfB = 0;\r\n            //     furnace.qualityOfC = 0;\r\n            //     furnace.qualityOfD = 0;\r\n            //     furnace.qualityOfE = 0;\r\n            //     furnace.qualityOfGood = 0;\r\n            //     furnace.qualityOfFine = 0;\r\n            //     furnace.qualityOfNormal = 0;\r\n            //     furnace.fromMeasure.forEach(measure => {\r\n            //       furnace.coilNetWeight += measure.coilNetWeight == undefined ? 0 : measure.coilNetWeight;\r\n            //       furnace.inPlanStoredWeight += measure.inPlanStoredWeight == undefined ? 0 : measure.inPlanStoredWeight;\r\n            //       furnace.outPlanStoredWeight += measure.outPlanStoredWeight == undefined ? 0 : measure.outPlanStoredWeight;\r\n            //       furnace.totalStoredWeight += measure.totalStoredWeight == undefined ? 0 : measure.totalStoredWeight;\r\n            //       furnace.qualityOfA += measure.qualityOfA == undefined ? 0 : measure.qualityOfA;\r\n            //       furnace.qualityOfB += measure.qualityOfB == undefined ? 0 : measure.qualityOfB;\r\n            //       furnace.qualityOfC += measure.qualityOfC == undefined ? 0 : measure.qualityOfC;\r\n            //       furnace.qualityOfD += measure.qualityOfD == undefined ? 0 : measure.qualityOfD;\r\n            //       furnace.qualityOfE += measure.qualityOfE == undefined ? 0 : measure.qualityOfE;\r\n            //       furnace.qualityOfGood += measure.qualityOfGood == undefined ? 0 : measure.qualityOfGood;\r\n            //       furnace.qualityOfFine += measure.qualityOfFine == undefined ? 0 : measure.qualityOfFine;\r\n            //       furnace.qualityOfNormal += measure.qualityOfNormal == undefined ? 0 : measure.qualityOfNormal;\r\n            //     });\r\n            //   });\r\n            // });\r\n\r\n            // // 第二次遍历，求出部分的结果\r\n            // list.forEach(item => {\r\n            //   item.coilNetWeight = 0;\r\n            //   item.inPlanStoredWeight = 0;\r\n            //   item.outPlanStoredWeight = 0;\r\n            //   item.totalStoredWeight = 0;\r\n            //   item.qualityOfA = 0;\r\n            //   item.qualityOfB = 0;\r\n            //   item.qualityOfC = 0;\r\n            //   item.qualityOfD = 0;\r\n            //   item.qualityOfE = 0;\r\n            //   item.qualityOfGood = 0;\r\n            //   item.qualityOfFine = 0;\r\n            //   item.qualityOfNormal = 0;\r\n            //   const furnaceList = item.furnaceList;\r\n            //   furnaceList.forEach(furnace => {\r\n            //     item.coilNetWeight += furnace.coilNetWeight;\r\n            //     item.inPlanStoredWeight += furnace.inPlanStoredWeight;\r\n            //     item.outPlanStoredWeight += furnace.outPlanStoredWeight;\r\n            //     item.totalStoredWeight += furnace.totalStoredWeight;\r\n            //     item.qualityOfA += furnace.qualityOfA;\r\n            //     item.qualityOfB += furnace.qualityOfB;\r\n            //     item.qualityOfC += furnace.qualityOfC;\r\n            //     item.qualityOfD += furnace.qualityOfD;\r\n            //     item.qualityOfE += furnace.qualityOfE;\r\n            //     item.qualityOfGood += furnace.qualityOfGood;\r\n            //     item.qualityOfFine += furnace.qualityOfFine;\r\n            //     item.qualityOfNormal += furnace.qualityOfNormal;\r\n            //   });\r\n            // });\r\n\r\n            // // 第三次遍历，求出合格率直通率等\r\n            // list.forEach(item => {\r\n            //   item.totalStoredWeight = item.totalStoredWeight.toFixed(2);\r\n            //   // 不合格重量\r\n            //   item.unqualifiedWeight = item.rawWeight - item.totalStoredWeight;\r\n            //   // 有效过钢率，卷曲率，合格率，直通率\r\n            //   item.qualifiedRatio = item.totalStoredWeight / item.rawWeight;\r\n            //   item.effectiveMeltRatio = (item.rawWeight + item.uselessRibbonWeight) / item.alloyTotalWeight;\r\n            //   item.rollRatio = item.rawWeight / (item.rawWeight + item.uselessRibbonWeight);\r\n            //   item.totalRatio = ((item.effectiveMeltRatio * item.rollRatio * item.qualifiedRatio) * 100).toFixed(2) + '%';\r\n            //   item.qualifiedRatio = (item.qualifiedRatio * 100).toFixed(2) + '%';\r\n            //   item.effectiveMeltRatio = (item.effectiveMeltRatio * 100).toFixed(2) + '%';\r\n            //   item.rollRatio = (item.rollRatio * 100).toFixed(2) + '%';\r\n            //   // 订单合格率\r\n            //   item.inPlanRatio = ((item.inPlanStoredWeight / item.rawWeight) * 100).toFixed(2) + '%';\r\n            // });\r\n            this.tableDataByCastId = data.list;\r\n          })\r\n          .catch(err => {\r\n            console.log(err);\r\n          })\r\n          .finally(() => {\r\n            this.loading = false;\r\n          });\r\n      }\r\n    },\r\n    tabsClick(tab, event) {\r\n      this.searchForm.ratioType = tab.name;\r\n      this.getTableData();\r\n    }\r\n  }\r\n};\r\n</script>\r\n<style lang=\"scss\" scoped></style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/pages/statistics/statisticsOfRatio.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('el-breadcrumb',{staticClass:\"crumb\",attrs:{\"separator-class\":\"el-icon-arrow-right\"}},[_c('el-breadcrumb-item',[_vm._v(\"数据统计\")]),_vm._v(\" \"),_c('el-breadcrumb-item',[_vm._v(\"带材质量统计\")])],1),_vm._v(\" \"),_c('el-form',{staticClass:\"search_bar\",attrs:{\"model\":_vm.searchForm,\"inline\":true}},[_c('el-form-item',{attrs:{\"label\":\"喷带日期：\"}},[_c('el-date-picker',{attrs:{\"type\":\"daterange\",\"default-time\":['00:00:00', '23:59:59'],\"clearable\":false,\"start-placeholder\":\"开始日期\",\"end-placeholder\":\"结束日期\"},model:{value:(_vm.searchForm.date),callback:function ($$v) {_vm.$set(_vm.searchForm, \"date\", $$v)},expression:\"searchForm.date\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"材质：\"}},[_c('el-select',{attrs:{\"placeholder\":\"请选择\",\"multiple\":\"\",\"collapse-tags\":\"\"},model:{value:(_vm.searchForm.ribbonTypeNames),callback:function ($$v) {_vm.$set(_vm.searchForm, \"ribbonTypeNames\", $$v)},expression:\"searchForm.ribbonTypeNames\"}},_vm._l((_vm.ribbonTypeList),function(item){return _c('el-option',{key:item.ribbonTypeId,attrs:{\"value\":item.ribbonTypeName,\"label\":item.ribbonTypeName}})}),1)],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"规格：\"}},[_c('el-select',{attrs:{\"placeholder\":\"请选择\",\"multiple\":\"\",\"collapse-tags\":\"\"},model:{value:(_vm.searchForm.ribbonWidths),callback:function ($$v) {_vm.$set(_vm.searchForm, \"ribbonWidths\", $$v)},expression:\"searchForm.ribbonWidths\"}},_vm._l((_vm.ribbonWidthList),function(item){return _c('el-option',{key:item.ribbonWidthId,attrs:{\"label\":item.ribbonWidth,\"value\":item.ribbonWidth}})}),1)],1),_vm._v(\" \"),_c('el-form-item',[_c('el-button',{attrs:{\"type\":\"primary\",\"icon\":\"el-icon-search\"},on:{\"click\":_vm.clickSearch}},[_vm._v(\"搜索\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"primary\",\"icon\":\"el-icon-refresh\"},on:{\"click\":_vm.reset}},[_vm._v(\"重置\")])],1)],1),_vm._v(\" \"),_c('div',{staticClass:\"main_bd\"},[_c('el-tabs',{attrs:{\"type\":\"border-card\"},on:{\"tab-click\":_vm.tabsClick},model:{value:(_vm.searchForm.ratioType),callback:function ($$v) {_vm.$set(_vm.searchForm, \"ratioType\", $$v)},expression:\"searchForm.ratioType\"}},[_c('el-tab-pane',{attrs:{\"label\":\"喷带手\",\"name\":\"byCaster\"}},[_c('el-table',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.loading),expression:\"loading\"}],staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.tableDataByCaster,\"stripe\":\"\",\"border\":\"\"}},[_c('el-table-column',{attrs:{\"prop\":\"caster\",\"label\":\"喷带手\",\"align\":\"center\",\"width\":\"70px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"totalHeatNum\",\"label\":\"炉次\",\"align\":\"center\",\"width\":\"50px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"lowHeatNum\",\"label\":\"低产炉次\",\"align\":\"center\",\"width\":\"80px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"zeroHeatNum\",\"label\":\"零产炉次\",\"align\":\"center\",\"width\":\"80px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"lowAndZeroRatio\",\"label\":\"低产零产率\",\"align\":\"center\",\"width\":\"70px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"nozzleNum\",\"label\":\"喷嘴数\",\"align\":\"center\",\"width\":\"70px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"alloyTotalWeight\",\"label\":\"投入母合金(kg)\",\"align\":\"center\",\"width\":\"100px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"rawWeight\",\"label\":\"大盘毛重(kg)\",\"align\":\"center\",\"width\":\"110px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"coilNetWeight\",\"label\":\"倒卷净重(kg)\",\"align\":\"center\",\"width\":\"110px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"inPlanStoredWeight\",\"label\":\"计划内入库(kg)\",\"align\":\"center\",\"width\":\"90px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"outPlanStoredWeight\",\"label\":\"计划外入库(kg)\",\"align\":\"center\",\"width\":\"90px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"totalStoredWeight\",\"label\":\"入库重量(kg)\",\"align\":\"center\",\"width\":\"110px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"unqualifiedWeight\",\"label\":\"不合格重量(kg)\",\"align\":\"center\",\"width\":\"80px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"uselessRibbonWeight\",\"label\":\"废带(kg)\",\"align\":\"center\",\"width\":\"80px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"effectiveMeltRatio\",\"label\":\"有效过钢率\",\"align\":\"center\",\"width\":\"80px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"rollRatio\",\"label\":\"卷曲率\",\"align\":\"center\",\"width\":\"80px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"qualifiedRatio\",\"label\":\"合格率\",\"align\":\"center\",\"width\":\"80px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"totalRatio\",\"label\":\"直通率\",\"align\":\"center\",\"width\":\"80px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"inPlanRatio\",\"label\":\"订单合格率\",\"align\":\"center\",\"width\":\"80px\"}})],1)],1),_vm._v(\" \"),_c('el-tab-pane',{attrs:{\"label\":\"班组\",\"name\":\"byTeam\"}},[_c('el-table',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.loading),expression:\"loading\"}],staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.tableDataByTeam,\"stripe\":\"\",\"border\":\"\"}},[_c('el-table-column',{attrs:{\"prop\":\"team\",\"label\":\"班组\",\"align\":\"center\",\"width\":\"70px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"totalHeatNum\",\"label\":\"炉次\",\"align\":\"center\",\"width\":\"50px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"lowHeatNum\",\"label\":\"低产炉次\",\"align\":\"center\",\"width\":\"80px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"zeroHeatNum\",\"label\":\"零产炉次\",\"align\":\"center\",\"width\":\"80px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"lowAndZeroRatio\",\"label\":\"低产零产率\",\"align\":\"center\",\"width\":\"70px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"nozzleNum\",\"label\":\"喷嘴数\",\"align\":\"center\",\"width\":\"70px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"alloyTotalWeight\",\"label\":\"投入母合金(kg)\",\"align\":\"center\",\"width\":\"100px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"rawWeight\",\"label\":\"大盘毛重(kg)\",\"align\":\"center\",\"width\":\"110px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"coilNetWeight\",\"label\":\"倒卷净重(kg)\",\"align\":\"center\",\"width\":\"110px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"inPlanStoredWeight\",\"label\":\"计划内入库(kg)\",\"align\":\"center\",\"width\":\"90px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"outPlanStoredWeight\",\"label\":\"计划外入库(kg)\",\"align\":\"center\",\"width\":\"90px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"totalStoredWeight\",\"label\":\"入库重量(kg)\",\"align\":\"center\",\"width\":\"110px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"unqualifiedWeight\",\"label\":\"不合格重量(kg)\",\"align\":\"center\",\"width\":\"80px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"uselessRibbonWeight\",\"label\":\"废带(kg)\",\"align\":\"center\",\"width\":\"80px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"effectiveMeltRatio\",\"label\":\"有效过钢率\",\"align\":\"center\",\"width\":\"80px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"rollRatio\",\"label\":\"卷曲率\",\"align\":\"center\",\"width\":\"80px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"qualifiedRatio\",\"label\":\"合格率\",\"align\":\"center\",\"width\":\"80px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"totalRatio\",\"label\":\"直通率\",\"align\":\"center\",\"width\":\"80px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"inPlanRatio\",\"label\":\"订单合格率\",\"align\":\"center\",\"width\":\"80px\"}})],1)],1),_vm._v(\" \"),_c('el-tab-pane',{attrs:{\"label\":\"机组\",\"name\":\"byCastId\"}},[_c('el-table',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.loading),expression:\"loading\"}],staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.tableDataByCastId,\"stripe\":\"\",\"border\":\"\"}},[_c('el-table-column',{attrs:{\"prop\":\"castId\",\"label\":\"机组\",\"align\":\"center\",\"width\":\"70px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"totalHeatNum\",\"label\":\"炉次\",\"align\":\"center\",\"width\":\"50px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"lowHeatNum\",\"label\":\"低产炉次\",\"align\":\"center\",\"width\":\"80px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"zeroHeatNum\",\"label\":\"零产炉次\",\"align\":\"center\",\"width\":\"80px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"lowAndZeroRatio\",\"label\":\"低产零产率\",\"align\":\"center\",\"width\":\"70px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"nozzleNum\",\"label\":\"喷嘴数\",\"align\":\"center\",\"width\":\"70px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"alloyTotalWeight\",\"label\":\"投入母合金(kg)\",\"align\":\"center\",\"width\":\"100px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"rawWeight\",\"label\":\"大盘毛重(kg)\",\"align\":\"center\",\"width\":\"110px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"coilNetWeight\",\"label\":\"倒卷净重(kg)\",\"align\":\"center\",\"width\":\"110px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"inPlanStoredWeight\",\"label\":\"计划内入库(kg)\",\"align\":\"center\",\"width\":\"90px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"outPlanStoredWeight\",\"label\":\"计划外入库(kg)\",\"align\":\"center\",\"width\":\"90px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"totalStoredWeight\",\"label\":\"入库重量(kg)\",\"align\":\"center\",\"width\":\"110px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"unqualifiedWeight\",\"label\":\"不合格重量(kg)\",\"align\":\"center\",\"width\":\"80px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"uselessRibbonWeight\",\"label\":\"废带(kg)\",\"align\":\"center\",\"width\":\"80px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"effectiveMeltRatio\",\"label\":\"有效过钢率\",\"align\":\"center\",\"width\":\"80px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"rollRatio\",\"label\":\"卷曲率\",\"align\":\"center\",\"width\":\"80px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"qualifiedRatio\",\"label\":\"合格率\",\"align\":\"center\",\"width\":\"80px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"totalRatio\",\"label\":\"直通率\",\"align\":\"center\",\"width\":\"80px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"inPlanRatio\",\"label\":\"订单合格率\",\"align\":\"center\",\"width\":\"80px\"}})],1)],1)],1)],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-64462afe\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/pages/statistics/statisticsOfRatio.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-64462afe\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./statisticsOfRatio.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./statisticsOfRatio.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./statisticsOfRatio.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-64462afe\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./statisticsOfRatio.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-64462afe\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/pages/statistics/statisticsOfRatio.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}