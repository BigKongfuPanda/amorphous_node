{"version":3,"sources":["webpack:///src/pages/statistics/statisticsOfRatio.vue","webpack:///./src/pages/statistics/statisticsOfRatio.vue?f3f5","webpack:///./src/pages/statistics/statisticsOfRatio.vue"],"names":["statisticsOfRatio","data","searchForm","ratioType","date","loading","tableDataByCaster","tableDataByTeam","tableDataByCastId","created","this","getTableData","methods","clickSearch","reset","_this","params","arguments","length","undefined","_params","startTime","endTime","assign_default","$http","urlmap","queryStatisticsRatio","then","list","catch","err","console","log","finally","tabsClick","tab","event","name","statistics_statisticsOfRatio","render","_vm","_h","$createElement","_c","_self","staticClass","attrs","separator-class","_v","model","inline","label","type","default-time","clearable","start-placeholder","end-placeholder","value","callback","$$v","$set","expression","icon","on","click","tab-click","directives","rawName","staticStyle","width","stripe","border","prop","align","staticRenderFns","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"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","file":"static/js/statisticsOfRatio.71489843363256a9cf14.js","sourcesContent":["<template>\n  <div>\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\" class=\"crumb\">\n      <el-breadcrumb-item>数据统计</el-breadcrumb-item>\n      <el-breadcrumb-item>带材质量统计</el-breadcrumb-item>\n    </el-breadcrumb>\n    <el-form class=\"search_bar\" :model=\"searchForm\" :inline=\"true\">\n      <el-form-item label=\"喷带日期：\">\n        <el-date-picker\n          v-model=\"searchForm.date\"\n          type=\"daterange\"\n          :default-time=\"['00:00:00', '23:59:59']\"\n          :clearable=\"false\"\n          start-placeholder=\"开始日期\"\n          end-placeholder=\"结束日期\">\n        </el-date-picker>\n      </el-form-item>\n      <el-form-item>\n        <el-button type=\"primary\" icon=\"el-icon-search\" @click=\"clickSearch\">搜索</el-button>\n        <el-button type=\"primary\" icon=\"el-icon-refresh\" @click=\"reset\">重置</el-button>\n      </el-form-item>\n    </el-form>\n    <div class=\"main_bd\">\n      <el-tabs type=\"border-card\" v-model=\"searchForm.ratioType\" @tab-click=\"tabsClick\">\n        <el-tab-pane label=\"喷带手\" name=\"byCaster\">\n          <el-table :data=\"tableDataByCaster\" stripe border style=\"width:100%\" v-loading=\"loading\">\n            <el-table-column prop=\"caster\" label=\"喷带手\" align=\"center\" width=\"70px\"></el-table-column>\n            <el-table-column prop=\"totalHeatNum\" label=\"炉次\" align=\"center\" width=\"50px\"></el-table-column>\n            <el-table-column prop=\"lowHeatNum\" label=\"低产炉次\" align=\"center\" width=\"80px\"></el-table-column>\n            <el-table-column prop=\"zeroHeatNum\" label=\"零产炉次\" align=\"center\" width=\"80px\">\n            </el-table-column>\n            <el-table-column prop=\"lowAndZeroRatio\" label=\"低产零产率\" align=\"center\" width=\"70px\"></el-table-column>\n            <el-table-column prop=\"nozzleNum\" label=\"喷嘴数\" align=\"center\" width=\"70px\"></el-table-column>\n            <el-table-column prop=\"alloyTotalWeight\" label=\"投入母合金(kg)\" align=\"center\" width=\"100px\"></el-table-column>\n            <el-table-column prop=\"rawWeight\" label=\"大盘毛重(kg)\" align=\"center\" width=\"110px\"></el-table-column>\n            <el-table-column prop=\"coilNetWeight\" label=\"倒卷净重(kg)\" align=\"center\" width=\"110px\"></el-table-column>\n            <el-table-column prop=\"inPlanStoredWeight\" label=\"计划内入库(kg)\" align=\"center\" width=\"90px\"></el-table-column>\n            <el-table-column prop=\"outPlanStoredWeight\" label=\"计划外入库(kg)\" align=\"center\" width=\"90px\"></el-table-column>\n            <el-table-column prop=\"totalStoredWeight\" label=\"入库重量(kg)\" align=\"center\" width=\"110px\"></el-table-column>\n            <el-table-column prop=\"unqualifiedWeight\" label=\"不合格重量(kg)\" align=\"center\" width=\"80px\"></el-table-column>\n            <el-table-column prop=\"uselessRibbonWeight\" label=\"废带(kg)\" align=\"center\" width=\"80px\"></el-table-column>\n            <el-table-column prop=\"effectiveMeltRatio\" label=\"有效过钢率\" align=\"center\" width=\"80px\"></el-table-column>\n            <el-table-column prop=\"rollRatio\" label=\"卷曲率\" align=\"center\" width=\"80px\"></el-table-column>\n            <el-table-column prop=\"qualifiedRatio\" label=\"合格率\" align=\"center\" width=\"80px\"></el-table-column>\n            <el-table-column prop=\"totalRatio\" label=\"直通率\" align=\"center\" width=\"80px\"></el-table-column>\n            <el-table-column prop=\"inPlanRatio\" label=\"订单合格率\" align=\"center\" width=\"80px\"></el-table-column>\n            <el-table-column label=\"质量等级分布\" align=\"center\" width=\"110px\">\n              <el-table-column label=\"A\" prop=\"qualityOfA\"></el-table-column>\n              <el-table-column label=\"B\" prop=\"qualityOfB\"></el-table-column>\n              <el-table-column label=\"C\" prop=\"qualityOfC\"></el-table-column>\n              <el-table-column label=\"D\" prop=\"qualityOfD\"></el-table-column>\n              <el-table-column label=\"E\" prop=\"qualityOfE\"></el-table-column>\n            </el-table-column>\n            <el-table-column prop=\"qualityOfGood\" label=\"好(kg)\" align=\"center\" width=\"70px\"></el-table-column>\n            <el-table-column prop=\"qualityOfFine\" label=\"良(kg)\" align=\"center\" width=\"70px\"></el-table-column>\n            <el-table-column prop=\"qualityOfNormal\" label=\"中(kg)\" align=\"center\" width=\"70px\"></el-table-column>\n          </el-table>\n        </el-tab-pane>\n        <el-tab-pane label=\"班组\" name=\"byTeam\">\n          <el-table :data=\"tableDataByTeam\" stripe border style=\"width:100%\" v-loading=\"loading\">\n            <!-- <el-table-column prop=\"castId\" label=\"机组\" align=\"center\" width=\"70px\"></el-table-column> -->\n            <el-table-column prop=\"team\" label=\"班组\" align=\"center\" width=\"70px\"></el-table-column>\n            <el-table-column prop=\"totalHeatNum\" label=\"炉次\" align=\"center\" width=\"50px\"></el-table-column>\n            <el-table-column prop=\"lowHeatNum\" label=\"低产炉次\" align=\"center\" width=\"80px\"></el-table-column>\n            <el-table-column prop=\"zeroHeatNum\" label=\"零产炉次\" align=\"center\" width=\"80px\">\n            </el-table-column>\n            <el-table-column prop=\"lowAndZeroRatio\" label=\"低产零产率\" align=\"center\" width=\"70px\"></el-table-column>\n            <el-table-column prop=\"nozzleNum\" label=\"喷嘴数\" align=\"center\" width=\"70px\"></el-table-column>\n            <el-table-column prop=\"alloyTotalWeight\" label=\"投入母合金(kg)\" align=\"center\" width=\"100px\"></el-table-column>\n            <el-table-column prop=\"rawWeight\" label=\"大盘毛重(kg)\" align=\"center\" width=\"110px\"></el-table-column>\n            <el-table-column prop=\"coilNetWeight\" label=\"倒卷净重(kg)\" align=\"center\" width=\"110px\"></el-table-column>\n            <el-table-column prop=\"inPlanStoredWeight\" label=\"计划内入库(kg)\" align=\"center\" width=\"90px\"></el-table-column>\n            <el-table-column prop=\"outPlanStoredWeight\" label=\"计划外入库(kg)\" align=\"center\" width=\"90px\"></el-table-column>\n            <el-table-column prop=\"totalStoredWeight\" label=\"入库重量(kg)\" align=\"center\" width=\"110px\"></el-table-column>\n            <el-table-column prop=\"unqualifiedWeight\" label=\"不合格重量(kg)\" align=\"center\" width=\"80px\"></el-table-column>\n            <el-table-column prop=\"uselessRibbonWeight\" label=\"废带(kg)\" align=\"center\" width=\"80px\"></el-table-column>\n            <el-table-column prop=\"effectiveMeltRatio\" label=\"有效过钢率\" align=\"center\" width=\"80px\"></el-table-column>\n            <el-table-column prop=\"rollRatio\" label=\"卷曲率\" align=\"center\" width=\"80px\"></el-table-column>\n            <el-table-column prop=\"qualifiedRatio\" label=\"合格率\" align=\"center\" width=\"80px\"></el-table-column>\n            <el-table-column prop=\"totalRatio\" label=\"直通率\" align=\"center\" width=\"80px\"></el-table-column>\n            <el-table-column prop=\"inPlanRatio\" label=\"订单合格率\" align=\"center\" width=\"80px\"></el-table-column>\n            <el-table-column label=\"质量等级分布\" align=\"center\" width=\"110px\">\n              <el-table-column label=\"A\" prop=\"qualityOfA\"></el-table-column>\n              <el-table-column label=\"B\" prop=\"qualityOfB\"></el-table-column>\n              <el-table-column label=\"C\" prop=\"qualityOfC\"></el-table-column>\n              <el-table-column label=\"D\" prop=\"qualityOfD\"></el-table-column>\n              <el-table-column label=\"E\" prop=\"qualityOfE\"></el-table-column>\n            </el-table-column>\n            <el-table-column prop=\"qualityOfGood\" label=\"好(kg)\" align=\"center\" width=\"70px\"></el-table-column>\n            <el-table-column prop=\"qualityOfFine\" label=\"良(kg)\" align=\"center\" width=\"70px\"></el-table-column>\n            <el-table-column prop=\"qualityOfNormal\" label=\"中(kg)\" align=\"center\" width=\"70px\"></el-table-column>\n          </el-table>\n        </el-tab-pane>\n        <el-tab-pane label=\"机组\" name=\"byCastId\">\n          <el-table :data=\"tableDataByCastId\" stripe border style=\"width:100%\" v-loading=\"loading\">\n            <el-table-column prop=\"castId\" label=\"机组\" align=\"center\" width=\"70px\"></el-table-column>\n            <el-table-column prop=\"totalHeatNum\" label=\"炉次\" align=\"center\" width=\"50px\"></el-table-column>\n            <el-table-column prop=\"lowHeatNum\" label=\"低产炉次\" align=\"center\" width=\"80px\"></el-table-column>\n            <el-table-column prop=\"zeroHeatNum\" label=\"零产炉次\" align=\"center\" width=\"80px\">\n            </el-table-column>\n            <el-table-column prop=\"lowAndZeroRatio\" label=\"低产零产率\" align=\"center\" width=\"70px\"></el-table-column>\n            <el-table-column prop=\"nozzleNum\" label=\"喷嘴数\" align=\"center\" width=\"70px\"></el-table-column>\n            <el-table-column prop=\"alloyTotalWeight\" label=\"投入母合金(kg)\" align=\"center\" width=\"100px\"></el-table-column>\n            <el-table-column prop=\"rawWeight\" label=\"大盘毛重(kg)\" align=\"center\" width=\"110px\"></el-table-column>\n            <el-table-column prop=\"coilNetWeight\" label=\"倒卷净重(kg)\" align=\"center\" width=\"110px\"></el-table-column>\n            <el-table-column prop=\"inPlanStoredWeight\" label=\"计划内入库(kg)\" align=\"center\" width=\"90px\"></el-table-column>\n            <el-table-column prop=\"outPlanStoredWeight\" label=\"计划外入库(kg)\" align=\"center\" width=\"90px\"></el-table-column>\n            <el-table-column prop=\"totalStoredWeight\" label=\"入库重量(kg)\" align=\"center\" width=\"110px\"></el-table-column>\n            <el-table-column prop=\"unqualifiedWeight\" label=\"不合格重量(kg)\" align=\"center\" width=\"80px\"></el-table-column>\n            <el-table-column prop=\"uselessRibbonWeight\" label=\"废带(kg)\" align=\"center\" width=\"80px\"></el-table-column>\n            <el-table-column prop=\"effectiveMeltRatio\" label=\"有效过钢率\" align=\"center\" width=\"80px\"></el-table-column>\n            <el-table-column prop=\"rollRatio\" label=\"卷曲率\" align=\"center\" width=\"80px\"></el-table-column>\n            <el-table-column prop=\"qualifiedRatio\" label=\"合格率\" align=\"center\" width=\"80px\"></el-table-column>\n            <el-table-column prop=\"totalRatio\" label=\"直通率\" align=\"center\" width=\"80px\"></el-table-column>\n            <el-table-column prop=\"inPlanRatio\" label=\"订单合格率\" align=\"center\" width=\"80px\"></el-table-column>\n            <el-table-column label=\"质量等级分布\" align=\"center\" width=\"110px\">\n              <el-table-column label=\"A\" prop=\"qualityOfA\"></el-table-column>\n              <el-table-column label=\"B\" prop=\"qualityOfB\"></el-table-column>\n              <el-table-column label=\"C\" prop=\"qualityOfC\"></el-table-column>\n              <el-table-column label=\"D\" prop=\"qualityOfD\"></el-table-column>\n              <el-table-column label=\"E\" prop=\"qualityOfE\"></el-table-column>\n            </el-table-column>\n            <el-table-column prop=\"qualityOfGood\" label=\"好(kg)\" align=\"center\" width=\"70px\"></el-table-column>\n            <el-table-column prop=\"qualityOfFine\" label=\"良(kg)\" align=\"center\" width=\"70px\"></el-table-column>\n            <el-table-column prop=\"qualityOfNormal\" label=\"中(kg)\" align=\"center\" width=\"70px\"></el-table-column>\n          </el-table>\n        </el-tab-pane>\n      </el-tabs>\n      \n    </div>\n  </div>\n</template>\n\n<script>\nimport urlmap from '@/utils/urlmap';\n\nexport default {\n  data() {\n    return {\n      searchForm: {\n        ratioType: 'byCaster',\n        date: []\n      },\n      loading: false,\n      tableDataByCaster: [],\n      tableDataByTeam: [],\n      tableDataByCastId: []\n    }\n  },\n  created () {\n    this.getTableData();\n  },\n  methods: {\n    clickSearch() {\n      this.getTableData();\n    },\n    reset() {\n      this.searchForm = { ratioType: this.searchForm.ratioType, date: [] };\n      this.getTableData();\n    },\n    getTableData(params = {}) {\n      const _params = {\n        ratioType: this.searchForm.ratioType,\n        startTime: this.searchForm.date[0],\n        endTime: this.searchForm.date[1]\n      };\n      Object.assign(params, _params);\n      if (this.searchForm.ratioType === 'byCaster') {\n        this.$http('get', urlmap.queryStatisticsRatio, params).then(data => {\n          // const list = data.list;\n\n          // // 第一次遍历，求出每一炉的各种重量\n          // list.forEach(item => {\n          //   item.caster = item._id;\n          //   item.lowHeatNum = 0;\n          //   item.zeroHeatNum = 0;\n          //   item.uselessRibbonWeight = 0;\n          //   const furnaceList = item.furnaceList;\n          //   furnaceList.forEach(furnace => {\n          //     // 废带重量\n          //     item.uselessRibbonWeight += furnace.uselessRibbonWeight == undefined ? 0 : furnace.uselessRibbonWeight;\n          //     // 低产零产率：6,8,9机组 <= 80kg，7机组 <=50，算低产\n          //     if (furnace.rawWeight == 0) {\n          //       item.zeroHeatNum++;\n          //     }\n          //     if (furnace.castId === 7) {\n          //       if (furnace.rawWeight > 0 && furnace.rawWeight <= 50) {\n          //         item.lowHeatNum++;\n          //       }\n          //     } else {\n          //       if (furnace.rawWeight > 0 && furnace.rawWeight <= 80) {\n          //         item.lowHeatNum++;\n          //       }\n          //     }\n          //     item.lowAndZeroRatio = ((item.lowHeatNum + item.zeroHeatNum) * 100 / item.totalHeatNum).toFixed(2) + '%';\n\n          //     furnace.coilNetWeight = 0;\n          //     furnace.inPlanStoredWeight = 0;\n          //     furnace.outPlanStoredWeight = 0;\n          //     furnace.totalStoredWeight = 0;\n          //     furnace.qualityOfA = 0;\n          //     furnace.qualityOfB = 0;\n          //     furnace.qualityOfC = 0;\n          //     furnace.qualityOfD = 0;\n          //     furnace.qualityOfE = 0;\n          //     furnace.qualityOfGood = 0;\n          //     furnace.qualityOfFine = 0;\n          //     furnace.qualityOfNormal = 0;\n          //     furnace.fromMeasure.forEach(measure => {\n          //       furnace.coilNetWeight += measure.coilNetWeight == undefined ? 0 : measure.coilNetWeight;\n          //       furnace.inPlanStoredWeight += measure.inPlanStoredWeight == undefined ? 0 : measure.inPlanStoredWeight;\n          //       furnace.outPlanStoredWeight += measure.outPlanStoredWeight == undefined ? 0 : measure.outPlanStoredWeight;\n          //       furnace.totalStoredWeight += measure.totalStoredWeight == undefined ? 0 : measure.totalStoredWeight;\n          //       furnace.qualityOfA += measure.qualityOfA == undefined ? 0 : measure.qualityOfA;\n          //       furnace.qualityOfB += measure.qualityOfB == undefined ? 0 : measure.qualityOfB;\n          //       furnace.qualityOfC += measure.qualityOfC == undefined ? 0 : measure.qualityOfC;\n          //       furnace.qualityOfD += measure.qualityOfD == undefined ? 0 : measure.qualityOfD;\n          //       furnace.qualityOfE += measure.qualityOfE == undefined ? 0 : measure.qualityOfE;\n          //       furnace.qualityOfGood += measure.qualityOfGood == undefined ? 0 : measure.qualityOfGood;\n          //       furnace.qualityOfFine += measure.qualityOfFine == undefined ? 0 : measure.qualityOfFine;\n          //       furnace.qualityOfNormal += measure.qualityOfNormal == undefined ? 0 : measure.qualityOfNormal;\n          //     });\n          //   });\n          // });\n\n          // // 第二次遍历，求出部分的结果\n          // list.forEach(item => {\n          //   item.coilNetWeight = 0;\n          //   item.inPlanStoredWeight = 0;\n          //   item.outPlanStoredWeight = 0;\n          //   item.totalStoredWeight = 0;\n          //   item.qualityOfA = 0;\n          //   item.qualityOfB = 0;\n          //   item.qualityOfC = 0;\n          //   item.qualityOfD = 0;\n          //   item.qualityOfE = 0;\n          //   item.qualityOfGood = 0;\n          //   item.qualityOfFine = 0;\n          //   item.qualityOfNormal = 0;\n          //   const furnaceList = item.furnaceList;\n          //   furnaceList.forEach(furnace => {\n          //     item.coilNetWeight += furnace.coilNetWeight;\n          //     item.inPlanStoredWeight += furnace.inPlanStoredWeight;\n          //     item.outPlanStoredWeight += furnace.outPlanStoredWeight;\n          //     item.totalStoredWeight += furnace.totalStoredWeight;\n          //     item.qualityOfA += furnace.qualityOfA;\n          //     item.qualityOfB += furnace.qualityOfB;\n          //     item.qualityOfC += furnace.qualityOfC;\n          //     item.qualityOfD += furnace.qualityOfD;\n          //     item.qualityOfE += furnace.qualityOfE;\n          //     item.qualityOfGood += furnace.qualityOfGood;\n          //     item.qualityOfFine += furnace.qualityOfFine;\n          //     item.qualityOfNormal += furnace.qualityOfNormal;\n          //   });\n          // });\n\n          // // 第三次遍历，求出合格率直通率等\n          // list.forEach(item => {\n          //   item.totalStoredWeight = item.totalStoredWeight.toFixed(2);\n          //   // 不合格重量\n          //   item.unqualifiedWeight = item.rawWeight - item.totalStoredWeight;\n          //   // 有效过钢率，卷曲率，合格率，直通率\n          //   item.qualifiedRatio = item.totalStoredWeight / item.rawWeight;\n          //   item.effectiveMeltRatio = (item.rawWeight + item.uselessRibbonWeight) / item.alloyTotalWeight;\n          //   item.rollRatio = item.rawWeight / (item.rawWeight + item.uselessRibbonWeight);\n          //   item.totalRatio = ((item.effectiveMeltRatio * item.rollRatio * item.qualifiedRatio) * 100).toFixed(2) + '%';\n          //   item.qualifiedRatio = (item.qualifiedRatio * 100).toFixed(2) + '%';\n          //   item.effectiveMeltRatio = (item.effectiveMeltRatio * 100).toFixed(2) + '%';\n          //   item.rollRatio = (item.rollRatio * 100).toFixed(2) + '%';\n          //   // 订单合格率\n          //   item.inPlanRatio = ((item.inPlanStoredWeight / item.rawWeight) * 100).toFixed(2) + '%';\n          // });\n          this.tableDataByCaster = data.list;\n        }).catch((err) => {\n          console.log(err);\n        }).finally(() => {\n          this.loading = false;\n        });\n      } else if(this.searchForm.ratioType === 'byTeam') {\n        this.$http('get', urlmap.queryStatisticsRatio, params).then(data => {\n          // const list = data.list;\n\n          // // 第一次遍历，求出每一炉的各种重量\n          // list.forEach(item => {\n          //   item.team = item._id;\n          //   item.lowHeatNum = 0;\n          //   item.zeroHeatNum = 0;\n          //   item.uselessRibbonWeight = 0;\n          //   const furnaceList = item.furnaceList;\n          //   furnaceList.forEach(furnace => {\n          //     // 废带重量\n          //     item.uselessRibbonWeight += furnace.uselessRibbonWeight == undefined ? 0 : furnace.uselessRibbonWeight;\n          //     // 低产零产率：6,8,9机组 <= 80kg，7机组 <=50，算低产\n          //     if (furnace.rawWeight == 0) {\n          //       item.zeroHeatNum++;\n          //     }\n          //     if (furnace.castId === 7) {\n          //       if (furnace.rawWeight > 0 && furnace.rawWeight <= 50) {\n          //         item.lowHeatNum++;\n          //       }\n          //     } else {\n          //       if (furnace.rawWeight > 0 && furnace.rawWeight <= 80) {\n          //         item.lowHeatNum++;\n          //       }\n          //     }\n          //     item.lowAndZeroRatio = ((item.lowHeatNum + item.zeroHeatNum) * 100 / item.totalHeatNum).toFixed(2) + '%';\n\n          //     furnace.coilNetWeight = 0;\n          //     furnace.inPlanStoredWeight = 0;\n          //     furnace.outPlanStoredWeight = 0;\n          //     furnace.totalStoredWeight = 0;\n          //     furnace.qualityOfA = 0;\n          //     furnace.qualityOfB = 0;\n          //     furnace.qualityOfC = 0;\n          //     furnace.qualityOfD = 0;\n          //     furnace.qualityOfE = 0;\n          //     furnace.qualityOfGood = 0;\n          //     furnace.qualityOfFine = 0;\n          //     furnace.qualityOfNormal = 0;\n          //     furnace.fromMeasure.forEach(measure => {\n          //       furnace.coilNetWeight += measure.coilNetWeight == undefined ? 0 : measure.coilNetWeight;\n          //       furnace.inPlanStoredWeight += measure.inPlanStoredWeight == undefined ? 0 : measure.inPlanStoredWeight;\n          //       furnace.outPlanStoredWeight += measure.outPlanStoredWeight == undefined ? 0 : measure.outPlanStoredWeight;\n          //       furnace.totalStoredWeight += measure.totalStoredWeight == undefined ? 0 : measure.totalStoredWeight;\n          //       furnace.qualityOfA += measure.qualityOfA == undefined ? 0 : measure.qualityOfA;\n          //       furnace.qualityOfB += measure.qualityOfB == undefined ? 0 : measure.qualityOfB;\n          //       furnace.qualityOfC += measure.qualityOfC == undefined ? 0 : measure.qualityOfC;\n          //       furnace.qualityOfD += measure.qualityOfD == undefined ? 0 : measure.qualityOfD;\n          //       furnace.qualityOfE += measure.qualityOfE == undefined ? 0 : measure.qualityOfE;\n          //       furnace.qualityOfGood += measure.qualityOfGood == undefined ? 0 : measure.qualityOfGood;\n          //       furnace.qualityOfFine += measure.qualityOfFine == undefined ? 0 : measure.qualityOfFine;\n          //       furnace.qualityOfNormal += measure.qualityOfNormal == undefined ? 0 : measure.qualityOfNormal;\n          //     });\n          //   });\n          // });\n\n          // // 第二次遍历，求出部分的结果\n          // list.forEach(item => {\n          //   item.coilNetWeight = 0;\n          //   item.inPlanStoredWeight = 0;\n          //   item.outPlanStoredWeight = 0;\n          //   item.totalStoredWeight = 0;\n          //   item.qualityOfA = 0;\n          //   item.qualityOfB = 0;\n          //   item.qualityOfC = 0;\n          //   item.qualityOfD = 0;\n          //   item.qualityOfE = 0;\n          //   item.qualityOfGood = 0;\n          //   item.qualityOfFine = 0;\n          //   item.qualityOfNormal = 0;\n          //   const furnaceList = item.furnaceList;\n          //   furnaceList.forEach(furnace => {\n          //     item.coilNetWeight += furnace.coilNetWeight;\n          //     item.inPlanStoredWeight += furnace.inPlanStoredWeight;\n          //     item.outPlanStoredWeight += furnace.outPlanStoredWeight;\n          //     item.totalStoredWeight += furnace.totalStoredWeight;\n          //     item.qualityOfA += furnace.qualityOfA;\n          //     item.qualityOfB += furnace.qualityOfB;\n          //     item.qualityOfC += furnace.qualityOfC;\n          //     item.qualityOfD += furnace.qualityOfD;\n          //     item.qualityOfE += furnace.qualityOfE;\n          //     item.qualityOfGood += furnace.qualityOfGood;\n          //     item.qualityOfFine += furnace.qualityOfFine;\n          //     item.qualityOfNormal += furnace.qualityOfNormal;\n          //   });\n          // });\n\n          // // 第三次遍历，求出合格率直通率等\n          // list.forEach(item => {\n          //   item.totalStoredWeight = item.totalStoredWeight.toFixed(2);\n          //   // 不合格重量\n          //   item.unqualifiedWeight = item.rawWeight - item.totalStoredWeight;\n          //   // 有效过钢率，卷曲率，合格率，直通率\n          //   item.qualifiedRatio = item.totalStoredWeight / item.rawWeight;\n          //   item.effectiveMeltRatio = (item.rawWeight + item.uselessRibbonWeight) / item.alloyTotalWeight;\n          //   item.rollRatio = item.rawWeight / (item.rawWeight + item.uselessRibbonWeight);\n          //   item.totalRatio = ((item.effectiveMeltRatio * item.rollRatio * item.qualifiedRatio) * 100).toFixed(2) + '%';\n          //   item.qualifiedRatio = (item.qualifiedRatio * 100).toFixed(2) + '%';\n          //   item.effectiveMeltRatio = (item.effectiveMeltRatio * 100).toFixed(2) + '%';\n          //   item.rollRatio = (item.rollRatio * 100).toFixed(2) + '%';\n          //   // 订单合格率\n          //   item.inPlanRatio = ((item.inPlanStoredWeight / item.rawWeight) * 100).toFixed(2) + '%';\n          // });\n          this.tableDataByTeam = data.list;\n        }).catch((err) => {\n          console.log(err);\n        }).finally(() => {\n          this.loading = false;\n        });\n      } else if(this.searchForm.ratioType === 'byCastId') {\n        this.$http('get', urlmap.queryStatisticsRatio, params).then(data => {\n          // const list = data.list;\n\n          // // 第一次遍历，求出每一炉的各种重量\n          // list.forEach(item => {\n          //   item.castId = item._id;\n          //   item.lowHeatNum = 0;\n          //   item.zeroHeatNum = 0;\n          //   item.uselessRibbonWeight = 0;\n          //   const furnaceList = item.furnaceList;\n          //   furnaceList.forEach(furnace => {\n          //     // 废带重量\n          //     item.uselessRibbonWeight += furnace.uselessRibbonWeight == undefined ? 0 : furnace.uselessRibbonWeight;\n          //     // 低产零产率：6,8,9机组 <= 80kg，7机组 <=50，算低产\n          //     if (furnace.rawWeight == 0) {\n          //       item.zeroHeatNum++;\n          //     }\n          //     if (furnace.castId === 7) {\n          //       if (furnace.rawWeight > 0 && furnace.rawWeight <= 50) {\n          //         item.lowHeatNum++;\n          //       }\n          //     } else {\n          //       if (furnace.rawWeight > 0 && furnace.rawWeight <= 80) {\n          //         item.lowHeatNum++;\n          //       }\n          //     }\n          //     item.lowAndZeroRatio = ((item.lowHeatNum + item.zeroHeatNum) * 100 / item.totalHeatNum).toFixed(2) + '%';\n\n          //     furnace.coilNetWeight = 0;\n          //     furnace.inPlanStoredWeight = 0;\n          //     furnace.outPlanStoredWeight = 0;\n          //     furnace.totalStoredWeight = 0;\n          //     furnace.qualityOfA = 0;\n          //     furnace.qualityOfB = 0;\n          //     furnace.qualityOfC = 0;\n          //     furnace.qualityOfD = 0;\n          //     furnace.qualityOfE = 0;\n          //     furnace.qualityOfGood = 0;\n          //     furnace.qualityOfFine = 0;\n          //     furnace.qualityOfNormal = 0;\n          //     furnace.fromMeasure.forEach(measure => {\n          //       furnace.coilNetWeight += measure.coilNetWeight == undefined ? 0 : measure.coilNetWeight;\n          //       furnace.inPlanStoredWeight += measure.inPlanStoredWeight == undefined ? 0 : measure.inPlanStoredWeight;\n          //       furnace.outPlanStoredWeight += measure.outPlanStoredWeight == undefined ? 0 : measure.outPlanStoredWeight;\n          //       furnace.totalStoredWeight += measure.totalStoredWeight == undefined ? 0 : measure.totalStoredWeight;\n          //       furnace.qualityOfA += measure.qualityOfA == undefined ? 0 : measure.qualityOfA;\n          //       furnace.qualityOfB += measure.qualityOfB == undefined ? 0 : measure.qualityOfB;\n          //       furnace.qualityOfC += measure.qualityOfC == undefined ? 0 : measure.qualityOfC;\n          //       furnace.qualityOfD += measure.qualityOfD == undefined ? 0 : measure.qualityOfD;\n          //       furnace.qualityOfE += measure.qualityOfE == undefined ? 0 : measure.qualityOfE;\n          //       furnace.qualityOfGood += measure.qualityOfGood == undefined ? 0 : measure.qualityOfGood;\n          //       furnace.qualityOfFine += measure.qualityOfFine == undefined ? 0 : measure.qualityOfFine;\n          //       furnace.qualityOfNormal += measure.qualityOfNormal == undefined ? 0 : measure.qualityOfNormal;\n          //     });\n          //   });\n          // });\n\n          // // 第二次遍历，求出部分的结果\n          // list.forEach(item => {\n          //   item.coilNetWeight = 0;\n          //   item.inPlanStoredWeight = 0;\n          //   item.outPlanStoredWeight = 0;\n          //   item.totalStoredWeight = 0;\n          //   item.qualityOfA = 0;\n          //   item.qualityOfB = 0;\n          //   item.qualityOfC = 0;\n          //   item.qualityOfD = 0;\n          //   item.qualityOfE = 0;\n          //   item.qualityOfGood = 0;\n          //   item.qualityOfFine = 0;\n          //   item.qualityOfNormal = 0;\n          //   const furnaceList = item.furnaceList;\n          //   furnaceList.forEach(furnace => {\n          //     item.coilNetWeight += furnace.coilNetWeight;\n          //     item.inPlanStoredWeight += furnace.inPlanStoredWeight;\n          //     item.outPlanStoredWeight += furnace.outPlanStoredWeight;\n          //     item.totalStoredWeight += furnace.totalStoredWeight;\n          //     item.qualityOfA += furnace.qualityOfA;\n          //     item.qualityOfB += furnace.qualityOfB;\n          //     item.qualityOfC += furnace.qualityOfC;\n          //     item.qualityOfD += furnace.qualityOfD;\n          //     item.qualityOfE += furnace.qualityOfE;\n          //     item.qualityOfGood += furnace.qualityOfGood;\n          //     item.qualityOfFine += furnace.qualityOfFine;\n          //     item.qualityOfNormal += furnace.qualityOfNormal;\n          //   });\n          // });\n\n          // // 第三次遍历，求出合格率直通率等\n          // list.forEach(item => {\n          //   item.totalStoredWeight = item.totalStoredWeight.toFixed(2);\n          //   // 不合格重量\n          //   item.unqualifiedWeight = item.rawWeight - item.totalStoredWeight;\n          //   // 有效过钢率，卷曲率，合格率，直通率\n          //   item.qualifiedRatio = item.totalStoredWeight / item.rawWeight;\n          //   item.effectiveMeltRatio = (item.rawWeight + item.uselessRibbonWeight) / item.alloyTotalWeight;\n          //   item.rollRatio = item.rawWeight / (item.rawWeight + item.uselessRibbonWeight);\n          //   item.totalRatio = ((item.effectiveMeltRatio * item.rollRatio * item.qualifiedRatio) * 100).toFixed(2) + '%';\n          //   item.qualifiedRatio = (item.qualifiedRatio * 100).toFixed(2) + '%';\n          //   item.effectiveMeltRatio = (item.effectiveMeltRatio * 100).toFixed(2) + '%';\n          //   item.rollRatio = (item.rollRatio * 100).toFixed(2) + '%';\n          //   // 订单合格率\n          //   item.inPlanRatio = ((item.inPlanStoredWeight / item.rawWeight) * 100).toFixed(2) + '%';\n          // });\n          this.tableDataByCastId = data.list;\n        }).catch((err) => {\n          console.log(err);\n        }).finally(() => {\n          this.loading = false;\n        });\n      }\n    },\n    tabsClick(tab, event) {\n      this.searchForm.ratioType = tab.name;\n      this.getTableData();\n    }\n  }\n}\n</script>\n<style lang=\"scss\" scoped>\n\n</style>\n\n\n\n\n\n// WEBPACK FOOTER //\n// src/pages/statistics/statisticsOfRatio.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('el-breadcrumb',{staticClass:\"crumb\",attrs:{\"separator-class\":\"el-icon-arrow-right\"}},[_c('el-breadcrumb-item',[_vm._v(\"数据统计\")]),_vm._v(\" \"),_c('el-breadcrumb-item',[_vm._v(\"带材质量统计\")])],1),_vm._v(\" \"),_c('el-form',{staticClass:\"search_bar\",attrs:{\"model\":_vm.searchForm,\"inline\":true}},[_c('el-form-item',{attrs:{\"label\":\"喷带日期：\"}},[_c('el-date-picker',{attrs:{\"type\":\"daterange\",\"default-time\":['00:00:00', '23:59:59'],\"clearable\":false,\"start-placeholder\":\"开始日期\",\"end-placeholder\":\"结束日期\"},model:{value:(_vm.searchForm.date),callback:function ($$v) {_vm.$set(_vm.searchForm, \"date\", $$v)},expression:\"searchForm.date\"}})],1),_vm._v(\" \"),_c('el-form-item',[_c('el-button',{attrs:{\"type\":\"primary\",\"icon\":\"el-icon-search\"},on:{\"click\":_vm.clickSearch}},[_vm._v(\"搜索\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"primary\",\"icon\":\"el-icon-refresh\"},on:{\"click\":_vm.reset}},[_vm._v(\"重置\")])],1)],1),_vm._v(\" \"),_c('div',{staticClass:\"main_bd\"},[_c('el-tabs',{attrs:{\"type\":\"border-card\"},on:{\"tab-click\":_vm.tabsClick},model:{value:(_vm.searchForm.ratioType),callback:function ($$v) {_vm.$set(_vm.searchForm, \"ratioType\", $$v)},expression:\"searchForm.ratioType\"}},[_c('el-tab-pane',{attrs:{\"label\":\"喷带手\",\"name\":\"byCaster\"}},[_c('el-table',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.loading),expression:\"loading\"}],staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.tableDataByCaster,\"stripe\":\"\",\"border\":\"\"}},[_c('el-table-column',{attrs:{\"prop\":\"caster\",\"label\":\"喷带手\",\"align\":\"center\",\"width\":\"70px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"totalHeatNum\",\"label\":\"炉次\",\"align\":\"center\",\"width\":\"50px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"lowHeatNum\",\"label\":\"低产炉次\",\"align\":\"center\",\"width\":\"80px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"zeroHeatNum\",\"label\":\"零产炉次\",\"align\":\"center\",\"width\":\"80px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"lowAndZeroRatio\",\"label\":\"低产零产率\",\"align\":\"center\",\"width\":\"70px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"nozzleNum\",\"label\":\"喷嘴数\",\"align\":\"center\",\"width\":\"70px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"alloyTotalWeight\",\"label\":\"投入母合金(kg)\",\"align\":\"center\",\"width\":\"100px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"rawWeight\",\"label\":\"大盘毛重(kg)\",\"align\":\"center\",\"width\":\"110px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"coilNetWeight\",\"label\":\"倒卷净重(kg)\",\"align\":\"center\",\"width\":\"110px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"inPlanStoredWeight\",\"label\":\"计划内入库(kg)\",\"align\":\"center\",\"width\":\"90px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"outPlanStoredWeight\",\"label\":\"计划外入库(kg)\",\"align\":\"center\",\"width\":\"90px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"totalStoredWeight\",\"label\":\"入库重量(kg)\",\"align\":\"center\",\"width\":\"110px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"unqualifiedWeight\",\"label\":\"不合格重量(kg)\",\"align\":\"center\",\"width\":\"80px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"uselessRibbonWeight\",\"label\":\"废带(kg)\",\"align\":\"center\",\"width\":\"80px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"effectiveMeltRatio\",\"label\":\"有效过钢率\",\"align\":\"center\",\"width\":\"80px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"rollRatio\",\"label\":\"卷曲率\",\"align\":\"center\",\"width\":\"80px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"qualifiedRatio\",\"label\":\"合格率\",\"align\":\"center\",\"width\":\"80px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"totalRatio\",\"label\":\"直通率\",\"align\":\"center\",\"width\":\"80px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"inPlanRatio\",\"label\":\"订单合格率\",\"align\":\"center\",\"width\":\"80px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"质量等级分布\",\"align\":\"center\",\"width\":\"110px\"}},[_c('el-table-column',{attrs:{\"label\":\"A\",\"prop\":\"qualityOfA\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"B\",\"prop\":\"qualityOfB\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"C\",\"prop\":\"qualityOfC\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"D\",\"prop\":\"qualityOfD\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"E\",\"prop\":\"qualityOfE\"}})],1),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"qualityOfGood\",\"label\":\"好(kg)\",\"align\":\"center\",\"width\":\"70px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"qualityOfFine\",\"label\":\"良(kg)\",\"align\":\"center\",\"width\":\"70px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"qualityOfNormal\",\"label\":\"中(kg)\",\"align\":\"center\",\"width\":\"70px\"}})],1)],1),_vm._v(\" \"),_c('el-tab-pane',{attrs:{\"label\":\"班组\",\"name\":\"byTeam\"}},[_c('el-table',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.loading),expression:\"loading\"}],staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.tableDataByTeam,\"stripe\":\"\",\"border\":\"\"}},[_c('el-table-column',{attrs:{\"prop\":\"team\",\"label\":\"班组\",\"align\":\"center\",\"width\":\"70px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"totalHeatNum\",\"label\":\"炉次\",\"align\":\"center\",\"width\":\"50px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"lowHeatNum\",\"label\":\"低产炉次\",\"align\":\"center\",\"width\":\"80px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"zeroHeatNum\",\"label\":\"零产炉次\",\"align\":\"center\",\"width\":\"80px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"lowAndZeroRatio\",\"label\":\"低产零产率\",\"align\":\"center\",\"width\":\"70px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"nozzleNum\",\"label\":\"喷嘴数\",\"align\":\"center\",\"width\":\"70px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"alloyTotalWeight\",\"label\":\"投入母合金(kg)\",\"align\":\"center\",\"width\":\"100px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"rawWeight\",\"label\":\"大盘毛重(kg)\",\"align\":\"center\",\"width\":\"110px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"coilNetWeight\",\"label\":\"倒卷净重(kg)\",\"align\":\"center\",\"width\":\"110px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"inPlanStoredWeight\",\"label\":\"计划内入库(kg)\",\"align\":\"center\",\"width\":\"90px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"outPlanStoredWeight\",\"label\":\"计划外入库(kg)\",\"align\":\"center\",\"width\":\"90px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"totalStoredWeight\",\"label\":\"入库重量(kg)\",\"align\":\"center\",\"width\":\"110px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"unqualifiedWeight\",\"label\":\"不合格重量(kg)\",\"align\":\"center\",\"width\":\"80px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"uselessRibbonWeight\",\"label\":\"废带(kg)\",\"align\":\"center\",\"width\":\"80px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"effectiveMeltRatio\",\"label\":\"有效过钢率\",\"align\":\"center\",\"width\":\"80px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"rollRatio\",\"label\":\"卷曲率\",\"align\":\"center\",\"width\":\"80px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"qualifiedRatio\",\"label\":\"合格率\",\"align\":\"center\",\"width\":\"80px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"totalRatio\",\"label\":\"直通率\",\"align\":\"center\",\"width\":\"80px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"inPlanRatio\",\"label\":\"订单合格率\",\"align\":\"center\",\"width\":\"80px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"质量等级分布\",\"align\":\"center\",\"width\":\"110px\"}},[_c('el-table-column',{attrs:{\"label\":\"A\",\"prop\":\"qualityOfA\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"B\",\"prop\":\"qualityOfB\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"C\",\"prop\":\"qualityOfC\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"D\",\"prop\":\"qualityOfD\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"E\",\"prop\":\"qualityOfE\"}})],1),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"qualityOfGood\",\"label\":\"好(kg)\",\"align\":\"center\",\"width\":\"70px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"qualityOfFine\",\"label\":\"良(kg)\",\"align\":\"center\",\"width\":\"70px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"qualityOfNormal\",\"label\":\"中(kg)\",\"align\":\"center\",\"width\":\"70px\"}})],1)],1),_vm._v(\" \"),_c('el-tab-pane',{attrs:{\"label\":\"机组\",\"name\":\"byCastId\"}},[_c('el-table',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.loading),expression:\"loading\"}],staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.tableDataByCastId,\"stripe\":\"\",\"border\":\"\"}},[_c('el-table-column',{attrs:{\"prop\":\"castId\",\"label\":\"机组\",\"align\":\"center\",\"width\":\"70px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"totalHeatNum\",\"label\":\"炉次\",\"align\":\"center\",\"width\":\"50px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"lowHeatNum\",\"label\":\"低产炉次\",\"align\":\"center\",\"width\":\"80px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"zeroHeatNum\",\"label\":\"零产炉次\",\"align\":\"center\",\"width\":\"80px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"lowAndZeroRatio\",\"label\":\"低产零产率\",\"align\":\"center\",\"width\":\"70px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"nozzleNum\",\"label\":\"喷嘴数\",\"align\":\"center\",\"width\":\"70px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"alloyTotalWeight\",\"label\":\"投入母合金(kg)\",\"align\":\"center\",\"width\":\"100px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"rawWeight\",\"label\":\"大盘毛重(kg)\",\"align\":\"center\",\"width\":\"110px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"coilNetWeight\",\"label\":\"倒卷净重(kg)\",\"align\":\"center\",\"width\":\"110px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"inPlanStoredWeight\",\"label\":\"计划内入库(kg)\",\"align\":\"center\",\"width\":\"90px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"outPlanStoredWeight\",\"label\":\"计划外入库(kg)\",\"align\":\"center\",\"width\":\"90px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"totalStoredWeight\",\"label\":\"入库重量(kg)\",\"align\":\"center\",\"width\":\"110px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"unqualifiedWeight\",\"label\":\"不合格重量(kg)\",\"align\":\"center\",\"width\":\"80px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"uselessRibbonWeight\",\"label\":\"废带(kg)\",\"align\":\"center\",\"width\":\"80px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"effectiveMeltRatio\",\"label\":\"有效过钢率\",\"align\":\"center\",\"width\":\"80px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"rollRatio\",\"label\":\"卷曲率\",\"align\":\"center\",\"width\":\"80px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"qualifiedRatio\",\"label\":\"合格率\",\"align\":\"center\",\"width\":\"80px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"totalRatio\",\"label\":\"直通率\",\"align\":\"center\",\"width\":\"80px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"inPlanRatio\",\"label\":\"订单合格率\",\"align\":\"center\",\"width\":\"80px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"质量等级分布\",\"align\":\"center\",\"width\":\"110px\"}},[_c('el-table-column',{attrs:{\"label\":\"A\",\"prop\":\"qualityOfA\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"B\",\"prop\":\"qualityOfB\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"C\",\"prop\":\"qualityOfC\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"D\",\"prop\":\"qualityOfD\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"E\",\"prop\":\"qualityOfE\"}})],1),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"qualityOfGood\",\"label\":\"好(kg)\",\"align\":\"center\",\"width\":\"70px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"qualityOfFine\",\"label\":\"良(kg)\",\"align\":\"center\",\"width\":\"70px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"qualityOfNormal\",\"label\":\"中(kg)\",\"align\":\"center\",\"width\":\"70px\"}})],1)],1)],1)],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-5e675acf\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/pages/statistics/statisticsOfRatio.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-5e675acf\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./statisticsOfRatio.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./statisticsOfRatio.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./statisticsOfRatio.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-5e675acf\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./statisticsOfRatio.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-5e675acf\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/pages/statistics/statisticsOfRatio.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}