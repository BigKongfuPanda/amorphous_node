{"version":3,"sources":["webpack:///./node_modules/core-js/library/modules/core.is-iterable.js","webpack:///src/pages/measure/components/ApplyInStoreModal.vue","webpack:///./src/pages/measure/components/ApplyInStoreModal.vue?2e2b","webpack:///./src/pages/measure/components/ApplyInStoreModal.vue","webpack:///src/pages/measure/measure.vue","webpack:///./src/pages/measure/measure.vue?da8b","webpack:///./src/pages/measure/measure.vue","webpack:///./node_modules/babel-runtime/core-js/get-iterator.js","webpack:///./node_modules/core-js/library/modules/es6.object.keys.js","webpack:///./node_modules/core-js/library/fn/is-iterable.js","webpack:///./node_modules/babel-runtime/helpers/slicedToArray.js","webpack:///./node_modules/babel-runtime/core-js/object/keys.js","webpack:///./node_modules/core-js/library/fn/get-iterator.js","webpack:///./node_modules/core-js/library/modules/core.get-iterator.js","webpack:///./node_modules/core-js/library/fn/object/keys.js","webpack:///./node_modules/core-js/library/modules/_object-sap.js","webpack:///./node_modules/babel-runtime/core-js/is-iterable.js"],"names":["classof","__webpack_require__","ITERATOR","Iterators","module","exports","isIterable","it","O","Object","undefined","hasOwnProperty","ApplyInStoreModal","name","props","castId","type","Number","required","visible","Boolean","data","multipleSelection","tableData","loading","created","this","getTableData","methods","_this","$http","urlmap","queryApplyStorageByFurnace","then","list","catch","err","console","log","finally","handleSelectionChange","val","closeDialog","$emit","submitForm","_this2","selectionList","cloneDeep","length","$alert","some","item","clients","forEach","row","isMeasureConfirmed","join","appearence","measureConfirm","dataJson","stringify_default","$router","push","path","error","components_ApplyInStoreModal","render","_vm","_h","$createElement","_c","_self","directives","rawName","value","expression","attrs","title","close-on-click-modal","close-on-press-escape","center","element-loading-text","on","update:visible","$event","close","ref","staticStyle","width","stripe","border","highlight-current-row","selection-change","_v","prop","label","align","fixed","slot","click","staticRenderFns","measure_components_ApplyInStoreModal","normalizeComponent","ssrContext","defaultDateRange","moment_default","subtract","format","measure","components","Collapse","collapse","userinfo","searchForm","caster","furnace","date","concat","measureDate","ribbonTypeNames","ribbonWidths","ribbonThicknessLevels","laminationLevels","ribbonToughnessLevels","appearenceLevels","thicknessDivation","orderBy","pageConfig","total","current","pageSize","isExportable","isEditable","isDeleteable","tableHeight","isBatchInStored","isAutoQuerying","pollTimer","applyInStoreModalVisible","uploadExcelForm","url","uploadMeasure","fileList","computed","extends_default","autoQueryConfig","icon","text","vuex_esm","uniqueAppearenceLevelList","appearenceList","reduce","acc","cur","includes","appearenceLevel","beforeRouteUpdate","to","from","next","params","setExportable","setEditable","setDeleteable","setBatchInStored","asyncToGenerator_default","regenerator_default","a","mark","_callee","wrap","_context","prev","$route","JSON","parse","localStorage","getItem","getLinerWeightList","getRibbonToughnessLevelList","getRibbonTypeList","getRibbonWidthList","getRibbonThicknessLevelList","getLaminationLevelList","getClientsList","getAppearenceLevelList","stop","mounted","self","$nextTick","window","innerHeight","onresize","common","beforeDestroy","clearInterval","handleAutoQuery","curStatus","setInterval","batchCalcRibbonTotalData","_this3","filter","ribbonTotalLevel","ribbonThickness1","ribbonThickness2","ribbonThickness3","ribbonThickness4","ribbonThickness5","ribbonThickness6","ribbonThickness7","ribbonThickness8","ribbonThickness9","realRibbonWidth","ribbonToughnessLevel","every","el","Array","isArray","message_default","message","map","result","calcRibbonTotalData","updateMeasureByBatch","listJson","res","thicknessChangeHandler","e","ribbonThicknessList","ribbonThicknessDeviation","calcMaxDeviation","ribbonThickness","toFixed","ribbonThicknessLevel","calcribbonThicknessLevel","dateFormat","column","castDate","dateTimeFormat","roleId","calcLinerWeight","ribbonWidth","linerWeight","linerWeightList","find","clickSearch","reset","_this4","arguments","_params","startTime","endTime","startMeasureTime","endMeasureTime","ribbonTypeNameJson","ribbonWidthJson","ribbonThicknessLevelJson","laminationLevelJson","ribbonToughnessLevelJson","appearenceLevelJson","assign_default","queryMeasure","count","limit","isEditing","storageRule","orderThickness","orderLaminationFactor","orderRibbonToughnessLevels","orderAppearenceLevels","qualifiedDemands","split","coilNetWeight","coilWeight","remainWeight","edit","isStored","$message","formatToNumber","trim","laminationFactor","calcLaminationFactor","diameter","laminationLevel","calcLaminationLevel","ribbonToughness","ribbonToughnessLevelList","_calcRibbonTotalLevel","calcRibbonTotalLevel","_calcRibbonTotalLevel2","slicedToArray_default","unQualifiedReason","setStoredType","inPlanStoredWeight","inPlanThickRibbonWeight","outPlanStoredWeight","totalStoredWeight","calcQualityOfABCDE","calcThinRibbonWeight","qualityOfGood","test","qualityOfFine","qualityOfNormal","clone","lodash","keys_default","key","save","updateMeasure","handleCurrentChange","isFragile","_width","ribbonTypeName","Math","abs","highFactorThinRibbonWeight","thinRibbonWeight","qualityOfA","qualityOfB","qualityOfC","qualityOfD","qualityOfE","PI","pow","factor","arr","_arr","a1","a2","a3","sort","b","d1","d2","d3","dArr","thickness","inPlanFlag","indexOf","parseInt","substr","_maxThickness","maxLaminationFactor","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","get_iterator_default","done","outPlanFlag","qualifiedThickness","_maxThickness3","qualifiedLaminationFactor","_maxLaminationFactor","qualifiedRibbonToughnessLevels","qualifiedAppearenceLevels","return","exportExcel","exportMeasure","lib_default","stringify","open","setSelectable","index","_this5","uploadExcelHandler","closeUploadDialog","submitUploadForm","$refs","upload","submit","uploadErrorHanler","file","uploadSuccessHanler","status","html","coilNumber","dangerouslyUseHTMLString","measure_measure","this$1","staticClass","separator-class","_s","model","inline","default-time","value-format","clearable","start-placeholder","end-placeholder","callback","$$v","$set","placeholder","multiple","collapse-tags","_l","ribbonTypeId","ribbonWidthId","ribbonThicknessLevelId","laminationLevelId","ribbonToughnessLevelId","_e","content","placement","disabled","margin-left","height","selectable","min-width","formatter","scopedSlots","_u","fn","scope","size","nativeOn","keyup","toString","appearenceLevelId","class","show-overflow-tooltip","trigger","cellpadding","cellspacing","isStorageConfirmed","unStoreReason","clientsId","client","isFlat","background","layout","current-page","page-size","update:currentPage","update:current-page","current-change","action","file-list","accept","on-error","on-success","auto-upload","measure_Component","measure_normalizeComponent","__webpack_exports__","default","__esModule","toObject","$keys","_isIterable3","_interopRequireDefault","_getIterator3","obj","i","_n","_d","_i","sliceIterator","TypeError","anObject","get","getIterator","iterFn","call","keys","$export","core","fails","KEY","exec","exp","S","F"],"mappings":"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","file":"static/js/measure.d56f23eb169c6f302d93.js","sourcesContent":["var classof = require('./_classof');\nvar ITERATOR = require('./_wks')('iterator');\nvar Iterators = require('./_iterators');\nmodule.exports = require('./_core').isIterable = function (it) {\n  var O = Object(it);\n  return O[ITERATOR] !== undefined\n    || '@@iterator' in O\n    // eslint-disable-next-line no-prototype-builtins\n    || Iterators.hasOwnProperty(classof(O));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/core.is-iterable.js\n// module id = 5PlU\n// module chunks = 1","<template>\r\n  <el-dialog\r\n    title=\"申请入库\"\r\n    :visible.sync=\"visible\"\r\n    :close-on-click-modal=\"false\"\r\n    :close-on-press-escape=\"false\"\r\n    @close=\"closeDialog\"\r\n    :center=\"true\"\r\n    v-loading=\"loading\"\r\n    element-loading-text=\"拼命加载中\"\r\n  >\r\n    <el-table\r\n      :data=\"tableData\"\r\n      ref=\"table\"\r\n      stripe\r\n      border\r\n      highlight-current-row\r\n      style=\"width: 100%\"\r\n      v-loading=\"loading\"\r\n      @selection-change=\"handleSelectionChange\"\r\n    >\r\n      <el-table-column type=\"selection\" width=\"20\"></el-table-column>\r\n      <el-table-column\r\n        prop=\"furnace\"\r\n        label=\"炉号\"\r\n        align=\"center\"\r\n        fixed\r\n      ></el-table-column>\r\n      <el-table-column\r\n        prop=\"totalCount\"\r\n        label=\"可入库盘数合计\"\r\n        align=\"center\"\r\n        fixed\r\n      ></el-table-column>\r\n      <el-table-column\r\n        prop=\"totalWeight\"\r\n        label=\"可入库净重合计(kg)\"\r\n        align=\"center\"\r\n        fixed\r\n      ></el-table-column>\r\n    </el-table>\r\n    <div slot=\"footer\">\r\n      <el-button @click=\"closeDialog\">取消</el-button>\r\n      <el-button type=\"primary\" @click=\"submitForm\">提交</el-button>\r\n    </div>\r\n  </el-dialog>\r\n</template>\r\n\r\n<script>\r\nimport urlmap from \"@/utils/urlmap\";\r\nimport { positiveInteger, ltNumber, decimalFormat } from \"@/utils/validate\";\r\n\r\nexport default {\r\n  name: \"ApplyInStoreModal\",\r\n  props: {\r\n    castId: {\r\n      type: Number,\r\n      required: true\r\n    },\r\n    visible: {\r\n      type: Boolean,\r\n      required: true\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      multipleSelection: [],\r\n      tableData: [],\r\n      loading: false\r\n    };\r\n  },\r\n  created() {\r\n    this.getTableData();\r\n  },\r\n  methods: {\r\n    getTableData() {\r\n      this.loading = true;\r\n      this.$http(\"get\", urlmap.queryApplyStorageByFurnace, {\r\n        castId: this.castId\r\n      })\r\n        .then(data => {\r\n          this.tableData = data.list;\r\n        })\r\n        .catch(err => console.log(err))\r\n        .finally(() => (this.loading = false));\r\n    },\r\n    handleSelectionChange(val) {\r\n      this.multipleSelection = val;\r\n    },\r\n    closeDialog() {\r\n      this.$emit(\"close\");\r\n    },\r\n    submitForm() {\r\n      const selectionList = cloneDeep(this.multipleSelection);\r\n      if (selectionList.length === 0) {\r\n        return this.$alert(\"请选择要入库的带材\", \"提示\", { type: \"warning\" });\r\n      }\r\n      if (\r\n        selectionList.some(item => !item.clients || item.clients.length === 0)\r\n      ) {\r\n        return this.$alert(\r\n          \"申请入库的带材没有填写检测去向，请检查后再提交\",\r\n          \"提示\",\r\n          { type: \"warning\" }\r\n        );\r\n      }\r\n      selectionList.forEach(row => {\r\n        row.isMeasureConfirmed = 1; // 1-检测确认入库，0-还没有确认\r\n        row.clients = row.clients.join();\r\n        row.appearence = row.appearence.join();\r\n      });\r\n      // 发送请求，更新当前的数据\r\n      this.$http(\"POST\", urlmap.measureConfirm, {\r\n        dataJson: JSON.stringify(selectionList)\r\n      })\r\n        .then(data => {\r\n          this.$router.push({ path: \"/applyStore\" });\r\n          this.$emit(\"submit\");\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n        });\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped></style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/pages/measure/components/ApplyInStoreModal.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('el-dialog',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.loading),expression:\"loading\"}],attrs:{\"title\":\"申请入库\",\"visible\":_vm.visible,\"close-on-click-modal\":false,\"close-on-press-escape\":false,\"center\":true,\"element-loading-text\":\"拼命加载中\"},on:{\"update:visible\":function($event){_vm.visible=$event},\"close\":_vm.closeDialog}},[_c('el-table',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.loading),expression:\"loading\"}],ref:\"table\",staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.tableData,\"stripe\":\"\",\"border\":\"\",\"highlight-current-row\":\"\"},on:{\"selection-change\":_vm.handleSelectionChange}},[_c('el-table-column',{attrs:{\"type\":\"selection\",\"width\":\"20\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"furnace\",\"label\":\"炉号\",\"align\":\"center\",\"fixed\":\"\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"totalCount\",\"label\":\"可入库盘数合计\",\"align\":\"center\",\"fixed\":\"\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"totalWeight\",\"label\":\"可入库净重合计(kg)\",\"align\":\"center\",\"fixed\":\"\"}})],1),_vm._v(\" \"),_c('div',{attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":_vm.closeDialog}},[_vm._v(\"取消\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.submitForm}},[_vm._v(\"提交\")])],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-9512c436\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/pages/measure/components/ApplyInStoreModal.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-9512c436\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./ApplyInStoreModal.vue\")\n}\nvar normalizeComponent = require(\"!../../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./ApplyInStoreModal.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./ApplyInStoreModal.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-9512c436\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./ApplyInStoreModal.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-9512c436\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/pages/measure/components/ApplyInStoreModal.vue\n// module id = null\n// module chunks = ","<template>\r\n  <div>\r\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\" class=\"crumb\">\r\n      <el-breadcrumb-item>检测记录</el-breadcrumb-item>\r\n      <el-breadcrumb-item>{{ castId }}号机组</el-breadcrumb-item>\r\n    </el-breadcrumb>\r\n    <Collapse>\r\n      <el-form class=\"search_bar\" :model=\"searchForm\" :inline=\"true\">\r\n        <el-form-item label=\"生产日期：\">\r\n          <el-date-picker\r\n            v-model=\"searchForm.date\"\r\n            type=\"daterange\"\r\n            :default-time=\"['00:00:00', '23:59:59']\"\r\n            value-format=\"yyyy-MM-dd HH:mm:ss\"\r\n            :clearable=\"false\"\r\n            start-placeholder=\"开始日期\"\r\n            end-placeholder=\"结束日期\"\r\n          ></el-date-picker>\r\n        </el-form-item>\r\n        <el-form-item label=\"检测日期：\">\r\n          <el-date-picker\r\n            v-model=\"searchForm.measureDate\"\r\n            type=\"daterange\"\r\n            :default-time=\"['00:00:00', '23:59:59']\"\r\n            :clearable=\"false\"\r\n            start-placeholder=\"开始日期\"\r\n            end-placeholder=\"结束日期\"\r\n            value-format=\"yyyy-MM-dd HH:mm:ss\"\r\n          ></el-date-picker>\r\n        </el-form-item>\r\n        <el-form-item label=\"喷带手：\">\r\n          <el-input\r\n            v-model=\"searchForm.caster\"\r\n            placeholder=\"请输入喷带手姓名\"\r\n          ></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"炉号：\">\r\n          <el-input\r\n            v-model=\"searchForm.furnace\"\r\n            placeholder=\"请输入炉号\"\r\n          ></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"材质：\">\r\n          <el-select\r\n            v-model=\"searchForm.ribbonTypeNames\"\r\n            placeholder=\"请选择\"\r\n            multiple\r\n            collapse-tags\r\n          >\r\n            <el-option\r\n              v-for=\"item in ribbonTypeList\"\r\n              :key=\"item.ribbonTypeId\"\r\n              :value=\"item.ribbonTypeName\"\r\n              :label=\"item.ribbonTypeName\"\r\n            ></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"规格：\">\r\n          <el-select\r\n            v-model=\"searchForm.ribbonWidths\"\r\n            placeholder=\"请选择\"\r\n            multiple\r\n            collapse-tags\r\n          >\r\n            <el-option\r\n              v-for=\"item in ribbonWidthList\"\r\n              :key=\"item.ribbonWidthId\"\r\n              :label=\"item.ribbonWidth\"\r\n              :value=\"item.ribbonWidth\"\r\n            ></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"厚度级别：\">\r\n          <el-select\r\n            v-model=\"searchForm.ribbonThicknessLevels\"\r\n            placeholder=\"请选择\"\r\n            multiple\r\n            collapse-tags\r\n          >\r\n            <el-option\r\n              v-for=\"item in ribbonThicknessLevelList\"\r\n              :key=\"item.ribbonThicknessLevelId\"\r\n              :label=\"item.ribbonThicknessLevel\"\r\n              :value=\"item.ribbonThicknessLevel\"\r\n            ></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"叠片级别：\">\r\n          <el-select\r\n            v-model=\"searchForm.laminationLevels\"\r\n            placeholder=\"请选择\"\r\n            multiple\r\n            collapse-tags\r\n          >\r\n            <el-option\r\n              v-for=\"item in laminationLevelList\"\r\n              :key=\"item.laminationLevelId\"\r\n              :label=\"item.laminationLevel\"\r\n              :value=\"item.laminationLevel\"\r\n            ></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"韧性级别：\">\r\n          <el-select\r\n            v-model=\"searchForm.ribbonToughnessLevels\"\r\n            placeholder=\"请选择\"\r\n            multiple\r\n            collapse-tags\r\n          >\r\n            <el-option\r\n              v-for=\"item in ribbonToughnessLevelList\"\r\n              :key=\"item.ribbonToughnessLevelId\"\r\n              :label=\"item.ribbonToughnessLevel\"\r\n              :value=\"item.ribbonToughnessLevel\"\r\n            ></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"外观级别：\">\r\n          <el-select\r\n            v-model=\"searchForm.appearenceLevels\"\r\n            placeholder=\"请选择\"\r\n            multiple\r\n            collapse-tags\r\n          >\r\n            <el-option\r\n              v-for=\"(appearenceLevel, index) in uniqueAppearenceLevelList\"\r\n              :key=\"index\"\r\n              :label=\"appearenceLevel\"\r\n              :value=\"appearenceLevel\"\r\n            ></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"厚度偏差：\">\r\n          <el-select\r\n            v-model=\"searchForm.thicknessDivation\"\r\n            placeholder=\"请选择\"\r\n          >\r\n            <el-option label=\"<=1\" :value=\"1\"></el-option>\r\n            <el-option label=\"<=2\" :value=\"2\"></el-option>\r\n            <el-option label=\"<=3\" :value=\"3\"></el-option>\r\n            <el-option label=\"<=4\" :value=\"4\"></el-option>\r\n            <el-option label=\"<=5\" :value=\"5\"></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"排序方式：\">\r\n          <el-select v-model=\"searchForm.orderBy\" placeholder=\"请选择\">\r\n            <el-option label=\"按更新时间\" :value=\"1\"></el-option>\r\n            <el-option label=\"按炉号和盘号\" :value=\"2\"></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button type=\"primary\" icon=\"el-icon-search\" @click=\"clickSearch\"\r\n            >搜索</el-button\r\n          >\r\n          <el-button type=\"primary\" icon=\"el-icon-refresh\" @click=\"reset\"\r\n            >重置</el-button\r\n          >\r\n        </el-form-item>\r\n      </el-form>\r\n    </Collapse>\r\n    <div class=\"main_bd\">\r\n      <el-col class=\"table_hd\">\r\n        <el-button\r\n          :type=\"autoQueryConfig.type\"\r\n          :icon=\"autoQueryConfig.icon\"\r\n          @click=\"handleAutoQuery\"\r\n          v-if=\"[1, 2, 3, 5].includes(userinfo.roleId)\"\r\n          >{{ autoQueryConfig.text }}</el-button\r\n        >\r\n        <el-tooltip\r\n          content=\"1.必须关闭自动更新，才能点击；2.点击后会计算下表中带材的综合级别\"\r\n          placement=\"top-end\"\r\n          ><el-button\r\n            type=\"primary\"\r\n            icon=\"el-icon-info\"\r\n            @click=\"batchCalcRibbonTotalData\"\r\n            v-if=\"[1, 2, 3, 5].includes(userinfo.roleId)\"\r\n            :disabled=\"isAutoQuerying\"\r\n            >计算综合级别</el-button\r\n          ></el-tooltip\r\n        >\r\n        <el-tooltip\r\n          content=\"请先选择筛选条件中的生产日期或者检测日期后再导出\"\r\n          placement=\"top-end\"\r\n          ><el-button\r\n            type=\"primary\"\r\n            icon=\"el-icon-download\"\r\n            @click=\"exportExcel\"\r\n            v-if=\"[1, 2, 3, 5].includes(userinfo.roleId)\"\r\n            class=\"pull_right\"\r\n            style=\"margin-left: 10px\"\r\n            >导出</el-button\r\n          ></el-tooltip\r\n        >\r\n        <el-button\r\n          type=\"primary\"\r\n          icon=\"el-icon-upload\"\r\n          @click=\"uploadExcelHandler\"\r\n          class=\"pull_right\"\r\n          v-if=\"[1, 2, 3, 5].includes(userinfo.roleId)\"\r\n          >导入</el-button\r\n        >\r\n        <el-button\r\n          type=\"primary\"\r\n          icon=\"el-icon-check\"\r\n          @click=\"measureConfirm\"\r\n          class=\"pull_right\"\r\n          v-if=\"[1, 2, 3, 5].includes(userinfo.roleId)\"\r\n          >申请入库</el-button\r\n        >\r\n      </el-col>\r\n      <el-table\r\n        :data=\"tableData\"\r\n        ref=\"table\"\r\n        stripe\r\n        border\r\n        highlight-current-row\r\n        style=\"width: 100%\"\r\n        :height=\"tableHeight\"\r\n        v-loading=\"loading\"\r\n        @selection-change=\"handleSelectionChange\"\r\n      >\r\n        <el-table-column\r\n          type=\"selection\"\r\n          width=\"20\"\r\n          :selectable=\"setSelectable\"\r\n        ></el-table-column>\r\n        <el-table-column\r\n          prop=\"furnace\"\r\n          label=\"炉号\"\r\n          align=\"center\"\r\n          width=\"130px\"\r\n          fixed\r\n        ></el-table-column>\r\n        <el-table-column\r\n          prop=\"coilNumber\"\r\n          label=\"盘号\"\r\n          align=\"center\"\r\n          width=\"35px\"\r\n          fixed\r\n        ></el-table-column>\r\n        <el-table-column\r\n          prop=\"ribbonTypeName\"\r\n          label=\"材质\"\r\n          align=\"center\"\r\n          min-width=\"50px\"\r\n        ></el-table-column>\r\n        <el-table-column\r\n          prop=\"ribbonWidth\"\r\n          label=\"规格\"\r\n          align=\"center\"\r\n          width=\"40px\"\r\n        ></el-table-column>\r\n        <el-table-column\r\n          prop=\"castDate\"\r\n          label=\"生产日期\"\r\n          align=\"center\"\r\n          :formatter=\"dateFormat\"\r\n          width=\"80px\"\r\n        ></el-table-column>\r\n        <el-table-column\r\n          prop=\"caster\"\r\n          label=\"喷带手\"\r\n          align=\"center\"\r\n          width=\"50px\"\r\n        ></el-table-column>\r\n        <el-table-column\r\n          prop=\"diameter\"\r\n          label=\"外径(mm)\"\r\n          align=\"center\"\r\n          width=\"70px\"\r\n        ></el-table-column>\r\n        <el-table-column\r\n          prop=\"coilWeight\"\r\n          label=\"重量(kg)\"\r\n          align=\"center\"\r\n          width=\"70px\"\r\n        ></el-table-column>\r\n        <el-table-column\r\n          prop=\"coilNetWeight\"\r\n          label=\"净重(kg)\"\r\n          align=\"center\"\r\n          width=\"70px\"\r\n        ></el-table-column>\r\n        <el-table-column\r\n          prop=\"laminationFactor\"\r\n          label=\"叠片系数\"\r\n          align=\"center\"\r\n          width=\"70px\"\r\n        ></el-table-column>\r\n        <el-table-column\r\n          prop=\"laminationLevel\"\r\n          label=\"叠片等级\"\r\n          align=\"center\"\r\n          width=\"70px\"\r\n        ></el-table-column>\r\n        <el-table-column\r\n          prop=\"realRibbonWidth\"\r\n          label=\"实际带宽\"\r\n          align=\"center\"\r\n          width=\"70px\"\r\n        >\r\n          <template slot-scope=\"scope\">\r\n            <!-- <div v-if=\"scope.row.isEditing === false\"> -->\r\n            <div\r\n              v-if=\"scope.row.isMeasureConfirmed === 1 || userinfo.roleId != 5\"\r\n            >\r\n              {{ scope.row.realRibbonWidth }}\r\n            </div>\r\n            <div v-else>\r\n              <el-input\r\n                size=\"mini\"\r\n                v-model=\"scope.row.realRibbonWidth\"\r\n              ></el-input>\r\n            </div>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column\r\n          prop=\"ribbonThickness1\"\r\n          label=\"带厚1(μm)\"\r\n          align=\"center\"\r\n          width=\"70px\"\r\n        >\r\n          <template slot-scope=\"scope\">\r\n            <!-- <div v-if=\"scope.row.isEditing === false\"> -->\r\n            <div\r\n              v-if=\"scope.row.isMeasureConfirmed === 1 || userinfo.roleId != 5\"\r\n            >\r\n              {{ scope.row.ribbonThickness1 }}\r\n            </div>\r\n            <div v-else>\r\n              <el-input\r\n                size=\"mini\"\r\n                v-model=\"scope.row.ribbonThickness1\"\r\n                @keyup.native=\"\r\n                  $event => thicknessChangeHandler($event, scope.row)\r\n                \"\r\n              ></el-input>\r\n            </div>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column\r\n          prop=\"ribbonThickness2\"\r\n          label=\"带厚2(μm)\"\r\n          align=\"center\"\r\n          width=\"70px\"\r\n        >\r\n          <template slot-scope=\"scope\">\r\n            <!-- <div v-if=\"scope.row.isEditing === false\"> -->\r\n            <div\r\n              v-if=\"scope.row.isMeasureConfirmed === 1 || userinfo.roleId != 5\"\r\n            >\r\n              {{ scope.row.ribbonThickness2 }}\r\n            </div>\r\n            <div v-else>\r\n              <el-input\r\n                size=\"mini\"\r\n                v-model=\"scope.row.ribbonThickness2\"\r\n                @keyup.native=\"\r\n                  $event => thicknessChangeHandler($event, scope.row)\r\n                \"\r\n              ></el-input>\r\n            </div>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column\r\n          prop=\"ribbonThickness3\"\r\n          label=\"带厚3(μm)\"\r\n          align=\"center\"\r\n          width=\"70px\"\r\n        >\r\n          <template slot-scope=\"scope\">\r\n            <!-- <div v-if=\"scope.row.isEditing === false\"> -->\r\n            <div\r\n              v-if=\"scope.row.isMeasureConfirmed === 1 || userinfo.roleId != 5\"\r\n            >\r\n              {{ scope.row.ribbonThickness3 }}\r\n            </div>\r\n            <div v-else>\r\n              <el-input\r\n                size=\"mini\"\r\n                v-model=\"scope.row.ribbonThickness3\"\r\n                @keyup.native=\"\r\n                  $event => thicknessChangeHandler($event, scope.row)\r\n                \"\r\n              ></el-input>\r\n            </div>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column\r\n          prop=\"ribbonThickness4\"\r\n          label=\"带厚4(μm)\"\r\n          align=\"center\"\r\n          width=\"70px\"\r\n        >\r\n          <template slot-scope=\"scope\">\r\n            <!-- <div v-if=\"scope.row.isEditing === false\"> -->\r\n            <div\r\n              v-if=\"scope.row.isMeasureConfirmed === 1 || userinfo.roleId != 5\"\r\n            >\r\n              {{ scope.row.ribbonThickness4 }}\r\n            </div>\r\n            <div v-else>\r\n              <el-input\r\n                size=\"mini\"\r\n                v-model=\"scope.row.ribbonThickness4\"\r\n                @keyup.native=\"\r\n                  $event => thicknessChangeHandler($event, scope.row)\r\n                \"\r\n              ></el-input>\r\n            </div>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column\r\n          prop=\"ribbonThickness5\"\r\n          label=\"带厚5(μm)\"\r\n          align=\"center\"\r\n          width=\"70px\"\r\n        >\r\n          <template slot-scope=\"scope\">\r\n            <!-- <div v-if=\"scope.row.isEditing === false\"> -->\r\n            <div\r\n              v-if=\"scope.row.isMeasureConfirmed === 1 || userinfo.roleId != 5\"\r\n            >\r\n              {{ scope.row.ribbonThickness5 }}\r\n            </div>\r\n            <div v-else>\r\n              <el-input\r\n                size=\"mini\"\r\n                v-model=\"scope.row.ribbonThickness5\"\r\n                @keyup.native=\"\r\n                  $event => thicknessChangeHandler($event, scope.row)\r\n                \"\r\n              ></el-input>\r\n            </div>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column\r\n          prop=\"ribbonThickness6\"\r\n          label=\"带厚6(μm)\"\r\n          align=\"center\"\r\n          width=\"70px\"\r\n        >\r\n          <template slot-scope=\"scope\">\r\n            <!-- <div v-if=\"scope.row.isEditing === false\"> -->\r\n            <div\r\n              v-if=\"scope.row.isMeasureConfirmed === 1 || userinfo.roleId != 5\"\r\n            >\r\n              {{ scope.row.ribbonThickness6 }}\r\n            </div>\r\n            <div v-else>\r\n              <el-input\r\n                size=\"mini\"\r\n                v-model=\"scope.row.ribbonThickness6\"\r\n                @keyup.native=\"\r\n                  $event => thicknessChangeHandler($event, scope.row)\r\n                \"\r\n              ></el-input>\r\n            </div>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column\r\n          prop=\"ribbonThickness7\"\r\n          label=\"带厚7(μm)\"\r\n          align=\"center\"\r\n          width=\"70px\"\r\n        >\r\n          <template slot-scope=\"scope\">\r\n            <!-- <div v-if=\"scope.row.isEditing === false\"> -->\r\n            <div\r\n              v-if=\"scope.row.isMeasureConfirmed === 1 || userinfo.roleId != 5\"\r\n            >\r\n              {{ scope.row.ribbonThickness7 }}\r\n            </div>\r\n            <div v-else>\r\n              <el-input\r\n                size=\"mini\"\r\n                v-model=\"scope.row.ribbonThickness7\"\r\n                @keyup.native=\"\r\n                  $event => thicknessChangeHandler($event, scope.row)\r\n                \"\r\n              ></el-input>\r\n            </div>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column\r\n          prop=\"ribbonThickness8\"\r\n          label=\"带厚8(μm)\"\r\n          align=\"center\"\r\n          width=\"70px\"\r\n        >\r\n          <template slot-scope=\"scope\">\r\n            <!-- <div v-if=\"scope.row.isEditing === false\"> -->\r\n            <div\r\n              v-if=\"scope.row.isMeasureConfirmed === 1 || userinfo.roleId != 5\"\r\n            >\r\n              {{ scope.row.ribbonThickness8 }}\r\n            </div>\r\n            <div v-else>\r\n              <el-input\r\n                size=\"mini\"\r\n                v-model=\"scope.row.ribbonThickness8\"\r\n                @keyup.native=\"\r\n                  $event => thicknessChangeHandler($event, scope.row)\r\n                \"\r\n              ></el-input>\r\n            </div>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column\r\n          prop=\"ribbonThickness9\"\r\n          label=\"带厚9(μm)\"\r\n          align=\"center\"\r\n          width=\"70px\"\r\n        >\r\n          <template slot-scope=\"scope\">\r\n            <!-- <div v-if=\"scope.row.isEditing === false\"> -->\r\n            <div\r\n              v-if=\"scope.row.isMeasureConfirmed === 1 || userinfo.roleId != 5\"\r\n            >\r\n              {{ scope.row.ribbonThickness9 }}\r\n            </div>\r\n            <div v-else>\r\n              <el-input\r\n                size=\"mini\"\r\n                v-model=\"scope.row.ribbonThickness9\"\r\n                @keyup.native=\"\r\n                  $event => thicknessChangeHandler($event, scope.row)\r\n                \"\r\n              ></el-input>\r\n            </div>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column\r\n          prop=\"ribbonThicknessDeviation\"\r\n          label=\"厚度偏差(μm)\"\r\n          align=\"center\"\r\n          width=\"90px\"\r\n        ></el-table-column>\r\n        <el-table-column\r\n          prop=\"ribbonThickness\"\r\n          label=\"平均厚度(μm)\"\r\n          align=\"center\"\r\n          width=\"90px\"\r\n        ></el-table-column>\r\n        <el-table-column\r\n          prop=\"ribbonThicknessLevel\"\r\n          label=\"厚度级别\"\r\n          align=\"center\"\r\n          width=\"70px\"\r\n        ></el-table-column>\r\n        <el-table-column\r\n          prop=\"ribbonToughness\"\r\n          label=\"韧性\"\r\n          align=\"center\"\r\n          width=\"70px\"\r\n        >\r\n          <!-- <template slot-scope=\"scope\">\r\n            <div\r\n              v-if=\"scope.row.isMeasureConfirmed === 1 || userinfo.roleId != 5\"\r\n            >\r\n              {{ scope.row.ribbonToughness }}\r\n            </div>\r\n            <div v-else>\r\n              <el-select\r\n                size=\"mini\"\r\n                v-model=\"scope.row.ribbonToughness\"\r\n                placeholder\r\n              >\r\n                <el-option\r\n                  v-for=\"item in ribbonToughnessLevelList\"\r\n                  :key=\"item.ribbonToughnessLevelId\"\r\n                  :label=\"item.ribbonToughness\"\r\n                  :value=\"item.ribbonToughness\"\r\n                ></el-option>\r\n              </el-select>\r\n            </div>\r\n          </template> -->\r\n        </el-table-column>\r\n        <el-table-column\r\n          prop=\"ribbonToughnessLevel\"\r\n          label=\"韧性等级\"\r\n          align=\"center\"\r\n          width=\"60px\"\r\n        >\r\n          <template slot-scope=\"scope\">\r\n            <div\r\n              v-if=\"scope.row.isMeasureConfirmed === 1 || userinfo.roleId != 5\"\r\n            >\r\n              {{ scope.row.ribbonToughnessLevel }}\r\n            </div>\r\n            <div v-else>\r\n              <el-select\r\n                size=\"mini\"\r\n                v-model=\"scope.row.ribbonToughnessLevel\"\r\n                placeholder=\"\"\r\n              >\r\n                <!-- <el-option label=\"A\" value=\"A\"></el-option>\r\n                <el-option label=\"B\" value=\"B\"></el-option>\r\n                <el-option label=\"C\" value=\"C\"></el-option>\r\n                <el-option label=\"D\" value=\"D\"></el-option>\r\n                <el-option label=\"E\" value=\"E\"></el-option> -->\r\n                <el-option\r\n                  v-for=\"item in ribbonToughnessLevelList\"\r\n                  :key=\"item.ribbonToughnessLevelId\"\r\n                  :label=\"item.ribbonToughnessLevel\"\r\n                  :value=\"item.ribbonToughnessLevel\"\r\n                ></el-option>\r\n              </el-select>\r\n            </div>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column\r\n          prop=\"appearence\"\r\n          label=\"外观\"\r\n          align=\"center\"\r\n          width=\"70px\"\r\n        >\r\n          <template slot-scope=\"scope\">\r\n            <!-- <div v-if=\"scope.row.isEditing === false\"> -->\r\n            <div\r\n              v-if=\"scope.row.isMeasureConfirmed === 1 || userinfo.roleId != 5\"\r\n            >\r\n              {{ scope.row.appearence ? scope.row.appearence.toString() : \"\" }}\r\n            </div>\r\n            <div v-else>\r\n              <el-select\r\n                size=\"mini\"\r\n                v-model=\"scope.row.appearence\"\r\n                multiple\r\n                collapse-tags\r\n                placeholder\r\n              >\r\n                <!-- <el-option label=\"无明显缺陷\" value=\"无明显缺陷\"></el-option>\r\n                <el-option label=\"轻棱\" value=\"轻棱\"></el-option>\r\n                <el-option label=\"棱\" value=\"棱\"></el-option>\r\n                <el-option label=\"轻微麻点\" value=\"轻微麻点\"></el-option>\r\n                <el-option label=\"麻点\" value=\"麻点\"></el-option>\r\n                <el-option label=\"轻微划痕\" value=\"轻微划痕\"></el-option>\r\n                <el-option label=\"划痕\" value=\"划痕\"></el-option>\r\n                <el-option label=\"轻微挖心\" value=\"轻微挖心\"></el-option>\r\n                <el-option label=\"挖心\" value=\"挖心\"></el-option>\r\n                <el-option label=\"少量劈裂\" value=\"少量劈裂\"></el-option>\r\n                <el-option label=\"大量劈裂\" value=\"大量劈裂\"></el-option>\r\n                <el-option label=\"端面损坏\" value=\"端面损坏\"></el-option>-->\r\n                <el-option\r\n                  v-for=\"item in appearenceList\"\r\n                  :label=\"item.appearence\"\r\n                  :value=\"item.appearence\"\r\n                  :key=\"item.appearenceLevelId\"\r\n                ></el-option>\r\n              </el-select>\r\n            </div>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column\r\n          prop=\"appearenceLevel\"\r\n          label=\"外观等级\"\r\n          align=\"center\"\r\n          width=\"60px\"\r\n        >\r\n          <template slot-scope=\"scope\">\r\n            <div\r\n              v-if=\"scope.row.isMeasureConfirmed === 1 || userinfo.roleId != 5\"\r\n            >\r\n              {{ scope.row.appearenceLevel }}\r\n            </div>\r\n            <div v-else>\r\n              <el-select\r\n                size=\"mini\"\r\n                v-model=\"scope.row.appearenceLevel\"\r\n                placeholder=\"\"\r\n              >\r\n                <!-- <el-option label=\"A\" value=\"A\"></el-option>\r\n                <el-option label=\"B\" value=\"B\"></el-option>\r\n                <el-option label=\"C\" value=\"C\"></el-option>\r\n                <el-option label=\"不合格\" value=\"不合格\"></el-option> -->\r\n                <el-option\r\n                  v-for=\"(appearenceLevel, index) in uniqueAppearenceLevelList\"\r\n                  :key=\"index\"\r\n                  :label=\"appearenceLevel\"\r\n                  :value=\"appearenceLevel\"\r\n                ></el-option>\r\n              </el-select>\r\n            </div>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column\r\n          prop=\"ribbonTotalLevel\"\r\n          label=\"综合级别\"\r\n          align=\"center\"\r\n          width=\"70px\"\r\n        >\r\n          <template slot-scope=\"scope\">\r\n            <span\r\n              :class=\"\r\n                scope.row.ribbonTotalLevel === '不合格' ? 'text_danger' : ''\r\n              \"\r\n              >{{ scope.row.ribbonTotalLevel }}</span\r\n            >\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column\r\n          prop=\"unQualifiedReason\"\r\n          label=\"不合格原因\"\r\n          align=\"center\"\r\n          width=\"70px\"\r\n          :show-overflow-tooltip=\"true\"\r\n        >\r\n        </el-table-column>\r\n        <el-table-column label=\"入库规则\" align=\"center\" width=\"60px\">\r\n          <template slot-scope=\"scope\">\r\n            <el-popover placement=\"right\" trigger=\"hover\">\r\n              <table class=\"popover_table\" cellpadding=\"0\" cellspacing=\"0\">\r\n                <thead>\r\n                  <th>类别</th>\r\n                  <th>带厚</th>\r\n                  <th>叠片</th>\r\n                  <th>韧性</th>\r\n                  <th>外观</th>\r\n                </thead>\r\n                <tbody>\r\n                  <tr>\r\n                    <td>计划内入库要求</td>\r\n                    <td>{{ scope.row.storageRule.orderThickness }}</td>\r\n                    <td>{{ scope.row.storageRule.orderLaminationFactor }}</td>\r\n                    <td>\r\n                      {{ scope.row.storageRule.orderRibbonToughnessLevels }}\r\n                    </td>\r\n                    <td>{{ scope.row.storageRule.orderAppearenceLevels }}</td>\r\n                  </tr>\r\n                  <!-- <tr v-if=\"userinfo.roleId === 1 || userinfo.roleId === 2 || userinfo.roleId === 3 || userinfo.roleId === 5 || userinfo.roleId === 6\">\r\n                    <td>计划外入库要求</td>\r\n                    <td>{{scope.row.storageRule.qualifiedThickness}}</td>\r\n                    <td>{{scope.row.storageRule.qualifiedLaminationFactor}}</td>\r\n                    <td>{{scope.row.storageRule.qualifiedRibbonToughnessLevels}}</td>\r\n                    <td>{{scope.row.storageRule.qualifiedAppearenceLevels}}</td>\r\n                  </tr>-->\r\n                  <tr\r\n                    v-for=\"(item, index) in scope.row.storageRule\r\n                      .qualifiedDemands\"\r\n                    :key=\"index\"\r\n                  >\r\n                    <td>计划外入库要求</td>\r\n                    <td>{{ item.qualifiedThickness }}</td>\r\n                    <td>{{ item.qualifiedLaminationFactor }}</td>\r\n                    <td>{{ item.qualifiedRibbonToughnessLevels.join() }}</td>\r\n                    <td>{{ item.qualifiedAppearenceLevels.join() }}</td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n              <el-button slot=\"reference\" size=\"mini\" type=\"text\"\r\n                >详情</el-button\r\n              >\r\n            </el-popover>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column\r\n          prop=\"isStorageConfirmed\"\r\n          label=\"是否入库\"\r\n          align=\"center\"\r\n          width=\"60px\"\r\n        >\r\n          <template slot-scope=\"scope\">\r\n            <div>\r\n              <span v-if=\"scope.row.isStorageConfirmed === 1\">是</span>\r\n              <span v-else class=\"text_danger\">否</span>\r\n            </div>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column\r\n          prop=\"isStored\"\r\n          label=\"入库类别\"\r\n          align=\"center\"\r\n          width=\"60px\"\r\n        >\r\n          <template slot-scope=\"scope\">\r\n            <div v-if=\"scope.row.isStorageConfirmed === 1\">\r\n              <span v-if=\"scope.row.isStored === 1\">计划内</span>\r\n              <span v-if=\"scope.row.isStored === 2\">计划外</span>\r\n              <span v-if=\"scope.row.isStored === 3\" class=\"text_danger\"\r\n                >否</span\r\n              >\r\n            </div>\r\n            <!-- <div v-else>\r\n              <el-select v-model=\"scope.row.isStored\" placeholder=\"\" size=\"mini\">\r\n                <el-option label=\"计划内入库\" :value=\"1\"></el-option>\r\n                <el-option label=\"计划外入库\" :value=\"2\"></el-option>\r\n                <el-option label=\"否\" :value=\"3\"></el-option>\r\n              </el-select>\r\n            </div>-->\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column\r\n          prop=\"unStoreReason\"\r\n          label=\"不入库原因\"\r\n          align=\"center\"\r\n          min-width=\"70px\"\r\n          :show-overflow-tooltip=\"true\"\r\n        >\r\n          <template slot-scope=\"scope\">\r\n            <div\r\n              v-if=\"scope.row.isMeasureConfirmed === 1 || userinfo.roleId != 5\"\r\n              class=\"text_danger\"\r\n            >\r\n              {{ scope.row.unStoreReason }}\r\n            </div>\r\n            <div v-else>\r\n              <el-input\r\n                size=\"mini\"\r\n                v-model=\"scope.row.unStoreReason\"\r\n              ></el-input>\r\n            </div>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column\r\n          prop=\"clients\"\r\n          label=\"判定去向\"\r\n          align=\"center\"\r\n          width=\"80px\"\r\n          :show-overflow-tooltip=\"true\"\r\n        >\r\n          <template slot-scope=\"scope\">\r\n            <div\r\n              v-if=\"scope.row.isMeasureConfirmed === 1 || userinfo.roleId != 5\"\r\n            >\r\n              {{ scope.row.clients ? scope.row.clients.toString() : \"\" }}\r\n            </div>\r\n            <div v-else>\r\n              <el-select\r\n                size=\"mini\"\r\n                v-model=\"scope.row.clients\"\r\n                placeholder\r\n                multiple\r\n                collapse-tags\r\n              >\r\n                <el-option\r\n                  v-for=\"item in clientsList\"\r\n                  :label=\"item.client\"\r\n                  :value=\"item.client\"\r\n                  :key=\"item.clientsId\"\r\n                  :disabled=\"item.isFlat === 0 && scope.row.isFlat === 1\"\r\n                ></el-option>\r\n              </el-select>\r\n            </div>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column\r\n          prop=\"measureDate\"\r\n          label=\"检测时间\"\r\n          align=\"center\"\r\n          width=\"100px\"\r\n          :formatter=\"dateTimeFormat\"\r\n          :show-overflow-tooltip=\"true\"\r\n        ></el-table-column>\r\n        <el-table-column\r\n          label=\"操作\"\r\n          align=\"center\"\r\n          v-if=\"userinfo.roleId == 5 || userinfo.roleId == 1\"\r\n        >\r\n          <template slot-scope=\"scope\">\r\n            <!-- <el-button size=\"mini\" type=\"primary\" @click=\"edit(scope.row)\" v-if=\"scope.row.isEditing === false\" :disabled=\"!isEditable\">修改</el-button> -->\r\n            <!-- <el-button size=\"mini\" type=\"primary\" @click=\"edit(scope.row)\" v-if=\"scope.row.isMeasureConfirmed === 1\" :disabled=\"!isEditable\">修改</el-button> -->\r\n            <!-- <el-button size=\"mini\" type=\"success\" @click=\"save(scope.row)\" v-else :disabled=\"!isEditable\">保存</el-button> -->\r\n            <el-button\r\n              size=\"mini\"\r\n              type=\"success\"\r\n              @click=\"save(scope.row)\"\r\n              v-if=\"scope.row.isMeasureConfirmed !== 1\"\r\n              :disabled=\"!isEditable\"\r\n              >保存</el-button\r\n            >\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n      <el-pagination\r\n        background\r\n        layout=\"total,prev,pager,next\"\r\n        :total=\"pageConfig.total\"\r\n        :current-page.sync=\"pageConfig.current\"\r\n        :page-size=\"pageConfig.pageSize\"\r\n        @current-change=\"handleCurrentChange\"\r\n      ></el-pagination>\r\n      <ApplyInStoreModal\r\n        :castId=\"Number(castId)\"\r\n        :visible=\"applyInStoreModalVisible\"\r\n        v-if=\"applyInStoreModalVisible\"\r\n        @close=\"() => (this.applyInStoreModalVisible = false)\"\r\n        @submit=\"() => (this.applyInStoreModalVisible = false)\"\r\n      />\r\n      <!-- 批量添加仓位弹出框 -->\r\n      <el-dialog\r\n        title=\"上传检测数据\"\r\n        :visible.sync=\"uploadExcelForm.visible\"\r\n        :close-on-click-modal=\"false\"\r\n        :close-on-press-escape=\"false\"\r\n        @close=\"closeUploadDialog\"\r\n        :center=\"true\"\r\n        width=\"40%\"\r\n        v-loading=\"loading\"\r\n        element-loading-text=\"拼命加载中\"\r\n      >\r\n        <el-upload\r\n          class=\"upload\"\r\n          ref=\"upload\"\r\n          :action=\"uploadExcelForm.url\"\r\n          :file-list=\"uploadExcelForm.fileList\"\r\n          :multiple=\"false\"\r\n          :limit=\"1\"\r\n          accept=\".xlsx\"\r\n          :on-error=\"uploadErrorHanler\"\r\n          :on-success=\"uploadSuccessHanler\"\r\n          :auto-upload=\"false\"\r\n        >\r\n          <el-button slot=\"trigger\" size=\"small\" type=\"primary\"\r\n            >选取文件</el-button\r\n          >\r\n          <div slot=\"tip\" class=\"el-upload__tip\">\r\n            只能上传xlsx文件，且不超过500kb\r\n          </div>\r\n        </el-upload>\r\n        <div slot=\"footer\">\r\n          <el-button type=\"primary\" @click=\"submitUploadForm\"\r\n            >上传提交</el-button\r\n          >\r\n        </div>\r\n      </el-dialog>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport qs from \"qs\";\r\nimport { cloneDeep } from \"lodash\";\r\nimport { Message } from \"element-ui\";\r\nimport moment from \"moment\";\r\nimport urlmap from \"@/utils/urlmap\";\r\nimport { dateFormat, dateTimeFormat, debounce } from \"@/utils/common\";\r\nimport { mapState, mapActions } from \"vuex\";\r\nimport Collapse from \"@/components/collapse.vue\";\r\nimport ApplyInStoreModal from \"./components/ApplyInStoreModal.vue\";\r\n\r\nconst defaultDateRange = [\r\n  `${moment()\r\n    .subtract(6, \"days\")\r\n    .format(\"YYYY-MM-DD\")} 00:00:00`,\r\n  `${moment().format(\"YYYY-MM-DD\")} 23:59:59`\r\n];\r\n\r\nexport default {\r\n  name: \"melt\",\r\n  components: {\r\n    Collapse,\r\n    ApplyInStoreModal\r\n  },\r\n  data() {\r\n    return {\r\n      userinfo: {},\r\n      castId: 6,\r\n      searchForm: {\r\n        caster: \"\",\r\n        furnace: \"\",\r\n        date: [...defaultDateRange],\r\n        measureDate: [],\r\n        ribbonTypeNames: [],\r\n        ribbonWidths: [],\r\n        ribbonThicknessLevels: [],\r\n        laminationLevels: [],\r\n        ribbonToughnessLevels: [],\r\n        appearenceLevels: [],\r\n        thicknessDivation: \"\",\r\n        orderBy: 1\r\n      },\r\n      loading: false,\r\n      tableData: [],\r\n      pageConfig: {\r\n        total: 1,\r\n        current: 1,\r\n        pageSize: 10\r\n      },\r\n      isExportable: false,\r\n      isEditable: false,\r\n      isDeleteable: false,\r\n      tableHeight: 550,\r\n      multipleSelection: [],\r\n      isBatchInStored: false,\r\n      isAutoQuerying: false,\r\n      pollTimer: null,\r\n      // uniqueAppearenceLevelList: []\r\n      applyInStoreModalVisible: false,\r\n      uploadExcelForm: {\r\n        loading: false,\r\n        visible: false,\r\n        url: urlmap.uploadMeasure,\r\n        // url: \"http://192.168.1.8:8080/api/measure/uploadMeasure\",\r\n        fileList: []\r\n      }\r\n    };\r\n  },\r\n  computed: {\r\n    autoQueryConfig() {\r\n      return {\r\n        icon: this.isAutoQuerying\r\n          ? \"el-icon-video-pause\"\r\n          : \"el-icon-video-play\",\r\n        text: this.isAutoQuerying ? \"停止自动更新\" : \"启动自动更新\",\r\n        type: this.isAutoQuerying ? \"danger\" : \"primary\"\r\n      };\r\n    },\r\n    ...mapState([\r\n      \"ribbonToughnessLevelList\",\r\n      \"ribbonTypeList\",\r\n      \"ribbonWidthList\",\r\n      \"ribbonThicknessLevelList\",\r\n      \"laminationLevelList\",\r\n      \"clientsList\",\r\n      \"appearenceList\",\r\n      \"linerWeightList\"\r\n    ]),\r\n    uniqueAppearenceLevelList() {\r\n      return this.appearenceList.reduce((acc, cur) => {\r\n        if (!acc.includes(cur.appearenceLevel)) {\r\n          acc.push(cur.appearenceLevel);\r\n        }\r\n        return acc;\r\n      }, []);\r\n    }\r\n  },\r\n  // 动态路由匹配\r\n  beforeRouteUpdate(to, from, next) {\r\n    this.castId = to.params.castId;\r\n    this.getTableData();\r\n    this.isExportable = this.setExportable();\r\n    this.isEditable = this.setEditable();\r\n    this.isDeleteable = this.setDeleteable();\r\n    this.isBatchInStored = this.setBatchInStored();\r\n    next();\r\n  },\r\n  async created() {\r\n    this.castId = this.$route.params.castId;\r\n    this.userinfo = JSON.parse(localStorage.getItem(\"userinfo\"));\r\n    this.isExportable = this.setExportable();\r\n    this.isEditable = this.setEditable();\r\n    this.isDeleteable = this.setDeleteable();\r\n    this.isBatchInStored = this.setBatchInStored();\r\n    await this.getLinerWeightList();\r\n    await this.getRibbonToughnessLevelList();\r\n    await this.getRibbonTypeList();\r\n    await this.getRibbonWidthList();\r\n    await this.getRibbonThicknessLevelList();\r\n    await this.getLaminationLevelList();\r\n    await this.getClientsList();\r\n    await this.getAppearenceLevelList();\r\n    this.getTableData();\r\n  },\r\n  mounted() {\r\n    const self = this;\r\n    self.$nextTick(() => {\r\n      // self.tableHeight = window.innerHeight - self.$refs.table.$el.getBoundingClientRect().top;\r\n      self.tableHeight = window.innerHeight - 80;\r\n    });\r\n    window.onresize = debounce(() => {\r\n      // self.tableHeight = window.innerHeight - self.$refs.table.$el.getBoundingClientRect().top;\r\n      self.tableHeight = window.innerHeight - 80;\r\n    }, 1000);\r\n  },\r\n  beforeDestroy() {\r\n    clearInterval(this.pollTimer);\r\n    this.pollTimer = null;\r\n  },\r\n  methods: {\r\n    handleAutoQuery() {\r\n      const curStatus = this.isAutoQuerying;\r\n      this.isAutoQuerying = !curStatus;\r\n      if (!this.isAutoQuerying) {\r\n        this.pollTimer && clearInterval(this.pollTimer);\r\n      } else {\r\n        clearInterval(this.pollTimer);\r\n        this.getTableData();\r\n        this.pollTimer = setInterval(() => {\r\n          this.getTableData();\r\n        }, 5000);\r\n      }\r\n    },\r\n    batchCalcRibbonTotalData() {\r\n      /**\r\n       * 筛选出从PLC传入的数据。特征：1.没有综合级别，2.有带材厚度，韧性等级code，外观等级code\r\n       */\r\n      let list = this.tableData.filter(\r\n        item =>\r\n          !item.ribbonTotalLevel &&\r\n          [\r\n            item.ribbonThickness1,\r\n            item.ribbonThickness2,\r\n            item.ribbonThickness3,\r\n            item.ribbonThickness4,\r\n            item.ribbonThickness5,\r\n            item.ribbonThickness6,\r\n            item.ribbonThickness7,\r\n            item.ribbonThickness8,\r\n            item.ribbonThickness9,\r\n            item.realRibbonWidth,\r\n            item.ribbonToughnessLevel,\r\n            item.appearenceLevel\r\n          ].every(el => !!el)\r\n      );\r\n      if (!Array.isArray(list) || list.length === 0)\r\n        return Message({\r\n          message: `没有找到需要计算综合级别的带材，请确认 带材厚度/带宽/韧性等级/外观等级 等数据是否完整`,\r\n          type: \"error\"\r\n        });\r\n      /**\r\n       * 计算：\r\n       * 1.平均厚度，最大偏差，厚度等级\r\n       * 2.叠片系数，叠片等级\r\n       * 3.韧性等级，韧性描述\r\n       * 4.外观等级，外观描述\r\n       * 5.综合等级\r\n       * 6.合格情况\r\n       *\r\n       */\r\n      list = list.map(item => {\r\n        // 根据PLC数据获取韧性等级\r\n        // const ribbonToughnessItem = this.ribbonToughnessLevelList.find(ribbon => ribbon.ribbonToughnessLevelCode === item.ribbonToughnessLevelCode) || {}\r\n        // item.ribbonToughnessLevel = ribbonToughnessItem.ribbonToughnessLevel;\r\n        // 根据PLC数据获取外观等级\r\n        // const appearenceItem = this.appearenceList.find(a => a.appearenceLevelCode === item.appearenceLevelCode) || {}\r\n        // item.appearenceLevel = appearenceItem.appearenceLevel;\r\n        const result = this.calcRibbonTotalData(item);\r\n        return {\r\n          ...item,\r\n          ...result\r\n        };\r\n      });\r\n\r\n      this.$http(\"PUT\", urlmap.updateMeasureByBatch, {\r\n        listJson: JSON.stringify(list)\r\n      })\r\n        .then(res => {\r\n          this.getTableData({ current: this.pageConfig.current || 1 });\r\n        })\r\n        .catch(err => console.log(err));\r\n    },\r\n    thicknessChangeHandler(e, row) {\r\n      let ribbonThicknessList = [\r\n        row.ribbonThickness1,\r\n        row.ribbonThickness2,\r\n        row.ribbonThickness3,\r\n        row.ribbonThickness4,\r\n        row.ribbonThickness5,\r\n        row.ribbonThickness6,\r\n        row.ribbonThickness7,\r\n        row.ribbonThickness8,\r\n        row.ribbonThickness9\r\n      ];\r\n      ribbonThicknessList = ribbonThicknessList\r\n        .map(item => {\r\n          if (item !== \"\") {\r\n            return Number(item);\r\n          }\r\n        })\r\n        .filter(item => item !== undefined);\r\n      row.ribbonThicknessDeviation = this.calcMaxDeviation(ribbonThicknessList);\r\n      row.ribbonThickness =\r\n        ribbonThicknessList.length > 0\r\n          ? Number(\r\n              (\r\n                ribbonThicknessList.reduce((acc, cur) => acc + cur, 0) /\r\n                ribbonThicknessList.length\r\n              ).toFixed(2)\r\n            )\r\n          : 0;\r\n      row.ribbonThicknessLevel = this.calcribbonThicknessLevel(\r\n        row.ribbonThickness\r\n      );\r\n    },\r\n    ...mapActions([\r\n      \"getRibbonToughnessLevelList\",\r\n      \"getRibbonTypeList\",\r\n      \"getRibbonWidthList\",\r\n      \"getRibbonThicknessLevelList\",\r\n      \"getLaminationLevelList\",\r\n      \"getClientsList\",\r\n      \"getAppearenceLevelList\",\r\n      \"getLinerWeightList\"\r\n    ]),\r\n    dateFormat(row, column) {\r\n      return dateFormat(row.castDate);\r\n    },\r\n    dateTimeFormat(row, column) {\r\n      return row.measureDate ? dateTimeFormat(row.measureDate) : \"\";\r\n    },\r\n    setEditable() {\r\n      if (this.userinfo.roleId == 5) {\r\n        // 检测人员可修改\r\n        return true;\r\n      } else {\r\n        // 其他\r\n        return false;\r\n      }\r\n    },\r\n    setDeleteable() {\r\n      if (this.userinfo.roleId == 1) {\r\n        // 厂长 可删除\r\n        return true;\r\n      } else {\r\n        // 其他\r\n        return false;\r\n      }\r\n    },\r\n    setExportable() {\r\n      if ([1, 2, 3, 5].includes(this.userinfo.roleId)) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    },\r\n    setBatchInStored() {\r\n      if ([1, 5].includes(this.userinfo.roleId)) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    },\r\n    // 计算内衬的重量\r\n    calcLinerWeight(ribbonWidth) {\r\n      /** \r\n       * 计算单盘净重，不同规格的内衬重量不同\r\n       * 内衬的规格和重量对应表\r\n       * 20.5: 0.05,\r\n        25.5: 0.06,\r\n        30: 0.08,\r\n        40: 0.12,\r\n        50: 0.12\r\n       */\r\n      ribbonWidth = Number(ribbonWidth);\r\n      const { linerWeight } =\r\n        this.linerWeightList.find(item => item.ribbonWidth === ribbonWidth) ||\r\n        {};\r\n\r\n      if (!linerWeight) {\r\n        Message({\r\n          message: `带材宽度${ribbonWidth}没有配置所用内衬重量，请联系管理员进行配置！`,\r\n          type: \"error\"\r\n        });\r\n        return 0;\r\n      }\r\n\r\n      // if (ribbonWidth < 25) {\r\n      //   linerWeight = 0.05;\r\n      // } else if (ribbonWidth >= 25 && ribbonWidth < 30) {\r\n      //   linerWeight = 0.06;\r\n      // } else if (ribbonWidth >= 30 && ribbonWidth < 40) {\r\n      //   linerWeight = 0.08;\r\n      // } else if (ribbonWidth >= 40 && ribbonWidth < 50) {\r\n      //   linerWeight = 0.12;\r\n      // } else if (ribbonWidth >= 50 && ribbonWidth < 58) {\r\n      //   linerWeight = 0.12;\r\n      // } else if (ribbonWidth >= 58) {\r\n      //   // 58mm 以上的使用两个 30 的内衬拼接起来\r\n      //   linerWeight = 0.08 * 2;\r\n      // }\r\n      return linerWeight;\r\n    },\r\n    clickSearch() {\r\n      // 重置当前页码为1\r\n      const params = {\r\n        current: 1\r\n      };\r\n      this.pageConfig.current = 1;\r\n      this.getTableData(params);\r\n    },\r\n    reset() {\r\n      this.searchForm = {\r\n        caster: \"\",\r\n        furnace: \"\",\r\n        date: [...defaultDateRange],\r\n        measureDate: [],\r\n        ribbonTypeNames: [],\r\n        ribbonWidths: [],\r\n        ribbonThicknessLevels: [],\r\n        laminationLevels: [],\r\n        ribbonToughnessLevels: [],\r\n        appearenceLevels: [],\r\n        thicknessDivation: \"\",\r\n        orderBy: 1\r\n      };\r\n      const params = {\r\n        current: 1\r\n      };\r\n      this.pageConfig.current = 1;\r\n      this.getTableData(params);\r\n    },\r\n    getTableData(params = {}) {\r\n      const _params = {\r\n        castId: this.castId,\r\n        startTime: this.searchForm.date[0],\r\n        endTime: this.searchForm.date[1],\r\n        startMeasureTime: this.searchForm.measureDate[0],\r\n        endMeasureTime: this.searchForm.measureDate[1],\r\n        caster: this.searchForm.caster,\r\n        furnace: this.searchForm.furnace,\r\n        ribbonTypeNameJson: JSON.stringify(this.searchForm.ribbonTypeNames),\r\n        ribbonWidthJson: JSON.stringify(this.searchForm.ribbonWidths),\r\n        ribbonThicknessLevelJson: JSON.stringify(\r\n          this.searchForm.ribbonThicknessLevels\r\n        ),\r\n        laminationLevelJson: JSON.stringify(this.searchForm.laminationLevels),\r\n        ribbonToughnessLevelJson: JSON.stringify(\r\n          this.searchForm.ribbonToughnessLevels\r\n        ),\r\n        appearenceLevelJson: JSON.stringify(this.searchForm.appearenceLevels),\r\n        thicknessDivation: this.searchForm.thicknessDivation,\r\n        orderBy: this.searchForm.orderBy\r\n      };\r\n      console.log(params);\r\n      Object.assign(params, _params);\r\n      this.loading = true;\r\n      this.$http(\"get\", urlmap.queryMeasure, params)\r\n        .then(data => {\r\n          this.pageConfig.total = data.count;\r\n          this.pageConfig.pageSize = data.limit;\r\n          data.list &&\r\n            data.list.forEach(item => {\r\n              this.userinfo.roleId == 5\r\n                ? (item.isEditing = true)\r\n                : (item.isEditing = false);\r\n              item.storageRule = {\r\n                orderThickness: item.orderThickness,\r\n                orderLaminationFactor: item.orderLaminationFactor,\r\n                orderRibbonToughnessLevels: item.orderRibbonToughnessLevels,\r\n                orderAppearenceLevels: item.orderAppearenceLevels,\r\n                // qualifiedThickness: item.qualifiedThickness,\r\n                // qualifiedLaminationFactor: item.qualifiedLaminationFactor,\r\n                // qualifiedRibbonToughnessLevels: item.qualifiedRibbonToughnessLevels,\r\n                // qualifiedAppearenceLevels: item.qualifiedAppearenceLevels,\r\n                qualifiedDemands: [1, 2, 3, 5, 6, 15].includes(\r\n                  Number(this.userinfo.roleId)\r\n                )\r\n                  ? JSON.parse(item.qualifiedDemands)\r\n                  : []\r\n              };\r\n              item.clients = item.clients ? item.clients.split(\",\") : [];\r\n              item.appearence = item.appearence\r\n                ? item.appearence.split(\",\")\r\n                : [];\r\n\r\n              const coilNetWeight = (\r\n                item.coilWeight - this.calcLinerWeight(item.ribbonWidth)\r\n              ).toFixed(2);\r\n              item.coilNetWeight = Number(coilNetWeight);\r\n              item.remainWeight = item.coilNetWeight;\r\n            });\r\n          this.tableData = data.list;\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n        })\r\n        .finally(() => {\r\n          this.loading = false;\r\n        });\r\n    },\r\n    edit(row) {\r\n      if (\r\n        (row.isStored == 1 || row.isStored == 2) &&\r\n        row.isMeasureConfirmed == 1\r\n      ) {\r\n        // 已经入库\r\n        return this.$message({\r\n          message: \"该带材已经入库，您无权限操作，请联系库房主管人员！\",\r\n          type: \"error\"\r\n        });\r\n      }\r\n      // row.isEditing = true;\r\n    },\r\n    formatToNumber(value) {\r\n      return typeof value === \"string\" ? Number(value.trim()) : value;\r\n    },\r\n    calcRibbonTotalData(row) {\r\n      // 计算叠片系数和叠片等级 realRibbonWidth diameter coilWeight\r\n      // row.laminationFactor = ((row.coilWeight - 0.09)/(Math.PI * (row.diameter * row.diameter / 4 - 95 * 95 / 4) * 7.2) * Math.pow(10, 6) / row.realRibbonWidth).toFixed(2);\r\n      row.laminationFactor = this.calcLaminationFactor(\r\n        row.coilNetWeight,\r\n        row.diameter,\r\n        row.realRibbonWidth\r\n      );\r\n      row.laminationLevel = this.calcLaminationLevel(row.laminationFactor);\r\n\r\n      // 根据韧性描述判定韧性等级 ribbonToughnessLevel\r\n      // row.ribbonToughnessLevel = this.ribbonToughnessLevelList.reduce(\r\n      //   (acc, cur) => {\r\n      //     acc[cur.ribbonToughness] = cur.ribbonToughnessLevel;\r\n      //     return acc;\r\n      //   },\r\n      //   {}\r\n      // )[row.ribbonToughness];\r\n\r\n      // 根据韧性等级来获取韧性描述\r\n      row.ribbonToughness =\r\n        this.ribbonToughnessLevelList.reduce((acc, cur) => {\r\n          acc[cur.ribbonToughnessLevel] = cur.ribbonToughness;\r\n          return acc;\r\n        }, {})[row.ribbonToughnessLevel] || \"\";\r\n\r\n      // 根据外观描述判定外观等级 appearenceLevel\r\n      // row.appearenceLevel = this.appearenceList.reduce((acc, cur) => {\r\n      //   acc[cur.appearence] = cur.appearenceLevel;\r\n      //   return acc;\r\n      // }, {})[row.appearence];\r\n\r\n      // 计算厚度最大偏差、平均厚度、厚度级别\r\n      row.ribbonThickness1 = this.formatToNumber(row.ribbonThickness1);\r\n      row.ribbonThickness2 = this.formatToNumber(row.ribbonThickness2);\r\n      row.ribbonThickness3 = this.formatToNumber(row.ribbonThickness3);\r\n      row.ribbonThickness4 = this.formatToNumber(row.ribbonThickness4);\r\n      row.ribbonThickness5 = this.formatToNumber(row.ribbonThickness5);\r\n      row.ribbonThickness6 = this.formatToNumber(row.ribbonThickness6);\r\n      row.ribbonThickness7 = this.formatToNumber(row.ribbonThickness7);\r\n      row.ribbonThickness8 = this.formatToNumber(row.ribbonThickness8);\r\n      row.ribbonThickness9 = this.formatToNumber(row.ribbonThickness9);\r\n\r\n      row.ribbonThicknessDeviation = this.calcMaxDeviation([\r\n        row.ribbonThickness1,\r\n        row.ribbonThickness2,\r\n        row.ribbonThickness3,\r\n        row.ribbonThickness4,\r\n        row.ribbonThickness5,\r\n        row.ribbonThickness6,\r\n        row.ribbonThickness7,\r\n        row.ribbonThickness8,\r\n        row.ribbonThickness9\r\n      ]);\r\n      const ribbonThickness = (\r\n        (row.ribbonThickness1 +\r\n          row.ribbonThickness2 +\r\n          row.ribbonThickness3 +\r\n          row.ribbonThickness4 +\r\n          row.ribbonThickness5 +\r\n          row.ribbonThickness6 +\r\n          row.ribbonThickness7 +\r\n          row.ribbonThickness8 +\r\n          row.ribbonThickness9) /\r\n        9\r\n      ).toFixed(2);\r\n      row.ribbonThickness = Number(ribbonThickness);\r\n      row.ribbonThicknessLevel = this.calcribbonThicknessLevel(\r\n        row.ribbonThickness\r\n      );\r\n\r\n      // 综合级别\r\n      const [ribbonTotalLevel, unQualifiedReason] = this.calcRibbonTotalLevel(\r\n        row\r\n      );\r\n      row.ribbonTotalLevel = ribbonTotalLevel;\r\n      row.unQualifiedReason = unQualifiedReason;\r\n\r\n      // 是否入库：不合格不能入库，端面有问题的不能入库，不满足入库规则的不能入库\r\n      if (row.ribbonTotalLevel === \"不合格\") {\r\n        row.isStored = 3;\r\n        // row.isMeasureConfirmed = 1;\r\n      } else {\r\n        // 入库分为：计划内入库和计划外入库\r\n        row.isStored = this.setStoredType(row);\r\n        if (row.isStored === 1) {\r\n          row.inPlanStoredWeight = row.coilNetWeight;\r\n          // 符合订单非薄带重量：满足订单要求且厚度为2级别的带材重量\r\n          if (row.ribbonThicknessLevel === 2) {\r\n            row.inPlanThickRibbonWeight = row.coilNetWeight;\r\n          }\r\n        } else if (row.isStored === 2) {\r\n          row.outPlanStoredWeight = row.coilNetWeight;\r\n        }\r\n\r\n        // 总入库重量\r\n        const totalStoredWeight = (\r\n          row.inPlanStoredWeight + row.outPlanStoredWeight\r\n        ).toFixed(2);\r\n        row.totalStoredWeight = Number(totalStoredWeight);\r\n\r\n        // 计算各质量等级的重量\r\n        this.calcQualityOfABCDE(row);\r\n        // 计算薄带和高叠片薄带的重量\r\n        this.calcThinRibbonWeight(row);\r\n        // // 质量等级为好的带材质量：A + 符合订单非薄带\r\n        // row.qualityOfGood = (row.qualityOfA + row.inPlanThickRibbonWeight).toFixed(2);\r\n        // // 质量等级为良的带材质量：B\r\n        // row.qualityOfFine = row.qualityOfB;\r\n        // // 质量等级为中的带材质量：30**、40**+ 计划外入库\r\n        // if (/^[3-4]0[A-Z]{2,3}$/.test(row.ribbonTotalLevel)) {\r\n        //   row.qualityOfNormal = row.coilNetWeight;\r\n        // } else if(row.isStored === 2) {\r\n        //   row.qualityOfNormal = row.outPlanStoredWeight;\r\n        // }\r\n\r\n        // 质量等级为好的带材质量：符合订单的带材\r\n        row.qualityOfGood = row.inPlanStoredWeight;\r\n        // 质量等级为良的带材质量：除去符合任务单要求的薄带（31**41**51**61**71**81**32**42**52**62**72**82**33**43**53**63**73**83**34**44**54**64**74**84**）还有德国法国的（22*B、23*B）\r\n        // 质量等级为中的带材质量：除去好和良的其他入库。\r\n        if (row.isStored === 2) {\r\n          if (\r\n            /^[3-8][1-4][A-E][A-C]G?([+-]E)?F?$/.test(row.ribbonTotalLevel) ||\r\n            /^2[2-3][A-C]BL?([+-]E)?F?$/.test(row.ribbonTotalLevel)\r\n          ) {\r\n            row.qualityOfFine = row.coilNetWeight;\r\n          } else {\r\n            row.qualityOfNormal = row.coilNetWeight;\r\n          }\r\n        }\r\n      }\r\n\r\n      const clone = cloneDeep(row);\r\n      clone.clients = clone.clients.join();\r\n      clone.appearence = clone.appearence.join();\r\n\r\n      // 去掉值为null或者undefined的参数\r\n      Object.keys(clone).forEach(key => {\r\n        if (clone[key] == null) {\r\n          delete clone[key];\r\n        }\r\n      });\r\n      return clone;\r\n    },\r\n    save(row) {\r\n      // row.isEditing = false;\r\n      // this.pageConfig.current = 1;\r\n      // this.getTableData();\r\n      const clone = this.calcRibbonTotalData(row);\r\n      // 发送请求，更新当前的数据\r\n      this.$http(\"PUT\", urlmap.updateMeasure, clone)\r\n        .then(data => {})\r\n        .catch(error => {\r\n          console.log(error);\r\n        });\r\n    },\r\n    handleCurrentChange(val) {\r\n      const params = {\r\n        current: val\r\n      };\r\n      this.getTableData(params);\r\n    },\r\n    calcRibbonTotalLevel(row) {\r\n      let ribbonTotalLevel = \"\";\r\n      let unQualifiedReason = \"\";\r\n      // 带材是否脆\r\n      const isFragile = [\"D\", \"E\"].includes(row.ribbonToughnessLevel);\r\n      let _width = row.realRibbonWidth - row.ribbonWidth;\r\n      _width = Number(_width.toFixed(1));\r\n\r\n      /* ~~~~~~~~~~~首先判定不合格的情况~~~~~~~~~~~~~~ */\r\n\r\n      /** 叠片不合格 */\r\n      if (row.laminationLevel === \"不合格\") {\r\n        ribbonTotalLevel = \"不合格\";\r\n        unQualifiedReason = \"叠片不合格\";\r\n        return [ribbonTotalLevel, unQualifiedReason];\r\n      }\r\n\r\n      /** 带面不合格 */\r\n\r\n      if (row.appearenceLevel === \"不合格\") {\r\n        ribbonTotalLevel = \"不合格\";\r\n        unQualifiedReason = \"外观不合格\";\r\n        return [ribbonTotalLevel, unQualifiedReason];\r\n      }\r\n\r\n      /**\r\n       * 针对1K107B：\r\n       */\r\n\r\n      if (row.ribbonTypeName == \"1K107B\") {\r\n        // d＞32μm，判定为不合格;\r\n        if (row.ribbonThickness > 32) {\r\n          ribbonTotalLevel = \"不合格\";\r\n          unQualifiedReason = \"1K107B，厚度大于32μm，不合格\";\r\n          return [ribbonTotalLevel, unQualifiedReason];\r\n        }\r\n\r\n        // 规格 为 32，材质为 1K107B 的带材，如果韧性为D或E，则综合级别为不合格\r\n        if ([32].includes(row.ribbonWidth) && isFragile) {\r\n          ribbonTotalLevel = \"不合格\";\r\n          unQualifiedReason = \"1K107B，规格为32mm，韧性为D/E，不合格\";\r\n          return [ribbonTotalLevel, unQualifiedReason];\r\n        }\r\n\r\n        // 如果规格<50mm，带材韧性为D/E，同时带材宽度超出规格±0.2mm，此带材为不合格，否则加E，正偏差为+E,负偏差为-E\r\n        if (row.ribbonWidth < 50 && isFragile && Math.abs(_width) > 0.2) {\r\n          ribbonTotalLevel = \"不合格\";\r\n          unQualifiedReason =\r\n            \"1K107B，规格<50mm，带材宽度超出规格±0.2mm，同时韧性为D/E，不合格\";\r\n          return [ribbonTotalLevel, unQualifiedReason];\r\n        }\r\n        if (row.ribbonWidth >= 50 && isFragile && Math.abs(_width) > 0.5) {\r\n          ribbonTotalLevel = \"不合格\";\r\n          unQualifiedReason =\r\n            \"1K107B，规格>=50mm，带材宽度超出规格±0.5mm，同时韧性为D/E，不合格\";\r\n          return [ribbonTotalLevel, unQualifiedReason];\r\n        }\r\n\r\n        //带材厚度偏差大于3，同时韧性为D/E,此带材为不合格，否则加F\r\n        if (row.ribbonThicknessDeviation > 3 && isFragile) {\r\n          ribbonTotalLevel = \"不合格\";\r\n          unQualifiedReason =\r\n            \"1K107B，带材厚度偏差大于3，同时韧性为D/E，不合格\";\r\n          return [ribbonTotalLevel, unQualifiedReason];\r\n        }\r\n\r\n        // 针对规格为55mm/60mm/65mm、韧性为D/E级别且叠片≥0.75的带材若无法判定为信维带面（带面B级别以上）直接判定为不合格\r\n        if (\r\n          [55, 60, 65].includes(row.ribbonWidth) &&\r\n          isFragile &&\r\n          row.laminationFactor >= 0.75 &&\r\n          ![\"A\", \"B\"].includes(row.appearenceLevel)\r\n        ) {\r\n          ribbonTotalLevel = \"不合格\";\r\n          unQualifiedReason =\r\n            \"1K107B，规格为55mm/60mm/65mm、韧性为D/E级别且叠片≥0.75的带材若无法判定为信维带面（带面B级别以上），不合格\";\r\n          return [ribbonTotalLevel, unQualifiedReason];\r\n        }\r\n\r\n        // 针对规格为20mm/25mm/30mm/35mm/40mm/42mm/43mm/45mm/50mm、韧性为D/E级别且叠片＜0.75的带材直接判定为不合格\r\n        if (\r\n          [20, 25, 30, 35, 40, 42, 43, 45, 50].includes(row.ribbonWidth) &&\r\n          isFragile &&\r\n          row.laminationFactor < 0.75\r\n        ) {\r\n          ribbonTotalLevel = \"不合格\";\r\n          unQualifiedReason =\r\n            \"1K107B，规格为20mm/25mm/30mm/35mm/40mm/42mm/43mm/45mm/50mm，韧性为D/E级别且叠片＜0.75，不合格\";\r\n          return [ribbonTotalLevel, unQualifiedReason];\r\n        }\r\n      }\r\n\r\n      /**\r\n       * 针对1K107BW：\r\n       */\r\n\r\n      if (row.ribbonTypeName == \"1K107BW\") {\r\n        // d＞32μm，判定为不合格;\r\n        if (row.ribbonThickness > 32) {\r\n          ribbonTotalLevel = \"不合格\";\r\n          unQualifiedReason = \"1K107BW，厚度大于32μm，不合格\";\r\n          return [ribbonTotalLevel, unQualifiedReason];\r\n        }\r\n\r\n        // 规格 为 32，材质为 1K107BW 的带材，如果韧性为D或E，则综合级别为不合格\r\n        if ([32].includes(row.ribbonWidth) && isFragile) {\r\n          ribbonTotalLevel = \"不合格\";\r\n          unQualifiedReason = \"1K107BW，规格为32mm，韧性为D/E，不合格\";\r\n          return [ribbonTotalLevel, unQualifiedReason];\r\n        }\r\n\r\n        // 如果规格<50mm，带材韧性为D/E，同时带材宽度超出规格±0.2mm，此带材为不合格，否则加E，正偏差为+E,负偏差为-E\r\n        if (row.ribbonWidth < 50 && isFragile && Math.abs(_width) > 0.2) {\r\n          ribbonTotalLevel = \"不合格\";\r\n          unQualifiedReason =\r\n            \"1K107BW，规格<50mm，带材宽度超出规格±0.2mm，同时韧性为D/E，不合格\";\r\n          return [ribbonTotalLevel, unQualifiedReason];\r\n        }\r\n        if (row.ribbonWidth >= 50 && isFragile && Math.abs(_width) > 0.5) {\r\n          ribbonTotalLevel = \"不合格\";\r\n          unQualifiedReason =\r\n            \"1K107BW，规格>=50mm，带材宽度超出规格±0.5mm，同时韧性为D/E，不合格\";\r\n          return [ribbonTotalLevel, unQualifiedReason];\r\n        }\r\n\r\n        //带材厚度偏差大于3，同时韧性为D/E,此带材为不合格，否则加F\r\n        if (row.ribbonThicknessDeviation > 3 && isFragile) {\r\n          ribbonTotalLevel = \"不合格\";\r\n          unQualifiedReason =\r\n            \"1K107BW，带材厚度偏差大于3，同时韧性为D/E，不合格\";\r\n          return [ribbonTotalLevel, unQualifiedReason];\r\n        }\r\n\r\n        // 针对规格为20mm/25mm/30mm/35mm/40mm/42mm/43mm/45mm/50mm、韧性为D/E级别且叠片＜0.75的带材直接判定为不合格\r\n        if (\r\n          [20, 25, 30, 35, 40, 42, 43, 45, 50].includes(row.ribbonWidth) &&\r\n          isFragile &&\r\n          row.laminationFactor < 0.75\r\n        ) {\r\n          ribbonTotalLevel = \"不合格\";\r\n          unQualifiedReason =\r\n            \"1K107BW，规格为20mm/25mm/30mm/35mm/40mm/42mm/43mm/45mm/50mm，韧性为D/E级别且叠片＜0.75，不合格\";\r\n          return [ribbonTotalLevel, unQualifiedReason];\r\n        }\r\n      }\r\n\r\n      /**\r\n       * 针对1K107E：\r\n       */\r\n\r\n      if (row.ribbonTypeName == \"1K107E\") {\r\n        // 韧性为D/E为不合格\r\n        if (isFragile) {\r\n          ribbonTotalLevel = \"不合格\";\r\n          unQualifiedReason = \"1K107E，韧性为D/E级别，不合格\";\r\n          return [ribbonTotalLevel, unQualifiedReason];\r\n        }\r\n\r\n        // 叠片＜0.78的带材直接判定为不合格\r\n        if (row.laminationFactor < 0.78) {\r\n          ribbonTotalLevel = \"不合格\";\r\n          unQualifiedReason = \"1K107E，叠片＜0.78，不合格\";\r\n          return [ribbonTotalLevel, unQualifiedReason];\r\n        }\r\n      }\r\n\r\n      /**\r\n       * 针对AD25/ND25/1K107A/FN-300\r\n       */\r\n\r\n      // 针对成分为 AD25、ND25、1K107A、FN-300的直喷带材，任意规格, 叠片＜0.75，判定为不合格；\r\n      if ([\"AD25\", \"ND25\", \"1K107A\", \"FN-300\"].includes(row.ribbonTypeName)) {\r\n        // d＞32μm，判定为不合格;\r\n        if (row.ribbonThickness > 32) {\r\n          ribbonTotalLevel = \"不合格\";\r\n          unQualifiedReason =\r\n            \"成分为 AD25、ND25、1K107A、FN-300的直喷带材，厚度大于32μm，不合格\";\r\n          return [ribbonTotalLevel, unQualifiedReason];\r\n        }\r\n        if (row.laminationFactor < 0.75) {\r\n          ribbonTotalLevel = \"不合格\";\r\n          unQualifiedReason =\r\n            \"成分为 AD25、ND25、1K107A、FN-300的直喷带材，任意规格, 叠片＜0.75，不合格\";\r\n          return [ribbonTotalLevel, unQualifiedReason];\r\n        }\r\n      }\r\n\r\n      // 针对成分为 1K107O的直喷带材，任意规格:\r\n      // 客户要求：22-28，>0.78，带偏≤2，带宽≤0.3，韧性无要求，其余判定不合格\r\n      // 1. 厚度>28μm 或 厚度<22μm判定为不合格；\r\n      // 2. 叠片＜0.78，判定为不合格；\r\n      // 3. 带偏>2μm直接判定为不合格；\r\n      // 4. 带宽>0.3mm 或 带宽 <-0.3mm，判定不合格\r\n      if ([\"1K107O\"].includes(row.ribbonTypeName)) {\r\n        if (row.ribbonThickness < 22 || row.ribbonThickness > 28) {\r\n          ribbonTotalLevel = \"不合格\";\r\n          unQualifiedReason =\r\n            \"成分为1K107O的带材，带厚<22μm或者带厚>28μm，不合格\";\r\n          return [ribbonTotalLevel, unQualifiedReason];\r\n        }\r\n        if (row.laminationFactor < 0.78) {\r\n          ribbonTotalLevel = \"不合格\";\r\n          unQualifiedReason = \"成分为1K107O的带材，叠片系数<0.78，不合格\";\r\n          return [ribbonTotalLevel, unQualifiedReason];\r\n        }\r\n        if (row.ribbonThicknessDeviation > 2) {\r\n          ribbonTotalLevel = \"不合格\";\r\n          unQualifiedReason = \"成分为1K107O的带材，厚度偏差>2，不合格\";\r\n          return [ribbonTotalLevel, unQualifiedReason];\r\n        }\r\n        if (_width > 0.3 || _width < -0.3) {\r\n          ribbonTotalLevel = \"不合格\";\r\n          unQualifiedReason = \"成分为1K107O的带材，宽度偏差超过0.3mm，不合格\";\r\n          return [ribbonTotalLevel, unQualifiedReason];\r\n        }\r\n      }\r\n\r\n      /**\r\n       * 针对FN-035/FN-080/FN-100/FN-200/FCNC-010/FCNC-020\r\n       */\r\n\r\n      // 厚度>23μm或叠片＜0.78或韧性为D/E，判定为不合格\r\n      if (\r\n        [\r\n          \"FN-035\",\r\n          \"FN-080\",\r\n          \"FN-100\",\r\n          \"FN-200\",\r\n          \"FCNC-010\",\r\n          \"FCNC-020\"\r\n        ].includes(row.ribbonTypeName)\r\n      ) {\r\n        // d＞32μm，判定为不合格;\r\n        if (row.ribbonThickness > 23) {\r\n          ribbonTotalLevel = \"不合格\";\r\n          unQualifiedReason =\r\n            \"成分为FN-035/FN-080/FN-100/FN-200/FCNC-010/FCNC-020的直喷带材，厚度大于23μm，不合格\";\r\n          return [ribbonTotalLevel, unQualifiedReason];\r\n        }\r\n        // 叠片＜0.78\r\n        if (row.laminationFactor < 0.78) {\r\n          ribbonTotalLevel = \"不合格\";\r\n          unQualifiedReason =\r\n            \"成分为FN-035/FN-080/FN-100/FN-200/FCNC-010/FCNC-020的直喷带材，叠片＜0.78，不合格\";\r\n          return [ribbonTotalLevel, unQualifiedReason];\r\n        }\r\n        // 韧性为D/E为不合格\r\n        if (isFragile) {\r\n          ribbonTotalLevel = \"不合格\";\r\n          unQualifiedReason =\r\n            \"成分为FN-035/FN-080/FN-100/FN-200/FCNC-010/FCNC-020的直喷带材，韧性为D/E级别，不合格\";\r\n          return [ribbonTotalLevel, unQualifiedReason];\r\n        }\r\n      }\r\n\r\n      /* ~~~~~~~~~~~判定等级不全的情况~~~~~~~~~~~~~~ */\r\n      if (\r\n        [\"\", undefined, null].includes(row.ribbonThicknessLevel) ||\r\n        [\"\", undefined, null].includes(row.laminationLevel) ||\r\n        [\"\", undefined, null].includes(row.ribbonToughnessLevel) ||\r\n        [\"\", undefined, null].includes(row.appearenceLevel)\r\n      ) {\r\n        return \"\";\r\n      }\r\n\r\n      /* ~~~~~~~~~~~正式计算完整的等级~~~~~~~~~~~~~~ */\r\n      ribbonTotalLevel =\r\n        row.ribbonThicknessLevel +\r\n        row.laminationLevel +\r\n        row.ribbonToughnessLevel +\r\n        row.appearenceLevel;\r\n\r\n      /**\r\n       * 针对所有带材：\r\n       * 1.1任意规格，厚度等级为2级别(23μm<d≤26μm)的带材判定修改如下：\r\n       * 1）24μm<d≤25μm，在综合级别最后加注“S”。\r\n       * 2）23μm<d≤24μm，在综合级别最后加注“L”。\r\n       * 1.2任意规格，厚度等级为3级别(20μm<d≤23μm)的带材判定修改如下：\r\n       * 1）21μm<d≤22μm，在综合级别最后加注“S”，\r\n       * 2）20μm<d≤21μm，在综合级别最后加注“L”，\r\n       * * 1.3 任意规格，厚度等级为4级别(18μm<d≤20μm)的带材判定修改如下：\r\n       * 1）18μm<d≤19μm，在综合级别最后加注“G”，\r\n       */\r\n      if (row.ribbonThickness > 24 && row.ribbonThickness <= 25) {\r\n        ribbonTotalLevel = ribbonTotalLevel + \"S\";\r\n      }\r\n      if (row.ribbonThickness > 23 && row.ribbonThickness <= 24) {\r\n        ribbonTotalLevel = ribbonTotalLevel + \"L\";\r\n      }\r\n\r\n      if (row.ribbonThickness > 21 && row.ribbonThickness <= 22) {\r\n        ribbonTotalLevel = ribbonTotalLevel + \"S\";\r\n      }\r\n      if (row.ribbonThickness > 20 && row.ribbonThickness <= 21) {\r\n        ribbonTotalLevel = ribbonTotalLevel + \"L\";\r\n      }\r\n      if (row.ribbonThickness > 18 && row.ribbonThickness <= 19) {\r\n        ribbonTotalLevel = ribbonTotalLevel + \"G\";\r\n      }\r\n\r\n      // 如果带材厚度偏差大于3，同时韧性为A,B,C,此带材加F\r\n      if (\r\n        row.ribbonThicknessDeviation > 3 &&\r\n        [\"A\", \"B\", \"C\"].includes(row.ribbonToughnessLevel)\r\n      ) {\r\n        ribbonTotalLevel = ribbonTotalLevel + \"F\";\r\n      }\r\n      // 如果带材韧性为A/B/C，同时带材宽度超出指定标准值，正偏差为+E,负偏差为-E\r\n      // 1. <=50mm：标准为±0.2mm\r\n      // 2. >50mm：标准为±0.5mm\r\n      // let _width = row.realRibbonWidth - row.ribbonWidth;\r\n      // _width = _width.toFixed(1);\r\n      if (row.ribbonWidth < 50) {\r\n        if (\r\n          Math.abs(_width) > 0.2 &&\r\n          [\"A\", \"B\", \"C\"].includes(row.ribbonToughnessLevel)\r\n        ) {\r\n          if (_width < -0.2) {\r\n            ribbonTotalLevel = ribbonTotalLevel + \"-E\";\r\n          } else if (_width > 0.2) {\r\n            ribbonTotalLevel = ribbonTotalLevel + \"+E\";\r\n          }\r\n        }\r\n      } else if (row.ribbonWidth >= 50) {\r\n        if (\r\n          Math.abs(_width) > 0.5 &&\r\n          [\"A\", \"B\", \"C\"].includes(row.ribbonToughnessLevel)\r\n        ) {\r\n          if (_width < -0.5) {\r\n            ribbonTotalLevel = ribbonTotalLevel + \"-E\";\r\n          } else if (_width > 0.5) {\r\n            ribbonTotalLevel = ribbonTotalLevel + \"+E\";\r\n          }\r\n        }\r\n      }\r\n\r\n      /**\r\n       * 针对1K107BW和1K107B：规格为20mm/25mm/30mm/40mm/50mm带材厚度为28μm≤d≤32μm，且叠片≥0.75的带材级别最后加“H”标识\r\n       */\r\n\r\n      if ([\"1K107BW\", \"1K107B\"].includes(row.ribbonTypeName)) {\r\n        if (\r\n          [20, 25, 30, 40, 50].includes(row.ribbonWidth) &&\r\n          row.ribbonThickness >= 28 &&\r\n          row.ribbonThickness <= 32 &&\r\n          row.laminationFactor >= 0.75\r\n        ) {\r\n          ribbonTotalLevel = ribbonTotalLevel + \"H\";\r\n        }\r\n      }\r\n\r\n      /**\r\n       * 针对AD25/ND25/1K107A/FN-300：带材厚度为28μm≤d≤32μm，且叠片≥0.75的带材级别最后加“H”标识\r\n       */\r\n\r\n      if ([\"AD25\", \"ND25\", \"1K107A\", \"FN-300\"].includes(row.ribbonTypeName)) {\r\n        if (row.laminationFactor >= 0.75) {\r\n          ribbonTotalLevel = ribbonTotalLevel + \"H\";\r\n        }\r\n      }\r\n\r\n      /**\r\n       * 判定检测去向\r\n       * 1.德国: 1K107B, 30mm, 韧性 ABC，厚度 2/3 级别，带面等级 A/B，叠片系数>=0.78，带厚偏差<2，带宽偏差<0.2，盘径330-350\r\n       * 2.法国: 1K107B, <50mm, 韧性 ABC，\r\n       * 2.1 厚度 2/3 级别，带面等级 A/B，叠片系数>=0.78\r\n       * 2.2 厚度 4 级别，叠片系数>=0.78\r\n       * 3.信维：1K107B, >=55mm, 韧性 ABCD，厚度18-26, 叠片系数>=0.75，带面等级 A/B, C: 轻微鱼鳞纹、轻微凹心、小凹心、轻微荷叶边、轻微劈裂、粗糙的都可以给\r\n       */\r\n      row.clients = [];\r\n      if ([\"1K107B\"].includes(row.ribbonTypeName)) {\r\n        // 德国\r\n        if (\r\n          [30].includes(row.ribbonWidth) &&\r\n          [\"A\", \"B\", \"C\"].includes(row.ribbonToughnessLevel) &&\r\n          [\"A\", \"B\"].includes(row.appearenceLevel) &&\r\n          [2, 3].includes(row.ribbonThicknessLevel) &&\r\n          row.laminationFactor >= 0.78 &&\r\n          !ribbonTotalLevel.includes(\"E\") &&\r\n          !ribbonTotalLevel.includes(\"F\") &&\r\n          row.diameter >= 330 &&\r\n          row.diameter <= 350\r\n        ) {\r\n          row.clients.push(\"D\");\r\n        }\r\n        // 法国\r\n        if (\r\n          row.ribbonWidth < 50 &&\r\n          [\"A\", \"B\", \"C\"].includes(row.ribbonToughnessLevel) &&\r\n          row.laminationFactor >= 0.78 &&\r\n          (([2, 3].includes(row.ribbonThicknessLevel) &&\r\n            [\"A\", \"B\"].includes(row.appearenceLevel)) ||\r\n            ([4].includes(row.ribbonThicknessLevel) &&\r\n              [\"A\", \"B\", \"C\"].includes(row.appearenceLevel)))\r\n        ) {\r\n          row.clients.push(\"F\");\r\n        }\r\n        // 信维 信维：1K107B, >=55mm, 韧性 ABCD，厚度18-26, 叠片系数>=0.75，带面等级 A/B, C: 轻微鱼鳞纹、轻微凹心、小凹心、轻微荷叶边、轻微劈裂、粗糙的都可以给\r\n        if (\r\n          row.ribbonWidth >= 55 &&\r\n          [\"A\", \"B\", \"C\", \"D\"].includes(row.ribbonToughnessLevel) &&\r\n          [2, 3, 4].includes(row.ribbonThicknessLevel) &&\r\n          row.laminationFactor >= 0.75 &&\r\n          !ribbonTotalLevel.includes(\"E\") &&\r\n          !ribbonTotalLevel.includes(\"F\") &&\r\n          [\"A\", \"B\"].includes(row.appearenceLevel)\r\n        ) {\r\n          row.clients.push(\"XW\");\r\n        }\r\n      }\r\n\r\n      if (row.clients.length === 0) {\r\n        row.clients.push(\"GN\");\r\n      }\r\n\r\n      return [ribbonTotalLevel, unQualifiedReason];\r\n    },\r\n    calcThinRibbonWeight(row) {\r\n      if (row.ribbonThickness > 23) {\r\n        return;\r\n      }\r\n      // 高叠片薄带重量 ≤23, >=0.78\r\n      if (row.laminationFactor >= 0.78) {\r\n        return (row.highFactorThinRibbonWeight = row.coilNetWeight);\r\n      }\r\n      // 薄带重量 ≤23, >=0.75\r\n      if (row.laminationFactor >= 0.75) {\r\n        row.thinRibbonWeight = row.coilNetWeight;\r\n      }\r\n    },\r\n    calcQualityOfABCDE(row) {\r\n      // 计算各质量等级的重量\r\n      // A: 32**,42**,52**,62**,72**,82**,33**,43**,53**,63**,73**,83**,34**,44**,54**,64**,74**,84**\r\n      const requireMentOfA = /^[3-8][2-4][A-E][A-C]G?([+-]E)?F?$/;\r\n      // B: 31**,41**,51**,61**,71**,81**\r\n      const requireMentOfB = /^[3-8]1[A-E][A-C]G?([+-]E)?F?$/;\r\n      // C: 30**,40**,50**,60**,70**,80**\r\n      const requireMentOfC = /^[3-8]0[A-E][A-C]G?([+-]E)?F?$/;\r\n      // D: 21**,22**,23**,24**\r\n      const requireMentOfD = /^2[1-4][A-E][A-C]L?([+-]E)?F?$/;\r\n      // E: 11**,12**,13**,14**\r\n      const requireMentOfE = /^1[1-4][A-E][A-C]([+-]E)?F?$/;\r\n      const ribbonTotalLevel = row.ribbonTotalLevel;\r\n      if (requireMentOfA.test(ribbonTotalLevel)) {\r\n        row.qualityOfA = row.coilNetWeight;\r\n      } else if (requireMentOfB.test(ribbonTotalLevel)) {\r\n        row.qualityOfB = row.coilNetWeight;\r\n      } else if (requireMentOfC.test(ribbonTotalLevel)) {\r\n        row.qualityOfC = row.coilNetWeight;\r\n      } else if (requireMentOfD.test(ribbonTotalLevel)) {\r\n        row.qualityOfD = row.coilNetWeight;\r\n      } else if (requireMentOfE.test(ribbonTotalLevel)) {\r\n        row.qualityOfE = row.coilNetWeight;\r\n      }\r\n    },\r\n    calcLaminationFactor(coilNetWeight, diameter, realRibbonWidth) {\r\n      // const res =\r\n      //   (\r\n      //     (((coilWeight - 0.09) /\r\n      //       (Math.PI * ((diameter * diameter) / 4 - (95 * 95) / 4) * 7.2)) *\r\n      //       Math.pow(10, 6)) /\r\n      //     realRibbonWidth\r\n      //   ).toFixed(2) || 0;\r\n      const res =\r\n        (\r\n          ((coilNetWeight /\r\n            (Math.PI * ((diameter * diameter) / 4 - (95 * 95) / 4) * 7.2)) *\r\n            Math.pow(10, 6)) /\r\n          realRibbonWidth\r\n        ).toFixed(2) || 0;\r\n      return Number(res);\r\n    },\r\n    calcLaminationLevel(factor) {\r\n      if (!factor) return \"\";\r\n      if (factor >= 0.84) {\r\n        return \"4\";\r\n      } else if (factor >= 0.82 && factor < 0.84) {\r\n        return \"3\";\r\n      } else if (factor >= 0.8 && factor < 0.82) {\r\n        return \"2\";\r\n      } else if (factor >= 0.78 && factor < 0.8) {\r\n        return \"1\";\r\n      } else if (factor >= 0.75 && factor < 0.78) {\r\n        return \"0\";\r\n      } else if (factor >= 0.72 && factor < 0.75) {\r\n        return \"8\";\r\n      } else if (factor >= 0.68 && factor < 0.72) {\r\n        return \"9\";\r\n      } else {\r\n        return \"不合格\";\r\n      }\r\n    },\r\n    calcMaxDeviation(arr) {\r\n      const _len = arr.length;\r\n      if (_len < 9) {\r\n        return null;\r\n      }\r\n      const _arr = arr.map(item => Number(item));\r\n      const a1 = [_arr[0], _arr[1], _arr[2]];\r\n      const a2 = [_arr[3], _arr[4], _arr[5]];\r\n      const a3 = [_arr[6], _arr[7], _arr[8]];\r\n      a1.sort((a, b) => {\r\n        return a - b;\r\n      });\r\n      a2.sort((a, b) => {\r\n        return a - b;\r\n      });\r\n      a3.sort((a, b) => {\r\n        return a - b;\r\n      });\r\n\r\n      const d1 = Number((a1[2] - a1[0]).toFixed(2));\r\n      const d2 = Number((a2[2] - a2[0]).toFixed(2));\r\n      const d3 = Number((a3[2] - a3[0]).toFixed(2));\r\n\r\n      const dArr = [d1, d2, d3];\r\n      dArr.sort((a, b) => {\r\n        return a - b;\r\n      });\r\n      console.log({\r\n        a1,\r\n        a2,\r\n        a3,\r\n        d1,\r\n        d2,\r\n        d3,\r\n        dArr\r\n      });\r\n      return Number((dArr[2] - dArr[0]).toFixed(2));\r\n    },\r\n    calcribbonThicknessLevel(thickness) {\r\n      if (!thickness) {\r\n        return;\r\n      }\r\n      if (thickness > 26) {\r\n        return 1;\r\n      } else if (thickness > 23 && thickness <= 26) {\r\n        return 2;\r\n      } else if (thickness > 20 && thickness <= 23) {\r\n        return 3;\r\n      } else if (thickness > 18 && thickness <= 20) {\r\n        return 4;\r\n      } else if (thickness > 16 && thickness <= 18) {\r\n        return 5;\r\n      } else if (thickness > 14 && thickness <= 16) {\r\n        return 6;\r\n      } else if (thickness > 12 && thickness <= 14) {\r\n        return 7;\r\n      } else if (thickness <= 12) {\r\n        return 8;\r\n      }\r\n    },\r\n    setStoredType(row) {\r\n      let inPlanFlag = true;\r\n      // let outPlanFlag = true;\r\n      // 计划内：厚度\r\n      const ribbonThickness = row.ribbonThickness;\r\n      const orderThickness = row.orderThickness;\r\n      if (orderThickness.indexOf(\"≤\") > -1) {\r\n        // ≤23\r\n        const maxThickness = parseInt(orderThickness.substr(1));\r\n        if (ribbonThickness > maxThickness) {\r\n          // 厚度不符合符合计划内入库的要求\r\n          inPlanFlag = false;\r\n        }\r\n      } else if (orderThickness.indexOf(\"-\") > -1) {\r\n        const maxThickness = orderThickness.split(\"-\")[1];\r\n        const minThickness = orderThickness.split(\"-\")[0];\r\n        if (ribbonThickness < minThickness || ribbonThickness > maxThickness) {\r\n          inPlanFlag = false;\r\n        }\r\n      }\r\n      // 计划内：叠片\r\n      const laminationFactor = row.laminationFactor;\r\n      const orderLaminationFactor = row.orderLaminationFactor;\r\n      if (orderLaminationFactor.indexOf(\"≥\") > -1) {\r\n        // ≥0.78\r\n        const minLaminationFactor = parseInt(orderLaminationFactor.substr(1));\r\n        if (laminationFactor < minLaminationFactor) {\r\n          // 叠片不符合符合计划内入库的要求\r\n          inPlanFlag = false;\r\n        }\r\n      } else if (orderLaminationFactor.indexOf(\"-\") > -1) {\r\n        const maxLaminationFactor = orderLaminationFactor.split(\"-\")[1];\r\n        const minLaminationFactor = orderLaminationFactor.split(\"-\")[0];\r\n        if (\r\n          laminationFactor < minLaminationFactor ||\r\n          laminationFactor > maxLaminationFactor\r\n        ) {\r\n          inPlanFlag = false;\r\n        }\r\n      }\r\n      // 计划内：韧性\r\n      const ribbonToughnessLevel = row.ribbonToughnessLevel;\r\n      const orderRibbonToughnessLevels = row.orderRibbonToughnessLevels.split(\r\n        \",\"\r\n      );\r\n      if (!orderRibbonToughnessLevels.includes(ribbonToughnessLevel)) {\r\n        inPlanFlag = false;\r\n      }\r\n      // 计划内：外观\r\n      const appearenceLevel = row.appearenceLevel;\r\n      const orderAppearenceLevels = row.orderAppearenceLevels.split(\",\");\r\n      if (!orderAppearenceLevels.includes(appearenceLevel)) {\r\n        inPlanFlag = false;\r\n      }\r\n\r\n      if (inPlanFlag) {\r\n        return 1;\r\n      }\r\n\r\n      // // 计划外：厚度\r\n      // const qualifiedThickness = row.qualifiedThickness;\r\n      // if (qualifiedThickness.indexOf('≤') > -1) { // ≤23\r\n      //   const maxThickness = parseInt(qualifiedThickness.substr(1));\r\n      //   if (ribbonThickness > maxThickness) {\r\n      //     // 厚度不符合符合计划外入库的要求\r\n      //     outPlanFlag = false;\r\n      //   }\r\n      // } else if (qualifiedThickness.indexOf('-') > -1) {\r\n      //   const maxThickness = qualifiedThickness.split('-')[1];\r\n      //   const minThickness = qualifiedThickness.split('-')[0];\r\n      //   if (ribbonThickness < minThickness || ribbonThickness > maxThickness) {\r\n      //     outPlanFlag = false;\r\n      //   }\r\n      // }\r\n      // // 计划外：叠片\r\n      // const qualifiedLaminationFactor = row.qualifiedLaminationFactor;\r\n      // if (qualifiedLaminationFactor.indexOf('≥') > -1) { // ≥0.78\r\n      //   const minLaminationFactor = parseInt(qualifiedLaminationFactor.substr(1));\r\n      //   if (laminationFactor < minLaminationFactor) {\r\n      //     // 叠片不符合符合计划外入库的要求\r\n      //     outPlanFlag = false;\r\n      //   }\r\n      // } else if (qualifiedLaminationFactor.indexOf('-') > -1) {\r\n      //   const maxLaminationFactor = qualifiedLaminationFactor.split('-')[1];\r\n      //   const minLaminationFactor = qualifiedLaminationFactor.split('-')[0];\r\n      //   if (laminationFactor < minLaminationFactor || laminationFactor > maxLaminationFactor) {\r\n      //     outPlanFlag = false;\r\n      //   }\r\n      // }\r\n      // // 计划外：韧性\r\n      // const qualifiedRibbonToughnessLevels = row.qualifiedRibbonToughnessLevels.split(',');\r\n      // if (!qualifiedRibbonToughnessLevels.includes(ribbonToughnessLevel)) {\r\n      //   outPlanFlag = false;\r\n      // }\r\n      // // 计划外：外观\r\n      // const qualifiedAppearenceLevels = row.qualifiedAppearenceLevels.split(',');\r\n      // if (!qualifiedAppearenceLevels.includes(appearenceLevel)) {\r\n      //   outPlanFlag = false;\r\n      // }\r\n\r\n      const qualifiedDemands = JSON.parse(row.qualifiedDemands) || [];\r\n      for (const item of qualifiedDemands) {\r\n        let outPlanFlag = true;\r\n        // 计划外：厚度\r\n        const qualifiedThickness = item.qualifiedThickness;\r\n        if (qualifiedThickness.indexOf(\"≤\") > -1) {\r\n          // ≤23\r\n          const maxThickness = parseInt(qualifiedThickness.substr(1));\r\n          if (ribbonThickness > maxThickness) {\r\n            // 厚度不符合符合计划外入库的要求\r\n            outPlanFlag = false;\r\n          }\r\n        } else if (qualifiedThickness.indexOf(\"-\") > -1) {\r\n          const maxThickness = qualifiedThickness.split(\"-\")[1];\r\n          const minThickness = qualifiedThickness.split(\"-\")[0];\r\n          if (\r\n            ribbonThickness < minThickness ||\r\n            ribbonThickness > maxThickness\r\n          ) {\r\n            // 厚度不符合符合计划外入库的要求\r\n            outPlanFlag = false;\r\n          }\r\n        }\r\n        // 计划外：叠片\r\n        const qualifiedLaminationFactor = item.qualifiedLaminationFactor;\r\n        if (qualifiedLaminationFactor.indexOf(\"≥\") > -1) {\r\n          // ≥0.78\r\n          const minLaminationFactor = parseInt(\r\n            qualifiedLaminationFactor.substr(1)\r\n          );\r\n          if (laminationFactor < minLaminationFactor) {\r\n            // 叠片不符合符合计划外入库的要求\r\n            outPlanFlag = false;\r\n          }\r\n        } else if (qualifiedLaminationFactor.indexOf(\"-\") > -1) {\r\n          const maxLaminationFactor = qualifiedLaminationFactor.split(\"-\")[1];\r\n          const minLaminationFactor = qualifiedLaminationFactor.split(\"-\")[0];\r\n          if (\r\n            laminationFactor < minLaminationFactor ||\r\n            laminationFactor > maxLaminationFactor\r\n          ) {\r\n            // 叠片不符合符合计划外入库的要求\r\n            outPlanFlag = false;\r\n          }\r\n        }\r\n        // 计划外：韧性\r\n        const qualifiedRibbonToughnessLevels =\r\n          item.qualifiedRibbonToughnessLevels;\r\n        if (!qualifiedRibbonToughnessLevels.includes(ribbonToughnessLevel)) {\r\n          // 韧性不符合符合计划外入库的要求\r\n          outPlanFlag = false;\r\n        }\r\n        // 计划外：外观\r\n        const qualifiedAppearenceLevels = item.qualifiedAppearenceLevels;\r\n        if (!qualifiedAppearenceLevels.includes(appearenceLevel)) {\r\n          // 外观不符合符合计划外入库的要求\r\n          outPlanFlag = false;\r\n        }\r\n\r\n        if (outPlanFlag) {\r\n          return 2;\r\n        }\r\n      }\r\n\r\n      return 3;\r\n    },\r\n    exportExcel() {\r\n      const params = {\r\n        castId: this.castId,\r\n        startTime: this.searchForm.date[0],\r\n        endTime: this.searchForm.date[1],\r\n        startMeasureTime: this.searchForm.measureDate[0],\r\n        endMeasureTime: this.searchForm.measureDate[1]\r\n        // caster: this.searchForm.caster,\r\n        // furnace: this.searchForm.furnace,\r\n        // ribbonTypeNameJson: JSON.stringify(this.searchForm.ribbonTypeNames),\r\n        // ribbonWidthJson: JSON.stringify(this.searchForm.ribbonWidths),\r\n        // ribbonThicknessLevelJson: JSON.stringify(\r\n        //   this.searchForm.ribbonThicknessLevels\r\n        // ),\r\n        // laminationLevelJson: JSON.stringify(this.searchForm.laminationLevels),\r\n        // ribbonToughnessLevelJson: JSON.stringify(\r\n        //   this.searchForm.ribbonToughnessLevels\r\n        // ),\r\n        // appearenceLevelJson: JSON.stringify(this.searchForm.appearenceLevels)\r\n      };\r\n      if (!params.startTime && !params.startMeasureTime) {\r\n        return this.$message({\r\n          message: \"请选择生产日期或者检测日期\",\r\n          type: \"error\"\r\n        });\r\n      }\r\n      const url = `${urlmap.exportMeasure}?${qs.stringify(params)}`;\r\n      window.open(url);\r\n    },\r\n    setSelectable(row, index) {\r\n      // 合格并且已经检测过了的，才可以被选中来入库\r\n      if ([1, 2].includes(row.isStored) && !row.isMeasureConfirmed) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    },\r\n    handleSelectionChange(val) {\r\n      this.multipleSelection = val;\r\n    },\r\n    measureConfirm() {\r\n      // this.applyInStoreModalVisible = true;\r\n      const selectionList = cloneDeep(this.multipleSelection);\r\n      if (selectionList.length === 0) {\r\n        return this.$alert(\"请选择要入库的带材\", \"提示\", { type: \"warning\" });\r\n      }\r\n      if (\r\n        selectionList.some(item => !item.clients || item.clients.length === 0)\r\n      ) {\r\n        return this.$alert(\r\n          \"申请入库的带材没有填写检测去向，请检查后再提交\",\r\n          \"提示\",\r\n          { type: \"warning\" }\r\n        );\r\n      }\r\n      selectionList.forEach(row => {\r\n        row.isMeasureConfirmed = 1; // 1-检测确认申请入库，0-还没有确认\r\n        row.clients = row.clients.join();\r\n        row.appearence = row.appearence.join();\r\n      });\r\n      // 发送请求，更新当前的数据\r\n      this.$http(\"POST\", urlmap.measureConfirm, {\r\n        dataJson: JSON.stringify(selectionList)\r\n      })\r\n        .then(data => {\r\n          this.getTableData();\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n        });\r\n    },\r\n    uploadExcelHandler() {\r\n      this.uploadExcelForm.visible = true;\r\n      this.uploadExcelForm.fileList = [];\r\n    },\r\n    closeUploadDialog() {\r\n      this.uploadExcelForm.visible = false;\r\n    },\r\n    submitUploadForm() {\r\n      // if (this.uploadExcelForm.fileList.length === 0) {\r\n      //   return this.$message({\r\n      //   message: '请选择excel表格',\r\n      //   type: \"warning\"\r\n      // });\r\n      // }\r\n      this.$refs.upload.submit();\r\n      this.uploadExcelForm.visible = false;\r\n      const params = {\r\n        current: 1\r\n      };\r\n      this.pageConfig.current = 1;\r\n      this.getTableData(params);\r\n    },\r\n    uploadErrorHanler(error, file, fileList) {\r\n      this.$message({\r\n        message: `上传失败：${error.message}`,\r\n        type: \"error\"\r\n      });\r\n    },\r\n    uploadSuccessHanler(res, file, fileList) {\r\n      if (res.status === 0) {\r\n        this.$message({\r\n          message: res.message,\r\n          type: \"success\"\r\n        });\r\n      } else {\r\n        let html = \"\";\r\n        res.data.forEach(item => {\r\n          html += `<p>炉号：${item.furnace}，盘号：${item.coilNumber}</p>`;\r\n        });\r\n        this.$alert(html, \"以下带材更新检测数据失败：\", {\r\n          dangerouslyUseHTMLString: true,\r\n          type: \"warning\"\r\n        });\r\n      }\r\n      const params = {\r\n        current: 1\r\n      };\r\n      this.pageConfig.current = 1;\r\n      this.getTableData(params);\r\n    }\r\n  }\r\n};\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n.popover_table {\r\n  text-align: center;\r\n  th,\r\n  td {\r\n    border-bottom: 1px solid #dcdfe6;\r\n  }\r\n  td {\r\n    padding: 5px 8px;\r\n  }\r\n}\r\n.upload {\r\n  height: 100px;\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/pages/measure/measure.vue","var render = function () {\nvar this$1 = this;\nvar _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('el-breadcrumb',{staticClass:\"crumb\",attrs:{\"separator-class\":\"el-icon-arrow-right\"}},[_c('el-breadcrumb-item',[_vm._v(\"检测记录\")]),_vm._v(\" \"),_c('el-breadcrumb-item',[_vm._v(_vm._s(_vm.castId)+\"号机组\")])],1),_vm._v(\" \"),_c('Collapse',[_c('el-form',{staticClass:\"search_bar\",attrs:{\"model\":_vm.searchForm,\"inline\":true}},[_c('el-form-item',{attrs:{\"label\":\"生产日期：\"}},[_c('el-date-picker',{attrs:{\"type\":\"daterange\",\"default-time\":['00:00:00', '23:59:59'],\"value-format\":\"yyyy-MM-dd HH:mm:ss\",\"clearable\":false,\"start-placeholder\":\"开始日期\",\"end-placeholder\":\"结束日期\"},model:{value:(_vm.searchForm.date),callback:function ($$v) {_vm.$set(_vm.searchForm, \"date\", $$v)},expression:\"searchForm.date\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"检测日期：\"}},[_c('el-date-picker',{attrs:{\"type\":\"daterange\",\"default-time\":['00:00:00', '23:59:59'],\"clearable\":false,\"start-placeholder\":\"开始日期\",\"end-placeholder\":\"结束日期\",\"value-format\":\"yyyy-MM-dd HH:mm:ss\"},model:{value:(_vm.searchForm.measureDate),callback:function ($$v) {_vm.$set(_vm.searchForm, \"measureDate\", $$v)},expression:\"searchForm.measureDate\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"喷带手：\"}},[_c('el-input',{attrs:{\"placeholder\":\"请输入喷带手姓名\"},model:{value:(_vm.searchForm.caster),callback:function ($$v) {_vm.$set(_vm.searchForm, \"caster\", $$v)},expression:\"searchForm.caster\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"炉号：\"}},[_c('el-input',{attrs:{\"placeholder\":\"请输入炉号\"},model:{value:(_vm.searchForm.furnace),callback:function ($$v) {_vm.$set(_vm.searchForm, \"furnace\", $$v)},expression:\"searchForm.furnace\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"材质：\"}},[_c('el-select',{attrs:{\"placeholder\":\"请选择\",\"multiple\":\"\",\"collapse-tags\":\"\"},model:{value:(_vm.searchForm.ribbonTypeNames),callback:function ($$v) {_vm.$set(_vm.searchForm, \"ribbonTypeNames\", $$v)},expression:\"searchForm.ribbonTypeNames\"}},_vm._l((_vm.ribbonTypeList),function(item){return _c('el-option',{key:item.ribbonTypeId,attrs:{\"value\":item.ribbonTypeName,\"label\":item.ribbonTypeName}})}),1)],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"规格：\"}},[_c('el-select',{attrs:{\"placeholder\":\"请选择\",\"multiple\":\"\",\"collapse-tags\":\"\"},model:{value:(_vm.searchForm.ribbonWidths),callback:function ($$v) {_vm.$set(_vm.searchForm, \"ribbonWidths\", $$v)},expression:\"searchForm.ribbonWidths\"}},_vm._l((_vm.ribbonWidthList),function(item){return _c('el-option',{key:item.ribbonWidthId,attrs:{\"label\":item.ribbonWidth,\"value\":item.ribbonWidth}})}),1)],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"厚度级别：\"}},[_c('el-select',{attrs:{\"placeholder\":\"请选择\",\"multiple\":\"\",\"collapse-tags\":\"\"},model:{value:(_vm.searchForm.ribbonThicknessLevels),callback:function ($$v) {_vm.$set(_vm.searchForm, \"ribbonThicknessLevels\", $$v)},expression:\"searchForm.ribbonThicknessLevels\"}},_vm._l((_vm.ribbonThicknessLevelList),function(item){return _c('el-option',{key:item.ribbonThicknessLevelId,attrs:{\"label\":item.ribbonThicknessLevel,\"value\":item.ribbonThicknessLevel}})}),1)],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"叠片级别：\"}},[_c('el-select',{attrs:{\"placeholder\":\"请选择\",\"multiple\":\"\",\"collapse-tags\":\"\"},model:{value:(_vm.searchForm.laminationLevels),callback:function ($$v) {_vm.$set(_vm.searchForm, \"laminationLevels\", $$v)},expression:\"searchForm.laminationLevels\"}},_vm._l((_vm.laminationLevelList),function(item){return _c('el-option',{key:item.laminationLevelId,attrs:{\"label\":item.laminationLevel,\"value\":item.laminationLevel}})}),1)],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"韧性级别：\"}},[_c('el-select',{attrs:{\"placeholder\":\"请选择\",\"multiple\":\"\",\"collapse-tags\":\"\"},model:{value:(_vm.searchForm.ribbonToughnessLevels),callback:function ($$v) {_vm.$set(_vm.searchForm, \"ribbonToughnessLevels\", $$v)},expression:\"searchForm.ribbonToughnessLevels\"}},_vm._l((_vm.ribbonToughnessLevelList),function(item){return _c('el-option',{key:item.ribbonToughnessLevelId,attrs:{\"label\":item.ribbonToughnessLevel,\"value\":item.ribbonToughnessLevel}})}),1)],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"外观级别：\"}},[_c('el-select',{attrs:{\"placeholder\":\"请选择\",\"multiple\":\"\",\"collapse-tags\":\"\"},model:{value:(_vm.searchForm.appearenceLevels),callback:function ($$v) {_vm.$set(_vm.searchForm, \"appearenceLevels\", $$v)},expression:\"searchForm.appearenceLevels\"}},_vm._l((_vm.uniqueAppearenceLevelList),function(appearenceLevel,index){return _c('el-option',{key:index,attrs:{\"label\":appearenceLevel,\"value\":appearenceLevel}})}),1)],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"厚度偏差：\"}},[_c('el-select',{attrs:{\"placeholder\":\"请选择\"},model:{value:(_vm.searchForm.thicknessDivation),callback:function ($$v) {_vm.$set(_vm.searchForm, \"thicknessDivation\", $$v)},expression:\"searchForm.thicknessDivation\"}},[_c('el-option',{attrs:{\"label\":\"<=1\",\"value\":1}}),_vm._v(\" \"),_c('el-option',{attrs:{\"label\":\"<=2\",\"value\":2}}),_vm._v(\" \"),_c('el-option',{attrs:{\"label\":\"<=3\",\"value\":3}}),_vm._v(\" \"),_c('el-option',{attrs:{\"label\":\"<=4\",\"value\":4}}),_vm._v(\" \"),_c('el-option',{attrs:{\"label\":\"<=5\",\"value\":5}})],1)],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"排序方式：\"}},[_c('el-select',{attrs:{\"placeholder\":\"请选择\"},model:{value:(_vm.searchForm.orderBy),callback:function ($$v) {_vm.$set(_vm.searchForm, \"orderBy\", $$v)},expression:\"searchForm.orderBy\"}},[_c('el-option',{attrs:{\"label\":\"按更新时间\",\"value\":1}}),_vm._v(\" \"),_c('el-option',{attrs:{\"label\":\"按炉号和盘号\",\"value\":2}})],1)],1),_vm._v(\" \"),_c('el-form-item',[_c('el-button',{attrs:{\"type\":\"primary\",\"icon\":\"el-icon-search\"},on:{\"click\":_vm.clickSearch}},[_vm._v(\"搜索\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"primary\",\"icon\":\"el-icon-refresh\"},on:{\"click\":_vm.reset}},[_vm._v(\"重置\")])],1)],1)],1),_vm._v(\" \"),_c('div',{staticClass:\"main_bd\"},[_c('el-col',{staticClass:\"table_hd\"},[([1, 2, 3, 5].includes(_vm.userinfo.roleId))?_c('el-button',{attrs:{\"type\":_vm.autoQueryConfig.type,\"icon\":_vm.autoQueryConfig.icon},on:{\"click\":_vm.handleAutoQuery}},[_vm._v(_vm._s(_vm.autoQueryConfig.text))]):_vm._e(),_vm._v(\" \"),_c('el-tooltip',{attrs:{\"content\":\"1.必须关闭自动更新，才能点击；2.点击后会计算下表中带材的综合级别\",\"placement\":\"top-end\"}},[([1, 2, 3, 5].includes(_vm.userinfo.roleId))?_c('el-button',{attrs:{\"type\":\"primary\",\"icon\":\"el-icon-info\",\"disabled\":_vm.isAutoQuerying},on:{\"click\":_vm.batchCalcRibbonTotalData}},[_vm._v(\"计算综合级别\")]):_vm._e()],1),_vm._v(\" \"),_c('el-tooltip',{attrs:{\"content\":\"请先选择筛选条件中的生产日期或者检测日期后再导出\",\"placement\":\"top-end\"}},[([1, 2, 3, 5].includes(_vm.userinfo.roleId))?_c('el-button',{staticClass:\"pull_right\",staticStyle:{\"margin-left\":\"10px\"},attrs:{\"type\":\"primary\",\"icon\":\"el-icon-download\"},on:{\"click\":_vm.exportExcel}},[_vm._v(\"导出\")]):_vm._e()],1),_vm._v(\" \"),([1, 2, 3, 5].includes(_vm.userinfo.roleId))?_c('el-button',{staticClass:\"pull_right\",attrs:{\"type\":\"primary\",\"icon\":\"el-icon-upload\"},on:{\"click\":_vm.uploadExcelHandler}},[_vm._v(\"导入\")]):_vm._e(),_vm._v(\" \"),([1, 2, 3, 5].includes(_vm.userinfo.roleId))?_c('el-button',{staticClass:\"pull_right\",attrs:{\"type\":\"primary\",\"icon\":\"el-icon-check\"},on:{\"click\":_vm.measureConfirm}},[_vm._v(\"申请入库\")]):_vm._e()],1),_vm._v(\" \"),_c('el-table',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.loading),expression:\"loading\"}],ref:\"table\",staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.tableData,\"stripe\":\"\",\"border\":\"\",\"highlight-current-row\":\"\",\"height\":_vm.tableHeight},on:{\"selection-change\":_vm.handleSelectionChange}},[_c('el-table-column',{attrs:{\"type\":\"selection\",\"width\":\"20\",\"selectable\":_vm.setSelectable}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"furnace\",\"label\":\"炉号\",\"align\":\"center\",\"width\":\"130px\",\"fixed\":\"\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"coilNumber\",\"label\":\"盘号\",\"align\":\"center\",\"width\":\"35px\",\"fixed\":\"\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"ribbonTypeName\",\"label\":\"材质\",\"align\":\"center\",\"min-width\":\"50px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"ribbonWidth\",\"label\":\"规格\",\"align\":\"center\",\"width\":\"40px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"castDate\",\"label\":\"生产日期\",\"align\":\"center\",\"formatter\":_vm.dateFormat,\"width\":\"80px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"caster\",\"label\":\"喷带手\",\"align\":\"center\",\"width\":\"50px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"diameter\",\"label\":\"外径(mm)\",\"align\":\"center\",\"width\":\"70px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"coilWeight\",\"label\":\"重量(kg)\",\"align\":\"center\",\"width\":\"70px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"coilNetWeight\",\"label\":\"净重(kg)\",\"align\":\"center\",\"width\":\"70px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"laminationFactor\",\"label\":\"叠片系数\",\"align\":\"center\",\"width\":\"70px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"laminationLevel\",\"label\":\"叠片等级\",\"align\":\"center\",\"width\":\"70px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"realRibbonWidth\",\"label\":\"实际带宽\",\"align\":\"center\",\"width\":\"70px\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [(scope.row.isMeasureConfirmed === 1 || _vm.userinfo.roleId != 5)?_c('div',[_vm._v(\"\\n            \"+_vm._s(scope.row.realRibbonWidth)+\"\\n          \")]):_c('div',[_c('el-input',{attrs:{\"size\":\"mini\"},model:{value:(scope.row.realRibbonWidth),callback:function ($$v) {_vm.$set(scope.row, \"realRibbonWidth\", $$v)},expression:\"scope.row.realRibbonWidth\"}})],1)]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"ribbonThickness1\",\"label\":\"带厚1(μm)\",\"align\":\"center\",\"width\":\"70px\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [(scope.row.isMeasureConfirmed === 1 || _vm.userinfo.roleId != 5)?_c('div',[_vm._v(\"\\n            \"+_vm._s(scope.row.ribbonThickness1)+\"\\n          \")]):_c('div',[_c('el-input',{attrs:{\"size\":\"mini\"},nativeOn:{\"keyup\":function($event){return (function ($event) { return _vm.thicknessChangeHandler($event, scope.row); })($event)}},model:{value:(scope.row.ribbonThickness1),callback:function ($$v) {_vm.$set(scope.row, \"ribbonThickness1\", $$v)},expression:\"scope.row.ribbonThickness1\"}})],1)]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"ribbonThickness2\",\"label\":\"带厚2(μm)\",\"align\":\"center\",\"width\":\"70px\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [(scope.row.isMeasureConfirmed === 1 || _vm.userinfo.roleId != 5)?_c('div',[_vm._v(\"\\n            \"+_vm._s(scope.row.ribbonThickness2)+\"\\n          \")]):_c('div',[_c('el-input',{attrs:{\"size\":\"mini\"},nativeOn:{\"keyup\":function($event){return (function ($event) { return _vm.thicknessChangeHandler($event, scope.row); })($event)}},model:{value:(scope.row.ribbonThickness2),callback:function ($$v) {_vm.$set(scope.row, \"ribbonThickness2\", $$v)},expression:\"scope.row.ribbonThickness2\"}})],1)]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"ribbonThickness3\",\"label\":\"带厚3(μm)\",\"align\":\"center\",\"width\":\"70px\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [(scope.row.isMeasureConfirmed === 1 || _vm.userinfo.roleId != 5)?_c('div',[_vm._v(\"\\n            \"+_vm._s(scope.row.ribbonThickness3)+\"\\n          \")]):_c('div',[_c('el-input',{attrs:{\"size\":\"mini\"},nativeOn:{\"keyup\":function($event){return (function ($event) { return _vm.thicknessChangeHandler($event, scope.row); })($event)}},model:{value:(scope.row.ribbonThickness3),callback:function ($$v) {_vm.$set(scope.row, \"ribbonThickness3\", $$v)},expression:\"scope.row.ribbonThickness3\"}})],1)]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"ribbonThickness4\",\"label\":\"带厚4(μm)\",\"align\":\"center\",\"width\":\"70px\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [(scope.row.isMeasureConfirmed === 1 || _vm.userinfo.roleId != 5)?_c('div',[_vm._v(\"\\n            \"+_vm._s(scope.row.ribbonThickness4)+\"\\n          \")]):_c('div',[_c('el-input',{attrs:{\"size\":\"mini\"},nativeOn:{\"keyup\":function($event){return (function ($event) { return _vm.thicknessChangeHandler($event, scope.row); })($event)}},model:{value:(scope.row.ribbonThickness4),callback:function ($$v) {_vm.$set(scope.row, \"ribbonThickness4\", $$v)},expression:\"scope.row.ribbonThickness4\"}})],1)]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"ribbonThickness5\",\"label\":\"带厚5(μm)\",\"align\":\"center\",\"width\":\"70px\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [(scope.row.isMeasureConfirmed === 1 || _vm.userinfo.roleId != 5)?_c('div',[_vm._v(\"\\n            \"+_vm._s(scope.row.ribbonThickness5)+\"\\n          \")]):_c('div',[_c('el-input',{attrs:{\"size\":\"mini\"},nativeOn:{\"keyup\":function($event){return (function ($event) { return _vm.thicknessChangeHandler($event, scope.row); })($event)}},model:{value:(scope.row.ribbonThickness5),callback:function ($$v) {_vm.$set(scope.row, \"ribbonThickness5\", $$v)},expression:\"scope.row.ribbonThickness5\"}})],1)]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"ribbonThickness6\",\"label\":\"带厚6(μm)\",\"align\":\"center\",\"width\":\"70px\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [(scope.row.isMeasureConfirmed === 1 || _vm.userinfo.roleId != 5)?_c('div',[_vm._v(\"\\n            \"+_vm._s(scope.row.ribbonThickness6)+\"\\n          \")]):_c('div',[_c('el-input',{attrs:{\"size\":\"mini\"},nativeOn:{\"keyup\":function($event){return (function ($event) { return _vm.thicknessChangeHandler($event, scope.row); })($event)}},model:{value:(scope.row.ribbonThickness6),callback:function ($$v) {_vm.$set(scope.row, \"ribbonThickness6\", $$v)},expression:\"scope.row.ribbonThickness6\"}})],1)]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"ribbonThickness7\",\"label\":\"带厚7(μm)\",\"align\":\"center\",\"width\":\"70px\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [(scope.row.isMeasureConfirmed === 1 || _vm.userinfo.roleId != 5)?_c('div',[_vm._v(\"\\n            \"+_vm._s(scope.row.ribbonThickness7)+\"\\n          \")]):_c('div',[_c('el-input',{attrs:{\"size\":\"mini\"},nativeOn:{\"keyup\":function($event){return (function ($event) { return _vm.thicknessChangeHandler($event, scope.row); })($event)}},model:{value:(scope.row.ribbonThickness7),callback:function ($$v) {_vm.$set(scope.row, \"ribbonThickness7\", $$v)},expression:\"scope.row.ribbonThickness7\"}})],1)]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"ribbonThickness8\",\"label\":\"带厚8(μm)\",\"align\":\"center\",\"width\":\"70px\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [(scope.row.isMeasureConfirmed === 1 || _vm.userinfo.roleId != 5)?_c('div',[_vm._v(\"\\n            \"+_vm._s(scope.row.ribbonThickness8)+\"\\n          \")]):_c('div',[_c('el-input',{attrs:{\"size\":\"mini\"},nativeOn:{\"keyup\":function($event){return (function ($event) { return _vm.thicknessChangeHandler($event, scope.row); })($event)}},model:{value:(scope.row.ribbonThickness8),callback:function ($$v) {_vm.$set(scope.row, \"ribbonThickness8\", $$v)},expression:\"scope.row.ribbonThickness8\"}})],1)]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"ribbonThickness9\",\"label\":\"带厚9(μm)\",\"align\":\"center\",\"width\":\"70px\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [(scope.row.isMeasureConfirmed === 1 || _vm.userinfo.roleId != 5)?_c('div',[_vm._v(\"\\n            \"+_vm._s(scope.row.ribbonThickness9)+\"\\n          \")]):_c('div',[_c('el-input',{attrs:{\"size\":\"mini\"},nativeOn:{\"keyup\":function($event){return (function ($event) { return _vm.thicknessChangeHandler($event, scope.row); })($event)}},model:{value:(scope.row.ribbonThickness9),callback:function ($$v) {_vm.$set(scope.row, \"ribbonThickness9\", $$v)},expression:\"scope.row.ribbonThickness9\"}})],1)]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"ribbonThicknessDeviation\",\"label\":\"厚度偏差(μm)\",\"align\":\"center\",\"width\":\"90px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"ribbonThickness\",\"label\":\"平均厚度(μm)\",\"align\":\"center\",\"width\":\"90px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"ribbonThicknessLevel\",\"label\":\"厚度级别\",\"align\":\"center\",\"width\":\"70px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"ribbonToughness\",\"label\":\"韧性\",\"align\":\"center\",\"width\":\"70px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"ribbonToughnessLevel\",\"label\":\"韧性等级\",\"align\":\"center\",\"width\":\"60px\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [(scope.row.isMeasureConfirmed === 1 || _vm.userinfo.roleId != 5)?_c('div',[_vm._v(\"\\n            \"+_vm._s(scope.row.ribbonToughnessLevel)+\"\\n          \")]):_c('div',[_c('el-select',{attrs:{\"size\":\"mini\",\"placeholder\":\"\"},model:{value:(scope.row.ribbonToughnessLevel),callback:function ($$v) {_vm.$set(scope.row, \"ribbonToughnessLevel\", $$v)},expression:\"scope.row.ribbonToughnessLevel\"}},_vm._l((_vm.ribbonToughnessLevelList),function(item){return _c('el-option',{key:item.ribbonToughnessLevelId,attrs:{\"label\":item.ribbonToughnessLevel,\"value\":item.ribbonToughnessLevel}})}),1)],1)]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"appearence\",\"label\":\"外观\",\"align\":\"center\",\"width\":\"70px\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [(scope.row.isMeasureConfirmed === 1 || _vm.userinfo.roleId != 5)?_c('div',[_vm._v(\"\\n            \"+_vm._s(scope.row.appearence ? scope.row.appearence.toString() : \"\")+\"\\n          \")]):_c('div',[_c('el-select',{attrs:{\"size\":\"mini\",\"multiple\":\"\",\"collapse-tags\":\"\",\"placeholder\":\"\"},model:{value:(scope.row.appearence),callback:function ($$v) {_vm.$set(scope.row, \"appearence\", $$v)},expression:\"scope.row.appearence\"}},_vm._l((_vm.appearenceList),function(item){return _c('el-option',{key:item.appearenceLevelId,attrs:{\"label\":item.appearence,\"value\":item.appearence}})}),1)],1)]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"appearenceLevel\",\"label\":\"外观等级\",\"align\":\"center\",\"width\":\"60px\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [(scope.row.isMeasureConfirmed === 1 || _vm.userinfo.roleId != 5)?_c('div',[_vm._v(\"\\n            \"+_vm._s(scope.row.appearenceLevel)+\"\\n          \")]):_c('div',[_c('el-select',{attrs:{\"size\":\"mini\",\"placeholder\":\"\"},model:{value:(scope.row.appearenceLevel),callback:function ($$v) {_vm.$set(scope.row, \"appearenceLevel\", $$v)},expression:\"scope.row.appearenceLevel\"}},_vm._l((_vm.uniqueAppearenceLevelList),function(appearenceLevel,index){return _c('el-option',{key:index,attrs:{\"label\":appearenceLevel,\"value\":appearenceLevel}})}),1)],1)]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"ribbonTotalLevel\",\"label\":\"综合级别\",\"align\":\"center\",\"width\":\"70px\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('span',{class:scope.row.ribbonTotalLevel === '不合格' ? 'text_danger' : ''},[_vm._v(_vm._s(scope.row.ribbonTotalLevel))])]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"unQualifiedReason\",\"label\":\"不合格原因\",\"align\":\"center\",\"width\":\"70px\",\"show-overflow-tooltip\":true}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"入库规则\",\"align\":\"center\",\"width\":\"60px\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-popover',{attrs:{\"placement\":\"right\",\"trigger\":\"hover\"}},[_c('table',{staticClass:\"popover_table\",attrs:{\"cellpadding\":\"0\",\"cellspacing\":\"0\"}},[_c('thead',[_c('th',[_vm._v(\"类别\")]),_vm._v(\" \"),_c('th',[_vm._v(\"带厚\")]),_vm._v(\" \"),_c('th',[_vm._v(\"叠片\")]),_vm._v(\" \"),_c('th',[_vm._v(\"韧性\")]),_vm._v(\" \"),_c('th',[_vm._v(\"外观\")])]),_vm._v(\" \"),_c('tbody',[_c('tr',[_c('td',[_vm._v(\"计划内入库要求\")]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(scope.row.storageRule.orderThickness))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(scope.row.storageRule.orderLaminationFactor))]),_vm._v(\" \"),_c('td',[_vm._v(\"\\n                    \"+_vm._s(scope.row.storageRule.orderRibbonToughnessLevels)+\"\\n                  \")]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(scope.row.storageRule.orderAppearenceLevels))])]),_vm._v(\" \"),_vm._l((scope.row.storageRule\n                    .qualifiedDemands),function(item,index){return _c('tr',{key:index},[_c('td',[_vm._v(\"计划外入库要求\")]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(item.qualifiedThickness))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(item.qualifiedLaminationFactor))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(item.qualifiedRibbonToughnessLevels.join()))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(item.qualifiedAppearenceLevels.join()))])])})],2)]),_vm._v(\" \"),_c('el-button',{attrs:{\"slot\":\"reference\",\"size\":\"mini\",\"type\":\"text\"},slot:\"reference\"},[_vm._v(\"详情\")])],1)]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"isStorageConfirmed\",\"label\":\"是否入库\",\"align\":\"center\",\"width\":\"60px\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('div',[(scope.row.isStorageConfirmed === 1)?_c('span',[_vm._v(\"是\")]):_c('span',{staticClass:\"text_danger\"},[_vm._v(\"否\")])])]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"isStored\",\"label\":\"入库类别\",\"align\":\"center\",\"width\":\"60px\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [(scope.row.isStorageConfirmed === 1)?_c('div',[(scope.row.isStored === 1)?_c('span',[_vm._v(\"计划内\")]):_vm._e(),_vm._v(\" \"),(scope.row.isStored === 2)?_c('span',[_vm._v(\"计划外\")]):_vm._e(),_vm._v(\" \"),(scope.row.isStored === 3)?_c('span',{staticClass:\"text_danger\"},[_vm._v(\"否\")]):_vm._e()]):_vm._e()]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"unStoreReason\",\"label\":\"不入库原因\",\"align\":\"center\",\"min-width\":\"70px\",\"show-overflow-tooltip\":true},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [(scope.row.isMeasureConfirmed === 1 || _vm.userinfo.roleId != 5)?_c('div',{staticClass:\"text_danger\"},[_vm._v(\"\\n            \"+_vm._s(scope.row.unStoreReason)+\"\\n          \")]):_c('div',[_c('el-input',{attrs:{\"size\":\"mini\"},model:{value:(scope.row.unStoreReason),callback:function ($$v) {_vm.$set(scope.row, \"unStoreReason\", $$v)},expression:\"scope.row.unStoreReason\"}})],1)]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"clients\",\"label\":\"判定去向\",\"align\":\"center\",\"width\":\"80px\",\"show-overflow-tooltip\":true},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [(scope.row.isMeasureConfirmed === 1 || _vm.userinfo.roleId != 5)?_c('div',[_vm._v(\"\\n            \"+_vm._s(scope.row.clients ? scope.row.clients.toString() : \"\")+\"\\n          \")]):_c('div',[_c('el-select',{attrs:{\"size\":\"mini\",\"placeholder\":\"\",\"multiple\":\"\",\"collapse-tags\":\"\"},model:{value:(scope.row.clients),callback:function ($$v) {_vm.$set(scope.row, \"clients\", $$v)},expression:\"scope.row.clients\"}},_vm._l((_vm.clientsList),function(item){return _c('el-option',{key:item.clientsId,attrs:{\"label\":item.client,\"value\":item.client,\"disabled\":item.isFlat === 0 && scope.row.isFlat === 1}})}),1)],1)]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"measureDate\",\"label\":\"检测时间\",\"align\":\"center\",\"width\":\"100px\",\"formatter\":_vm.dateTimeFormat,\"show-overflow-tooltip\":true}}),_vm._v(\" \"),(_vm.userinfo.roleId == 5 || _vm.userinfo.roleId == 1)?_c('el-table-column',{attrs:{\"label\":\"操作\",\"align\":\"center\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [(scope.row.isMeasureConfirmed !== 1)?_c('el-button',{attrs:{\"size\":\"mini\",\"type\":\"success\",\"disabled\":!_vm.isEditable},on:{\"click\":function($event){return _vm.save(scope.row)}}},[_vm._v(\"保存\")]):_vm._e()]}}],null,false,2588052046)}):_vm._e()],1),_vm._v(\" \"),_c('el-pagination',{attrs:{\"background\":\"\",\"layout\":\"total,prev,pager,next\",\"total\":_vm.pageConfig.total,\"current-page\":_vm.pageConfig.current,\"page-size\":_vm.pageConfig.pageSize},on:{\"update:currentPage\":function($event){return _vm.$set(_vm.pageConfig, \"current\", $event)},\"update:current-page\":function($event){return _vm.$set(_vm.pageConfig, \"current\", $event)},\"current-change\":_vm.handleCurrentChange}}),_vm._v(\" \"),(_vm.applyInStoreModalVisible)?_c('ApplyInStoreModal',{attrs:{\"castId\":Number(_vm.castId),\"visible\":_vm.applyInStoreModalVisible},on:{\"close\":function () { return (this$1.applyInStoreModalVisible = false); },\"submit\":function () { return (this$1.applyInStoreModalVisible = false); }}}):_vm._e(),_vm._v(\" \"),_c('el-dialog',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.loading),expression:\"loading\"}],attrs:{\"title\":\"上传检测数据\",\"visible\":_vm.uploadExcelForm.visible,\"close-on-click-modal\":false,\"close-on-press-escape\":false,\"center\":true,\"width\":\"40%\",\"element-loading-text\":\"拼命加载中\"},on:{\"update:visible\":function($event){return _vm.$set(_vm.uploadExcelForm, \"visible\", $event)},\"close\":_vm.closeUploadDialog}},[_c('el-upload',{ref:\"upload\",staticClass:\"upload\",attrs:{\"action\":_vm.uploadExcelForm.url,\"file-list\":_vm.uploadExcelForm.fileList,\"multiple\":false,\"limit\":1,\"accept\":\".xlsx\",\"on-error\":_vm.uploadErrorHanler,\"on-success\":_vm.uploadSuccessHanler,\"auto-upload\":false}},[_c('el-button',{attrs:{\"slot\":\"trigger\",\"size\":\"small\",\"type\":\"primary\"},slot:\"trigger\"},[_vm._v(\"选取文件\")]),_vm._v(\" \"),_c('div',{staticClass:\"el-upload__tip\",attrs:{\"slot\":\"tip\"},slot:\"tip\"},[_vm._v(\"\\n          只能上传xlsx文件，且不超过500kb\\n        \")])],1),_vm._v(\" \"),_c('div',{attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.submitUploadForm}},[_vm._v(\"上传提交\")])],1)],1)],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-536850b2\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/pages/measure/measure.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-536850b2\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./measure.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./measure.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./measure.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-536850b2\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./measure.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-536850b2\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/pages/measure/measure.vue\n// module id = null\n// module chunks = ","module.exports = { \"default\": require(\"core-js/library/fn/get-iterator\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/core-js/get-iterator.js\n// module id = BO1k\n// module chunks = 1","// 19.1.2.14 Object.keys(O)\nvar toObject = require('./_to-object');\nvar $keys = require('./_object-keys');\n\nrequire('./_object-sap')('keys', function () {\n  return function keys(it) {\n    return $keys(toObject(it));\n  };\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/es6.object.keys.js\n// module id = Cdx3\n// module chunks = 1 2","require('../modules/web.dom.iterable');\nrequire('../modules/es6.string.iterator');\nmodule.exports = require('../modules/core.is-iterable');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/fn/is-iterable.js\n// module id = Xd32\n// module chunks = 1","\"use strict\";\n\nexports.__esModule = true;\n\nvar _isIterable2 = require(\"../core-js/is-iterable\");\n\nvar _isIterable3 = _interopRequireDefault(_isIterable2);\n\nvar _getIterator2 = require(\"../core-js/get-iterator\");\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = (0, _getIterator3.default)(arr), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if ((0, _isIterable3.default)(Object(arr))) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/helpers/slicedToArray.js\n// module id = d7EF\n// module chunks = 1","module.exports = { \"default\": require(\"core-js/library/fn/object/keys\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/core-js/object/keys.js\n// module id = fZjL\n// module chunks = 1 2","require('../modules/web.dom.iterable');\nrequire('../modules/es6.string.iterator');\nmodule.exports = require('../modules/core.get-iterator');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/fn/get-iterator.js\n// module id = fxRn\n// module chunks = 1","var anObject = require('./_an-object');\nvar get = require('./core.get-iterator-method');\nmodule.exports = require('./_core').getIterator = function (it) {\n  var iterFn = get(it);\n  if (typeof iterFn != 'function') throw TypeError(it + ' is not iterable!');\n  return anObject(iterFn.call(it));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/core.get-iterator.js\n// module id = g8Ux\n// module chunks = 1","require('../../modules/es6.object.keys');\nmodule.exports = require('../../modules/_core').Object.keys;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/fn/object/keys.js\n// module id = jFbC\n// module chunks = 1 2","// most Object methods by ES6 should accept primitives\nvar $export = require('./_export');\nvar core = require('./_core');\nvar fails = require('./_fails');\nmodule.exports = function (KEY, exec) {\n  var fn = (core.Object || {})[KEY] || Object[KEY];\n  var exp = {};\n  exp[KEY] = exec(fn);\n  $export($export.S + $export.F * fails(function () { fn(1); }), 'Object', exp);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_object-sap.js\n// module id = uqUo\n// module chunks = 1 2","module.exports = { \"default\": require(\"core-js/library/fn/is-iterable\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/core-js/is-iterable.js\n// module id = us/S\n// module chunks = 1"],"sourceRoot":""}